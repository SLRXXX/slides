!function(a){"undefined"!=typeof define&&define.amd?define(["exports"],a):(window.qtek=window.qtek||{},a(window.qtek["2d"]={}))}(function(a){var b,d,e;!function(a){function c(a,b){return u.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m=b&&b.split("/"),n=s.map,o=n&&n["*"]||{};if(a&&"."===a.charAt(0))if(b){for(m=m.slice(0,m.length-1),a=m.concat(a.split("/")),j=0;j<a.length;j+=1)if(l=a[j],"."===l)a.splice(j,1),j-=1;else if(".."===l){if(1===j&&(".."===a[2]||".."===a[0]))break;j>0&&(a.splice(j-1,2),j-=2)}a=a.join("/")}else 0===a.indexOf("./")&&(a=a.substring(2));if((m||o)&&n){for(c=a.split("/"),j=c.length;j>0;j-=1){if(d=c.slice(0,j).join("/"),m)for(k=m.length;k>0;k-=1)if(e=n[m.slice(0,k).join("/")],e&&(e=e[d])){f=e,g=j;break}if(f)break;!h&&o&&o[d]&&(h=o[d],i=j)}!f&&h&&(f=h,g=i),f&&(c.splice(0,g,f),a=c.join("/"))}return a}function g(b,c){return function(){return n.apply(a,v.call(arguments,0).concat([b,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){q[a]=b}}function j(b){if(c(r,b)){var d=r[b];delete r[b],t[b]=!0,m.apply(a,d)}if(!c(q,b)&&!c(t,b))throw new Error("No "+b);return q[b]}function k(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return function(){return s&&s.config&&s.config[a]||{}}}var m,n,o,p,q={},r={},s={},t={},u=Object.prototype.hasOwnProperty,v=[].slice;o=function(a,b){var c,d=k(a),e=d[0];return a=d[1],e&&(e=f(e,b),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(b)):f(a,b):(a=f(a,b),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+"!"+a:a,n:a,pr:e,p:c}},p={require:function(a){return g(a)},exports:function(a){var b=q[a];return"undefined"!=typeof b?b:q[a]={}},module:function(a){return{id:a,uri:"",exports:q[a],config:l(a)}}},m=function(b,d,e,f){var h,k,l,m,n,s,u=[];if(f=f||b,"function"==typeof e){for(d=!d.length&&e.length?["require","exports","module"]:d,n=0;n<d.length;n+=1)if(m=o(d[n],f),k=m.f,"require"===k)u[n]=p.require(b);else if("exports"===k)u[n]=p.exports(b),s=!0;else if("module"===k)h=u[n]=p.module(b);else if(c(q,k)||c(r,k)||c(t,k))u[n]=j(k);else{if(!m.p)throw new Error(b+" missing "+k);m.p.load(m.n,g(f,!0),i(k),{}),u[n]=q[k]}l=e.apply(q[b],u),b&&(h&&h.exports!==a&&h.exports!==q[b]?q[b]=h.exports:l===a&&s||(q[b]=l))}else b&&(q[b]=e)},b=d=n=function(b,c,d,e,f){return"string"==typeof b?p[b]?p[b](c):j(o(b,c).f):(b.splice||(s=b,c.splice?(b=c,c=d,d=null):b=a),c=c||function(){},"function"==typeof d&&(d=e,e=f),e?m(a,b,c,d):setTimeout(function(){m(a,b,c,d)},4),n)},n.config=function(a){return s=a,s.deps&&n(s.deps,s.callback),n},e=function(a,b,d){b.splice||(d=b,b=[]),c(q,a)||c(r,a)||(r[a]=[a,b,d])},e.amd={jQuery:!0}}(),e("qtek/core/mixin/derive",["require"],function(){function a(a,d,e){"object"==typeof d&&(e=d,d=null);var f,g=this;if(!(a instanceof Function)){f=[];for(var h in a)a.hasOwnProperty(h)&&f.push(h)}var i=function(){if(g.apply(this,arguments),a instanceof Function?b(this,a.call(this)):c(this,a,f),this.constructor===i)for(var d=i.__initializers__,e=0;e<d.length;e++)d[e].apply(this,arguments)};i.__super__=g,i.__initializers__=g.__initializers__?g.__initializers__.slice():[],d&&i.__initializers__.push(d);var j=function(){};return j.prototype=g.prototype,i.prototype=new j,i.prototype.constructor=i,b(i.prototype,e),i.derive=g.derive,i}function b(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}function c(a,b,c){for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}}return{derive:a}}),e("qtek/core/mixin/notifier",[],function(){function a(a,b){this.action=a,this.context=b}var b={trigger:function(a){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(a)){var b=this.__handlers__[a],c=b.length,d=-1,e=arguments;switch(e.length){case 1:for(;++d<c;)b[d].action.call(b[d].context);return;case 2:for(;++d<c;)b[d].action.call(b[d].context,e[1]);return;case 3:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2]);return;case 4:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3]);return;case 5:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3],e[4]);return;default:for(;++d<c;)b[d].action.apply(b[d].context,Array.prototype.slice.call(e,1));return}}},on:function(b,c,d){if(b&&c){var e=this.__handlers__||(this.__handlers__={});if(e[b]){if(this.has(b,c))return}else e[b]=[];var f=new a(c,d||this);return e[b].push(f),this}},once:function(a,b,c){function d(){e.off(a,d),b.apply(this,arguments)}if(a&&b){var e=this;return this.on(a,d,c)}},before:function(a,b,c){return a&&b?(a="before"+a,this.on(a,b,c)):void 0},after:function(a,b,c){return a&&b?(a="after"+a,this.on(a,b,c)):void 0},success:function(a,b){return this.once("success",a,b)},error:function(a,b){return this.once("error",a,b)},off:function(a,b){var c=this.__handlers__||(this.__handlers__={});if(!b)return void(c[a]=[]);if(c[a]){for(var d=c[a],e=[],f=0;f<d.length;f++)b&&d[f].action!==b&&e.push(d[f]);c[a]=e}return this},has:function(a,b){var c=this.__handlers__;if(!c||!c[a])return!1;for(var d=c[a],e=0;e<d.length;e++)if(d[e].action===b)return!0}};return b}),e("qtek/core/util",["require"],function(){var a=0,b={genGUID:function(){return++a},relative2absolute:function(a,b){if(!b||a.match(/^\//))return a;for(var c=a.split("/"),d=b.split("/"),e=c[0];"."===e||".."===e;)".."===e&&d.pop(),c.shift(),e=c[0];return d.join("/")+"/"+c.join("/")},extend:function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a},defaults:function(a,b){if(b)for(var c in b)void 0===a[c]&&(a[c]=b[c]);return a},extendWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}return a},defaultsWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];void 0===a[e]&&(a[e]=b[e])}return a},each:function(a,b,c){if(a&&b)if(a.forEach)a.forEach(b,c);else if(a.length===+a.length)for(var d=0,e=a.length;e>d;d++)b.call(c,a[d],d,a);else for(var f in a)a.hasOwnProperty(f)&&b.call(c,a[f],f,a)},isObject:function(a){return a===Object(a)},isArray:function(a){return a instanceof Array},isArrayLike:function(a){return a?a.length===+a.length:!1},clone:function(a){if(b.isObject(a)){if(b.isArray(a))return a.slice();if(b.isArrayLike(a)){for(var c=new a.constructor(a.length),d=0;d<a.length;d++)c[d]=a[d];return c}return b.extend({},a)}return a}};return b}),e("qtek/core/Base",["require","./mixin/derive","./mixin/notifier","./util"],function(a){var b=a("./mixin/derive"),c=a("./mixin/notifier"),d=a("./util"),e=function(){this.__GUID__=d.genGUID()};return e.__initializers__=[function(a){d.extend(this,a)}],d.extend(e,b),d.extend(e.prototype,c),e}),e("qtek-2d/CanvasRenderer",["require","qtek/core/Base"],function(a){var b=a("qtek/core/Base"),c=b.derive(function(){return{canvas:null,ctx:null,width:0,height:0}},function(){this.canvas||(this.canvas=document.createElement("canvas")),this.width?this.canvas.width=this.width:this.width=this.canvas.width,this.height?this.canvas.height=this.height:this.height=this.canvas.height,this.ctx=this.canvas.getContext("2d"),this.ctx.__GUID__=this.__GUID__},{resize:function(a,b){this.canvas.width=a,this.canvas.height=b,this.width=a,this.height=b},render:function(a,b){if(this.clearColor?(this.ctx.fillStyle=this.clearColor,this.ctx.fillRect(0,0,this.width,this.height)):this.ctx.clearRect(0,0,this.width,this.height),b){var c=b.getViewMatrix()._array;this.ctx.transform(c[0],c[1],c[2],c[3],c[4],c[5])}a.render(this.ctx)}});return c}),function(a){var b={};"undefined"==typeof exports?"function"==typeof e&&"object"==typeof e.amd&&e.amd?(b.exports={},e("glmatrix",[],function(){return b.exports})):b.exports="undefined"!=typeof window?window:a:b.exports=exports,function(a){if(!b)var b=1e-6;if(!c)var c="undefined"!=typeof Float32Array?Float32Array:Array;if(!d)var d=Math.random;var e={};e.setMatrixArrayType=function(a){c=a},"undefined"!=typeof a&&(a.glMatrix=e);var f=Math.PI/180;e.toRadian=function(a){return a*f};var g={};g.create=function(){var a=new c(2);return a[0]=0,a[1]=0,a},g.clone=function(a){var b=new c(2);return b[0]=a[0],b[1]=a[1],b},g.fromValues=function(a,b){var d=new c(2);return d[0]=a,d[1]=b,d},g.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a},g.set=function(a,b,c){return a[0]=b,a[1]=c,a},g.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a},g.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a},g.sub=g.subtract,g.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a},g.mul=g.multiply,g.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a},g.div=g.divide,g.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a},g.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a},g.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a},g.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a},g.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return Math.sqrt(c*c+d*d)},g.dist=g.distance,g.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return c*c+d*d},g.sqrDist=g.squaredDistance,g.length=function(a){var b=a[0],c=a[1];return Math.sqrt(b*b+c*c)},g.len=g.length,g.squaredLength=function(a){var b=a[0],c=a[1];return b*b+c*c},g.sqrLen=g.squaredLength,g.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a},g.normalize=function(a,b){var c=b[0],d=b[1],e=c*c+d*d;return e>0&&(e=1/Math.sqrt(e),a[0]=b[0]*e,a[1]=b[1]*e),a},g.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]},g.cross=function(a,b,c){var d=b[0]*c[1]-b[1]*c[0];return a[0]=a[1]=0,a[2]=d,a},g.lerp=function(a,b,c,d){var e=b[0],f=b[1];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a},g.random=function(a,b){b=b||1;var c=2*d()*Math.PI;return a[0]=Math.cos(c)*b,a[1]=Math.sin(c)*b,a},g.transformMat2=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e,a[1]=c[1]*d+c[3]*e,a},g.transformMat2d=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e+c[4],a[1]=c[1]*d+c[3]*e+c[5],a},g.transformMat3=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[3]*e+c[6],a[1]=c[1]*d+c[4]*e+c[7],a},g.transformMat4=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[4]*e+c[12],a[1]=c[1]*d+c[5]*e+c[13],a},g.forEach=function(){var a=g.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=2),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],f(a,a,g),b[h]=a[0],b[h+1]=a[1];return b}}(),g.str=function(a){return"vec2("+a[0]+", "+a[1]+")"},"undefined"!=typeof a&&(a.vec2=g);var h={};h.create=function(){var a=new c(3);return a[0]=0,a[1]=0,a[2]=0,a},h.clone=function(a){var b=new c(3);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b},h.fromValues=function(a,b,d){var e=new c(3);return e[0]=a,e[1]=b,e[2]=d,e},h.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a},h.set=function(a,b,c,d){return a[0]=b,a[1]=c,a[2]=d,a},h.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a},h.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a},h.sub=h.subtract,h.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a},h.mul=h.multiply,h.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a},h.div=h.divide,h.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a},h.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a},h.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a},h.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a},h.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return Math.sqrt(c*c+d*d+e*e)},h.dist=h.distance,h.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return c*c+d*d+e*e},h.sqrDist=h.squaredDistance,h.length=function(a){var b=a[0],c=a[1],d=a[2];return Math.sqrt(b*b+c*c+d*d)},h.len=h.length,h.squaredLength=function(a){var b=a[0],c=a[1],d=a[2];return b*b+c*c+d*d},h.sqrLen=h.squaredLength,h.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a},h.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=c*c+d*d+e*e;return f>0&&(f=1/Math.sqrt(f),a[0]=b[0]*f,a[1]=b[1]*f,a[2]=b[2]*f),a},h.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]},h.cross=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2];return a[0]=e*i-f*h,a[1]=f*g-d*i,a[2]=d*h-e*g,a},h.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a},h.random=function(a,b){b=b||1;var c=2*d()*Math.PI,e=2*d()-1,f=Math.sqrt(1-e*e)*b;return a[0]=Math.cos(c)*f,a[1]=Math.sin(c)*f,a[2]=e*b,a},h.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2];return a[0]=c[0]*d+c[4]*e+c[8]*f+c[12],a[1]=c[1]*d+c[5]*e+c[9]*f+c[13],a[2]=c[2]*d+c[6]*e+c[10]*f+c[14],a},h.transformMat3=function(a,b,c){var d=b[0],e=b[1],f=b[2];return a[0]=d*c[0]+e*c[3]+f*c[6],a[1]=d*c[1]+e*c[4]+f*c[7],a[2]=d*c[2]+e*c[5]+f*c[8],a},h.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},h.forEach=function(){var a=h.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=3),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2];return b}}(),h.str=function(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"},"undefined"!=typeof a&&(a.vec3=h);var i={};i.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=0,a},i.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},i.fromValues=function(a,b,d,e){var f=new c(4);return f[0]=a,f[1]=b,f[2]=d,f[3]=e,f},i.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},i.set=function(a,b,c,d,e){return a[0]=b,a[1]=c,a[2]=d,a[3]=e,a},i.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a[3]=b[3]+c[3],a},i.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a[3]=b[3]-c[3],a},i.sub=i.subtract,i.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a[3]=b[3]*c[3],a},i.mul=i.multiply,i.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a[3]=b[3]/c[3],a},i.div=i.divide,i.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a[3]=Math.min(b[3],c[3]),a},i.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a[3]=Math.max(b[3],c[3]),a},i.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a[3]=b[3]*c,a},i.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a[3]=b[3]+c[3]*d,a},i.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return Math.sqrt(c*c+d*d+e*e+f*f)},i.dist=i.distance,i.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return c*c+d*d+e*e+f*f},i.sqrDist=i.squaredDistance,i.length=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return Math.sqrt(b*b+c*c+d*d+e*e)},i.len=i.length,i.squaredLength=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return b*b+c*c+d*d+e*e},i.sqrLen=i.squaredLength,i.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=-b[3],a},i.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f;return g>0&&(g=1/Math.sqrt(g),a[0]=b[0]*g,a[1]=b[1]*g,a[2]=b[2]*g,a[3]=b[3]*g),a},i.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]},i.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2],h=b[3];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a[3]=h+d*(c[3]-h),a},i.random=function(a,b){return b=b||1,a[0]=d(),a[1]=d(),a[2]=d(),a[3]=d(),i.normalize(a,a),i.scale(a,a,b),a},i.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3];return a[0]=c[0]*d+c[4]*e+c[8]*f+c[12]*g,a[1]=c[1]*d+c[5]*e+c[9]*f+c[13]*g,a[2]=c[2]*d+c[6]*e+c[10]*f+c[14]*g,a[3]=c[3]*d+c[7]*e+c[11]*f+c[15]*g,a},i.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},i.forEach=function(){var a=i.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=4),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],a[3]=b[h+3],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2],b[h+3]=a[3];return b}}(),i.str=function(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.vec4=i);var j={};j.create=function(){var a=new c(4);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},j.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},j.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.transpose=function(a,b){if(a===b){var c=b[1];a[1]=b[2],a[2]=c}else a[0]=b[0],a[1]=b[2],a[2]=b[1],a[3]=b[3];return a},j.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*f-e*d;return g?(g=1/g,a[0]=f*g,a[1]=-d*g,a[2]=-e*g,a[3]=c*g,a):null},j.adjoint=function(a,b){var c=b[0];return a[0]=b[3],a[1]=-b[1],a[2]=-b[2],a[3]=c,a},j.determinant=function(a){return a[0]*a[3]-a[2]*a[1]},j.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*h+e*j,a[1]=d*i+e*k,a[2]=f*h+g*j,a[3]=f*i+g*k,a},j.mul=j.multiply,j.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+e*h,a[1]=d*-h+e*i,a[2]=f*i+g*h,a[3]=f*-h+g*i,a},j.scale=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1];return a[0]=d*h,a[1]=e*i,a[2]=f*h,a[3]=g*i,a},j.str=function(a){return"mat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.mat2=j);var k={};k.create=function(){var a=new c(6);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.clone=function(a){var b=new c(6);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b},k.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a},k.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=c*f-d*e;return i?(i=1/i,a[0]=f*i,a[1]=-d*i,a[2]=-e*i,a[3]=c*i,a[4]=(e*h-f*g)*i,a[5]=(d*g-c*h)*i,a):null},k.determinant=function(a){return a[0]*a[3]-a[1]*a[2]},k.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=c[0],k=c[1],l=c[2],m=c[3],n=c[4],o=c[5];return a[0]=d*j+e*l,a[1]=d*k+e*m,a[2]=f*j+g*l,a[3]=f*k+g*m,a[4]=j*h+l*i+n,a[5]=k*h+m*i+o,a},k.mul=k.multiply,k.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=Math.sin(c),k=Math.cos(c);return a[0]=d*k+e*j,a[1]=-d*j+e*k,a[2]=f*k+g*j,a[3]=-f*j+k*g,a[4]=k*h+j*i,a[5]=k*i-j*h,a},k.scale=function(a,b,c){var d=c[0],e=c[1];return a[0]=b[0]*d,a[1]=b[1]*e,a[2]=b[2]*d,a[3]=b[3]*e,a[4]=b[4]*d,a[5]=b[5]*e,a},k.translate=function(a,b,c){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4]+c[0],a[5]=b[5]+c[1],a},k.str=function(a){return"mat2d("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+")"},"undefined"!=typeof a&&(a.mat2d=k);var l={};l.create=function(){var a=new c(9);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.fromMat4=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[4],a[4]=b[5],a[5]=b[6],a[6]=b[8],a[7]=b[9],a[8]=b[10],a},l.clone=function(a){var b=new c(9);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b},l.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[5];a[1]=b[3],a[2]=b[6],a[3]=c,a[5]=b[7],a[6]=d,a[7]=e}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},l.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=k*g-h*j,m=-k*f+h*i,n=j*f-g*i,o=c*l+d*m+e*n;return o?(o=1/o,a[0]=l*o,a[1]=(-k*d+e*j)*o,a[2]=(h*d-e*g)*o,a[3]=m*o,a[4]=(k*c-e*i)*o,a[5]=(-h*c+e*f)*o,a[6]=n*o,a[7]=(-j*c+d*i)*o,a[8]=(g*c-d*f)*o,a):null},l.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8];return a[0]=g*k-h*j,a[1]=e*j-d*k,a[2]=d*h-e*g,a[3]=h*i-f*k,a[4]=c*k-e*i,a[5]=e*f-c*h,a[6]=f*j-g*i,a[7]=d*i-c*j,a[8]=c*g-d*f,a},l.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*(j*f-g*i)+c*(-j*e+g*h)+d*(i*e-f*h)},l.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1],o=c[2],p=c[3],q=c[4],r=c[5],s=c[6],t=c[7],u=c[8];return a[0]=m*d+n*g+o*j,a[1]=m*e+n*h+o*k,a[2]=m*f+n*i+o*l,a[3]=p*d+q*g+r*j,a[4]=p*e+q*h+r*k,a[5]=p*f+q*i+r*l,a[6]=s*d+t*g+u*j,a[7]=s*e+t*h+u*k,a[8]=s*f+t*i+u*l,a},l.mul=l.multiply,l.translate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1];return a[0]=d,a[1]=e,a[2]=f,a[3]=g,a[4]=h,a[5]=i,a[6]=m*d+n*g+j,a[7]=m*e+n*h+k,a[8]=m*f+n*i+l,a},l.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=Math.sin(c),n=Math.cos(c);return a[0]=n*d+m*g,a[1]=n*e+m*h,a[2]=n*f+m*i,a[3]=n*g-m*d,a[4]=n*h-m*e,a[5]=n*i-m*f,a[6]=j,a[7]=k,a[8]=l,a},l.scale=function(a,b,c){var d=c[0],e=c[1];return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=e*b[3],a[4]=e*b[4],a[5]=e*b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.fromMat2d=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=0,a[3]=b[2],a[4]=b[3],a[5]=0,a[6]=b[4],a[7]=b[5],a[8]=1,a},l.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[3]=k-r,a[6]=m+q,a[1]=k+r,a[4]=1-j-o,a[7]=n-p,a[2]=m-q,a[5]=n+p,a[8]=1-j-l,a},l.normalFromMat4=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(i*A-g*D-j*z)*E,a[2]=(g*C-h*A+j*y)*E,a[3]=(e*C-d*D-f*B)*E,a[4]=(c*D-e*A+f*z)*E,a[5]=(d*A-c*C-f*y)*E,a[6]=(p*x-q*w+r*v)*E,a[7]=(q*u-o*x-r*t)*E,a[8]=(o*w-p*u+r*s)*E,a):null},l.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"},"undefined"!=typeof a&&(a.mat3=l);var m={};m.create=function(){var a=new c(16);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.clone=function(a){var b=new c(16);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15],b},m.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[3],f=b[6],g=b[7],h=b[11];a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=c,a[6]=b[9],a[7]=b[13],a[8]=d,a[9]=f,a[11]=b[14],a[12]=e,a[13]=g,a[14]=h}else a[0]=b[0],a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=b[1],a[5]=b[5],a[6]=b[9],a[7]=b[13],a[8]=b[2],a[9]=b[6],a[10]=b[10],a[11]=b[14],a[12]=b[3],a[13]=b[7],a[14]=b[11],a[15]=b[15];return a},m.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(e*C-d*D-f*B)*E,a[2]=(p*x-q*w+r*v)*E,a[3]=(m*w-l*x-n*v)*E,a[4]=(i*A-g*D-j*z)*E,a[5]=(c*D-e*A+f*z)*E,a[6]=(q*u-o*x-r*t)*E,a[7]=(k*x-m*u+n*t)*E,a[8]=(g*C-h*A+j*y)*E,a[9]=(d*A-c*C-f*y)*E,a[10]=(o*w-p*u+r*s)*E,a[11]=(l*u-k*w-n*s)*E,a[12]=(h*z-g*B-i*y)*E,a[13]=(c*B-d*z+e*y)*E,a[14]=(p*t-o*v-q*s)*E,a[15]=(k*v-l*t+m*s)*E,a):null},m.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15];return a[0]=h*(m*r-n*q)-l*(i*r-j*q)+p*(i*n-j*m),a[1]=-(d*(m*r-n*q)-l*(e*r-f*q)+p*(e*n-f*m)),a[2]=d*(i*r-j*q)-h*(e*r-f*q)+p*(e*j-f*i),a[3]=-(d*(i*n-j*m)-h*(e*n-f*m)+l*(e*j-f*i)),a[4]=-(g*(m*r-n*q)-k*(i*r-j*q)+o*(i*n-j*m)),a[5]=c*(m*r-n*q)-k*(e*r-f*q)+o*(e*n-f*m),a[6]=-(c*(i*r-j*q)-g*(e*r-f*q)+o*(e*j-f*i)),a[7]=c*(i*n-j*m)-g*(e*n-f*m)+k*(e*j-f*i),a[8]=g*(l*r-n*p)-k*(h*r-j*p)+o*(h*n-j*l),a[9]=-(c*(l*r-n*p)-k*(d*r-f*p)+o*(d*n-f*l)),a[10]=c*(h*r-j*p)-g*(d*r-f*p)+o*(d*j-f*h),a[11]=-(c*(h*n-j*l)-g*(d*n-f*l)+k*(d*j-f*h)),a[12]=-(g*(l*q-m*p)-k*(h*q-i*p)+o*(h*m-i*l)),a[13]=c*(l*q-m*p)-k*(d*q-e*p)+o*(d*m-e*l),a[14]=-(c*(h*q-i*p)-g*(d*q-e*p)+o*(d*i-e*h)),a[15]=c*(h*m-i*l)-g*(d*m-e*l)+k*(d*i-e*h),a},m.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=b*g-c*f,s=b*h-d*f,t=b*i-e*f,u=c*h-d*g,v=c*i-e*g,w=d*i-e*h,x=j*o-k*n,y=j*p-l*n,z=j*q-m*n,A=k*p-l*o,B=k*q-m*o,C=l*q-m*p;return r*C-s*B+t*A+u*z-v*y+w*x},m.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],p=b[12],q=b[13],r=b[14],s=b[15],t=c[0],u=c[1],v=c[2],w=c[3];return a[0]=t*d+u*h+v*l+w*p,a[1]=t*e+u*i+v*m+w*q,a[2]=t*f+u*j+v*n+w*r,a[3]=t*g+u*k+v*o+w*s,t=c[4],u=c[5],v=c[6],w=c[7],a[4]=t*d+u*h+v*l+w*p,a[5]=t*e+u*i+v*m+w*q,a[6]=t*f+u*j+v*n+w*r,a[7]=t*g+u*k+v*o+w*s,t=c[8],u=c[9],v=c[10],w=c[11],a[8]=t*d+u*h+v*l+w*p,a[9]=t*e+u*i+v*m+w*q,a[10]=t*f+u*j+v*n+w*r,a[11]=t*g+u*k+v*o+w*s,t=c[12],u=c[13],v=c[14],w=c[15],a[12]=t*d+u*h+v*l+w*p,a[13]=t*e+u*i+v*m+w*q,a[14]=t*f+u*j+v*n+w*r,a[15]=t*g+u*k+v*o+w*s,a},m.mul=m.multiply,m.translate=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t=c[0],u=c[1],v=c[2];return d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],p=b[12],q=b[13],r=b[14],s=b[15],a[0]=d+g*t,a[1]=e+g*u,a[2]=f+g*v,a[3]=g,a[4]=h+k*t,a[5]=i+k*u,a[6]=j+k*v,a[7]=k,a[8]=l+o*t,a[9]=m+o*u,a[10]=n+o*v,a[11]=o,a[12]=p+s*t,a[13]=q+s*u,a[14]=r+s*v,a[15]=s,a},m.scale=function(a,b,c){var d=c[0],e=c[1],f=c[2];return a[0]=b[0]*d,a[1]=b[1]*d,a[2]=b[2]*d,a[3]=b[3]*d,a[4]=b[4]*e,a[5]=b[5]*e,a[6]=b[6]*e,a[7]=b[7]*e,a[8]=b[8]*f,a[9]=b[9]*f,a[10]=b[10]*f,a[11]=b[11]*f,a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.rotate=function(a,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=e[0],E=e[1],F=e[2],G=Math.sqrt(D*D+E*E+F*F);return Math.abs(G)<b?null:(G=1/G,D*=G,E*=G,F*=G,f=Math.sin(d),g=Math.cos(d),h=1-g,i=c[0],j=c[1],k=c[2],l=c[3],m=c[4],n=c[5],o=c[6],p=c[7],q=c[8],r=c[9],s=c[10],t=c[11],u=D*D*h+g,v=E*D*h+F*f,w=F*D*h-E*f,x=D*E*h-F*f,y=E*E*h+g,z=F*E*h+D*f,A=D*F*h+E*f,B=E*F*h-D*f,C=F*F*h+g,a[0]=i*u+m*v+q*w,a[1]=j*u+n*v+r*w,a[2]=k*u+o*v+s*w,a[3]=l*u+p*v+t*w,a[4]=i*x+m*y+q*z,a[5]=j*x+n*y+r*z,a[6]=k*x+o*y+s*z,a[7]=l*x+p*y+t*z,a[8]=i*A+m*B+q*C,a[9]=j*A+n*B+r*C,a[10]=k*A+o*B+s*C,a[11]=l*A+p*B+t*C,c!==a&&(a[12]=c[12],a[13]=c[13],a[14]=c[14],a[15]=c[15]),a)},m.rotateX=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[4],g=b[5],h=b[6],i=b[7],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[4]=f*e+j*d,a[5]=g*e+k*d,a[6]=h*e+l*d,a[7]=i*e+m*d,a[8]=j*e-f*d,a[9]=k*e-g*d,a[10]=l*e-h*d,a[11]=m*e-i*d,a},m.rotateY=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e-j*d,a[1]=g*e-k*d,a[2]=h*e-l*d,a[3]=i*e-m*d,a[8]=f*d+j*e,a[9]=g*d+k*e,a[10]=h*d+l*e,a[11]=i*d+m*e,a},m.rotateZ=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[4],k=b[5],l=b[6],m=b[7];return b!==a&&(a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e+j*d,a[1]=g*e+k*d,a[2]=h*e+l*d,a[3]=i*e+m*d,a[4]=j*e-f*d,a[5]=k*e-g*d,a[6]=l*e-h*d,a[7]=m*e-i*d,a},m.fromRotationTranslation=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=d+d,i=e+e,j=f+f,k=d*h,l=d*i,m=d*j,n=e*i,o=e*j,p=f*j,q=g*h,r=g*i,s=g*j;return a[0]=1-(n+p),a[1]=l+s,a[2]=m-r,a[3]=0,a[4]=l-s,a[5]=1-(k+p),a[6]=o+q,a[7]=0,a[8]=m+r,a[9]=o-q,a[10]=1-(k+n),a[11]=0,a[12]=c[0],a[13]=c[1],a[14]=c[2],a[15]=1,a},m.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[1]=k+r,a[2]=m-q,a[3]=0,a[4]=k-r,a[5]=1-j-o,a[6]=n+p,a[7]=0,a[8]=m+q,a[9]=n-p,a[10]=1-j-l,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.frustum=function(a,b,c,d,e,f,g){var h=1/(c-b),i=1/(e-d),j=1/(f-g);return a[0]=2*f*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*f*i,a[6]=0,a[7]=0,a[8]=(c+b)*h,a[9]=(e+d)*i,a[10]=(g+f)*j,a[11]=-1,a[12]=0,a[13]=0,a[14]=g*f*2*j,a[15]=0,a},m.perspective=function(a,b,c,d,e){var f=1/Math.tan(b/2),g=1/(d-e);return a[0]=f/c,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=f,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=(e+d)*g,a[11]=-1,a[12]=0,a[13]=0,a[14]=2*e*d*g,a[15]=0,a},m.ortho=function(a,b,c,d,e,f,g){var h=1/(b-c),i=1/(d-e),j=1/(f-g);return a[0]=-2*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=-2*i,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=2*j,a[11]=0,a[12]=(b+c)*h,a[13]=(e+d)*i,a[14]=(g+f)*j,a[15]=1,a},m.lookAt=function(a,c,d,e){var f,g,h,i,j,k,l,n,o,p,q=c[0],r=c[1],s=c[2],t=e[0],u=e[1],v=e[2],w=d[0],x=d[1],y=d[2];return Math.abs(q-w)<b&&Math.abs(r-x)<b&&Math.abs(s-y)<b?m.identity(a):(l=q-w,n=r-x,o=s-y,p=1/Math.sqrt(l*l+n*n+o*o),l*=p,n*=p,o*=p,f=u*o-v*n,g=v*l-t*o,h=t*n-u*l,p=Math.sqrt(f*f+g*g+h*h),p?(p=1/p,f*=p,g*=p,h*=p):(f=0,g=0,h=0),i=n*h-o*g,j=o*f-l*h,k=l*g-n*f,p=Math.sqrt(i*i+j*j+k*k),p?(p=1/p,i*=p,j*=p,k*=p):(i=0,j=0,k=0),a[0]=f,a[1]=i,a[2]=l,a[3]=0,a[4]=g,a[5]=j,a[6]=n,a[7]=0,a[8]=h,a[9]=k,a[10]=o,a[11]=0,a[12]=-(f*q+g*r+h*s),a[13]=-(i*q+j*r+k*s),a[14]=-(l*q+n*r+o*s),a[15]=1,a)},m.str=function(a){return"mat4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+")"},"undefined"!=typeof a&&(a.mat4=m);var n={};n.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.rotationTo=function(){var a=h.create(),b=h.fromValues(1,0,0),c=h.fromValues(0,1,0);return function(d,e,f){var g=h.dot(e,f);return-.999999>g?(h.cross(a,b,e),h.length(a)<1e-6&&h.cross(a,c,e),h.normalize(a,a),n.setAxisAngle(d,a,Math.PI),d):g>.999999?(d[0]=0,d[1]=0,d[2]=0,d[3]=1,d):(h.cross(a,e,f),d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=1+g,n.normalize(d,d))}}(),n.setAxes=function(){var a=l.create();return function(b,c,d,e){return a[0]=d[0],a[3]=d[1],a[6]=d[2],a[1]=e[0],a[4]=e[1],a[7]=e[2],a[2]=-c[0],a[5]=-c[1],a[8]=-c[2],n.normalize(b,n.fromMat3(b,a))}}(),n.clone=i.clone,n.fromValues=i.fromValues,n.copy=i.copy,n.set=i.set,n.identity=function(a){return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.setAxisAngle=function(a,b,c){c=.5*c;var d=Math.sin(c);return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=Math.cos(c),a},n.add=i.add,n.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*k+g*h+e*j-f*i,a[1]=e*k+g*i+f*h-d*j,a[2]=f*k+g*j+d*i-e*h,a[3]=g*k-d*h-e*i-f*j,a},n.mul=n.multiply,n.scale=i.scale,n.rotateX=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+g*h,a[1]=e*i+f*h,a[2]=f*i-e*h,a[3]=g*i-d*h,a},n.rotateY=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i-f*h,a[1]=e*i+g*h,a[2]=f*i+d*h,a[3]=g*i-e*h,a},n.rotateZ=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+e*h,a[1]=e*i-d*h,a[2]=f*i+g*h,a[3]=g*i-f*h,a},n.calculateW=function(a,b){var c=b[0],d=b[1],e=b[2];return a[0]=c,a[1]=d,a[2]=e,a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a
},n.dot=i.dot,n.lerp=i.lerp,n.slerp=function(a,b,c,d){var e,f,g,h,i,j=b[0],k=b[1],l=b[2],m=b[3],n=c[0],o=c[1],p=c[2],q=c[3];return f=j*n+k*o+l*p+m*q,0>f&&(f=-f,n=-n,o=-o,p=-p,q=-q),1-f>1e-6?(e=Math.acos(f),g=Math.sin(e),h=Math.sin((1-d)*e)/g,i=Math.sin(d*e)/g):(h=1-d,i=d),a[0]=h*j+i*n,a[1]=h*k+i*o,a[2]=h*l+i*p,a[3]=h*m+i*q,a},n.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f,h=g?1/g:0;return a[0]=-c*h,a[1]=-d*h,a[2]=-e*h,a[3]=f*h,a},n.conjugate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=b[3],a},n.length=i.length,n.len=n.length,n.squaredLength=i.squaredLength,n.sqrLen=n.squaredLength,n.normalize=i.normalize,n.fromMat3=function(a,b){var c,d=b[0]+b[4]+b[8];if(d>0)c=Math.sqrt(d+1),a[3]=.5*c,c=.5/c,a[0]=(b[7]-b[5])*c,a[1]=(b[2]-b[6])*c,a[2]=(b[3]-b[1])*c;else{var e=0;b[4]>b[0]&&(e=1),b[8]>b[3*e+e]&&(e=2);var f=(e+1)%3,g=(e+2)%3;c=Math.sqrt(b[3*e+e]-b[3*f+f]-b[3*g+g]+1),a[e]=.5*c,c=.5/c,a[3]=(b[3*g+f]-b[3*f+g])*c,a[f]=(b[3*f+e]+b[3*e+f])*c,a[g]=(b[3*g+e]+b[3*e+g])*c}return a},n.str=function(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.quat=n)}(b.exports)}(this),e("qtek/math/Vector2",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.vec2,d=function(a,b){a=a||0,b=b||0,this._array=c.fromValues(a,b),this._dirty=!0};return d.prototype={constructor:d,get x(){return this._array[0]},set x(a){this._array[0]=a,this._dirty=!0},get y(){return this._array[1]},set y(a){this._array[1]=a,this._dirty=!0},add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b){return this._array[0]=a,this._array[1]=b,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._dirty=!0,this},clone:function(){return new d(this.x,this.y)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},cross:function(a,b){return c.cross(a._array,this._array,b._array),a._dirty=!0,this},dist:function(a){return c.dist(this._array,a._array)},distance:function(a){return c.distance(this._array,a._array)},div:function(a){return c.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return c.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},min:function(a){return c.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return c.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return c.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return c.random(this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return c.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return c.sqrDist(this._array,a._array)},squaredDistance:function(a){return c.squaredDistance(this._array,a._array)},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},sub:function(a){return c.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return c.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat2:function(a){return c.transformMat2(this._array,this._array,a._array),this._dirty=!0,this},transformMat2d:function(a){return c.transformMat2d(this._array,this._array,a._array),this._dirty=!0,this},transformMat3:function(a){return c.transformMat3(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return c.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d){return c.set(a._array,b,d),a._dirty=!0,a},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.cross=function(a,b,d){return c.cross(a._array,b._array,d._array),a._dirty=!0,a},d.dist=function(a,b){return c.distance(a._array,b._array)},d.distance=d.dist,d.div=function(a,b,d){return c.divide(a._array,b._array,d._array),a._dirty=!0,a},d.divide=d.div,d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.min=function(a,b,d){return c.min(a._array,b._array,d._array),a._dirty=!0,a},d.max=function(a,b,d){return c.max(a._array,b._array,d._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.negate=function(a,b){return c.negate(a._array,b._array),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.random=function(a,b){return c.random(a._array,b),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d),a._dirty=!0,a},d.scaleAndAdd=function(a,b,d,e){return c.scale(a._array,b._array,d._array,e),a._dirty=!0,a},d.sqrDist=function(a,b){return c.sqrDist(a._array,b._array)},d.squaredDistance=d.sqrDist,d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.sub=function(a,b,d){return c.subtract(a._array,b._array,d._array),a._dirty=!0,a},d.subtract=d.sub,d.transformMat2=function(a,b,d){return c.transformMat2(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat2d=function(a,b,d){return c.transformMat2d(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat3=function(a,b,d){return c.transformMat3(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat4=function(a,b,d){return c.transformMat4(a._array,b._array,d._array),a._dirty=!0,a},d}),e("qtek/core/Cache",[],function(){var a=function(){this._contextId=0,this._caches=[],this._context={}};return a.prototype={use:function(a,b){this._caches[a]||(this._caches[a]={},b&&(this._caches[a]=b())),this._contextId=a,this._context=this._caches[a]},put:function(a,b){this._context[a]=b},get:function(a){return this._context[a]},dirty:function(a){a=a||"";var b="__dirty__"+a;this.put(b,!0)},dirtyAll:function(a){a=a||"";for(var b="__dirty__"+a,c=0;c<this._caches.length;c++)this._caches[c]&&(this._caches[c][b]=!0)},fresh:function(a){a=a||"";var b="__dirty__"+a;this.put(b,!1)},freshAll:function(a){a=a||"";for(var b="__dirty__"+a,c=0;c<this._caches.length;c++)this._caches[c]&&(this._caches[c][b]=!1)},isDirty:function(a){a=a||"";var b="__dirty__"+a;return!this._context.hasOwnProperty(b)||this._context[b]===!0},deleteContext:function(a){delete this._caches[a],this._context={}},"delete":function(a){delete this._context[a]},clearAll:function(){this._caches={}},getContext:function(){return this._context},miss:function(a){return!this._context.hasOwnProperty(a)}},a.prototype.constructor=a,a}),e("qtek-2d/Gradient",["require","qtek/core/Base","qtek/math/Vector2","qtek/core/Cache"],function(a){var b=a("qtek/core/Base"),c=(a("qtek/math/Vector2"),a("qtek/core/Cache")),d=b.derive(function(){return{stops:[]}},function(){this.cache=new c},{addColorStop:function(a,b){this.stops.push([a,b]),this.dirty()},removeAt:function(a){this.stops.splice(a,1),this.dirty()},dirty:function(){for(var a in this.cache._caches)this.cache._caches[a].dirty=!0},getInstance:function(a){return this.cache.use(a.__GUID__),(this.cache.get("dirty")||this.cache.miss("gradient"))&&this.update(a),this.cache.get("gradient")},update:function(){}});return d}),e("qtek-2d/LinearGradient",["require","./Gradient","qtek/math/Vector2"],function(a){var b=a("./Gradient"),c=a("qtek/math/Vector2"),d=b.derive(function(){return{start:new c,end:new c(100,0)}},{update:function(a){for(var b=a.createLinearGradient(this.start.x,this.start.y,this.end.x,this.end.y),c=0;c<this.stops.length;c++){var d=this.stops[c];b.addColorStop(d[0],d[1])}this.cache.put("gradient",b)}});return d}),e("qtek/math/Matrix2d",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.mat2d,d=function(){this._array=c.create(),this._dirty=!0};return d.prototype={constructor:d,clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return c.determinant(this._array)},identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},rotate:function(a){return c.rotate(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return c.translate(this._array,this._array,a._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a._dirty=!0,a},d.translate=function(a,b,d){return c.translate(a._array,b._array,d._array),a._dirty=!0,a},d}),e("qtek-2d/Style",["require","qtek/core/Base"],function(a){function b(a){return(a||"").replace(/^(\s|\u00A0)+|(\s|\u00A0)+$/g,"")}var c=a("qtek/core/Base"),d=/([0-9\-]+)\s+([0-9\-]+)\s+([0-9]+)\s+(.+)/,e=c.derive({},{bind:function(a){var c=this.fillStyle||this.fill,e=this.strokeStyle||this.stroke,f=this.globalAlpha||this.alpha,g=this.globalCompositeOperation||this.composite;if(this.shadow){var h=d.exec(b(this.shadow));if(h)var i=parseInt(h[1]),j=parseInt(h[2]),k=h[3],l=h[4]}i=this.shadowOffsetX||i,j=this.shadowOffsetY||j,k=this.shadowBlur||k,l=this.shadowColor||l,void 0!==f&&(a.globalAlpha=f),g&&(a.globalCompositeOperation=g),void 0!==this.lineWidth&&(a.lineWidth=this.lineWidth),void 0!==this.lineCap&&(a.lineCap=this.lineCap),void 0!==this.lineJoin&&(a.lineJoin=this.lineJoin),void 0!==this.miterLimit&&(a.miterLimit=this.miterLimit),void 0!==i&&(a.shadowOffsetX=i),void 0!==j&&(a.shadowOffsetY=j),void 0!==k&&(a.shadowBlur=k),void 0!==l&&(a.shadowColor=l),this.font&&(a.font=this.font),this.textAlign&&(a.textAlign=this.textAlign),this.textBaseline&&(a.textBaseline=this.textBaseline),c&&(a.fillStyle=c.getInstance?c.getInstance(a):c),e&&(a.strokeStyle=e.getInstance?e.getInstance(a):e),this.lineDash&&(a.setLineDash?(a.setLineDash(this.lineDash),"number"==typeof this.lineDashOffset&&(a.lineDashOffset=this.lineDashOffset)):console.warn("Browser does not support setLineDash method"))}});return e}),e("qtek-2d/Node",["require","qtek/core/Base","qtek/core/util","qtek/math/Vector2","qtek/math/Matrix2d","./Style","glmatrix"],function(a){function b(a,b){return a.z===b.z?a.__GUID__>b.__GUID__?1:-1:a.z>b.z?1:-1}var c=a("qtek/core/Base"),d=(a("qtek/core/util"),a("qtek/math/Vector2")),e=a("qtek/math/Matrix2d"),f=(a("./Style"),a("glmatrix")),g=f.mat2d,h=(f.vec2,c.derive(function(){return{name:"",boundingBox:{min:new d,max:new d},z:0,style:null,position:new d(0,0),rotation:0,scale:new d(1,1),autoUpdate:!0,transform:new e,transformInverse:new e,_prevRotation:0,visible:!0,_children:[],intersectLineWidth:0,clip:!1,fill:!0,stroke:!1,enablePicking:!0}},{updateTransform:function(){var a=this.transform._array;this.autoUpdate&&(this.scale._dirty||this.position._dirty||this.rotation!==this._prevRotation)&&(g.identity(a,a),g.scale(a,a,this.scale._array),g.rotate(a,a,this.rotation),g.translate(a,a,this.position._array),this._prevRotation=this.rotation,this.scale._dirty=!1,this.position._dirty=!1)},updateTransformInverse:function(){g.invert(this.transformInverse._array,this.transform._array)},intersectBoundingBox:function(a,b){var c=this.boundingBox;return c.min.x<a&&a<c.max.x&&c.min.y<b&&b<c.max.y},add:function(a){a&&(this._children.push(a),a.parent&&a.parent.remove(a),a.parent=this)},remove:function(a){a&&(this._children.splice(this._children.indexOf(a),1),a.parent=null)},children:function(){return this._children.slice()},childAt:function(a){return this._children[a]},draw:null,render:function(a){this.trigger("beforerender",a);var b=this.getSortedRenderQueue();if(this.style)if(!this.style instanceof Array)for(var c=0;c<this.style.length;c++)this.style[c].bind(a);else this.style.bind&&this.style.bind(a);a.save(),this.updateTransform();var d=this.transform._array;a.transform(d[0],d[1],d[2],d[3],d[4],d[5]),this.draw&&this.draw(a),this.clip&&a.clip();for(var c=0;c<b.length;c++)b[c].render(a);a.restore(),this.trigger("afterrender",a)},traverse:function(a){a&&a(this);for(var b=this._children,c=0,d=b.length;d>c;c++)b[c].traverse(a)},intersect:function(){},getSortedRenderQueue:function(){var a=this._children.slice();return a.sort(b),a}}));return h}),e("qtek-2d/Pattern",["require","qtek/core/Base","qtek/math/Vector2","qtek/core/Cache"],function(a){var b=a("qtek/core/Base"),c=(a("qtek/math/Vector2"),a("qtek/core/Cache")),d=b.derive(function(){return{image:null,repetition:"repeat"}},function(){this.cache=new c},{getInstance:function(a){if(this.cache.use(a.__GUID__),this.cache.get("dirty")||this.cache.miss("pattern")){var b=a.createPattern(this.image,this.repetition);return this.cache.put("pattern",b),b}return this.cache.get("pattern")}});return d}),e("qtek-2d/RadialGradient",["require","./Gradient","qtek/math/Vector2"],function(a){var b=a("./Gradient"),c=a("qtek/math/Vector2"),d=b.derive(function(){return{start:new c,startRadius:0,end:new c,endRadius:0}},{update:function(a){for(var b=a.createRadialGradient(this.start.x,this.start.y,this.startRadius,this.end.x,this.end.y,this.endRadius),c=0;c<this.stops.length;c++){var d=this.stops[c];b.addColorStop(d[0],d[1])}this.cache.put("gradient",b)}});return d}),e("qtek-2d/context/tool/math",[],function(){var a={area:function(a){var b=a.length/2;if(3>b)return 0;for(var c=0,d=2*(b-1),e=0;2*b>e;){var f=a[d],g=a[d+1],h=a[e],i=a[e+1];d=e,e+=2,c+=f*i-h*g}return c},isCCW:function(a){return this.area(a)<0},triangleArea:function(a,b,c,d,e,f){return(c-a)*(f-d)-(d-b)*(e-c)},isTriangleConvex:function(a,b,c,d,e,f){return 0>(c-a)*(f-d)-(d-b)*(e-c)},isPointInTriangle:function(b,c,d,e,f,g,h,i){return!(a.triangleArea(b,c,f,g,h,i)<=0||a.triangleArea(b,c,h,i,d,e)<=0||a.triangleArea(h,i,f,g,d,e)<=0)},approxEqualInt:function(a,b){return Math.abs(a-b)<.1},approxEqual:function(a,b){return Math.abs(a-b)<1e-5},reverse:function(a,b,c){for(var d=0;d<Math.floor(b/2);d++)for(var e=0;c>e;e++){var f=d*c+e,g=(b-d-1)*c+e,h=a[f];a[f]=a[g],a[g]=h}return a}};return a}),e("qtek-2d/context/tool/GJK",["require","./math"],function(a){var b=a("./math"),c=function(){this._D=[0,0],this._S=[0,0]};c.prototype.intersect=function(a,b){var c=this._D,d=this._S;c[0]=a[0]-b[0],c[1]=a[1]-b[1],this._support(a,b,c,d),c[0]=-d[0],c[1]=-d[1];for(var e=d.slice();;){if(this._support(a,b,c,d),c[0]*d[0]+c[1]*d[1]<=0)return!1;e.push(d[0]),e.push(d[1]);var f=this._updateSimplex(e,c);if(f)return!0}};var d=[0,0],e=[0,0];return c.prototype._updateSimplex=function(a,c){var f=a.length/2;switch(f){case 2:var g=a[2],h=a[3],i=a[0],j=a[1];e[0]=i-g,e[1]=j-h,e[0]*-g+e[1]*-h<0?(a.shift(),a.shift(),c[0]=-g,c[1]=-h):-e[1]*-g+e[0]*-h>0?(c[0]=-e[1],c[1]=e[0]):(c[0]=e[1],c[1]=-e[0]);break;case 3:var g=a[4],h=a[5],i=a[2],j=a[3],k=a[0],l=a[1];if(b.isTriangleConvex(g,h,k,l,i,j)||(i=a[0],j=a[1],k=a[2],l=a[3]),d[0]=k-g,d[1]=l-h,e[0]=i-g,e[1]=j-h,b.isTriangleConvex(0,0,g,h,k,l)){if(!b.isTriangleConvex(0,0,g,h,i,j))return!0;e[0]*-g+e[1]*-h>0?(a.length=4,a[0]=i,a[1]=j,a[2]=g,a[3]=h,-e[1]*-g+e[0]*-h>0?(c[0]=-e[1],c[1]=e[0]):(c[0]=e[1],c[1]=-e[0])):(a.length=2,a[0]=g,a[1]=h,c[0]=-g,c[1]=-h)}else-g*d[0]+-h*d[1]>0?(a.length=4,a[0]=k,a[1]=l,a[2]=g,a[3]=h,-d[1]*-g+d[0]*-h>0?(c[0]=-d[1],c[1]=d[0]):(c[0]=d[1],c[1]=-d[0])):(a.length=2,a[0]=g,a[1]=h,c[0]=-g,c[1]=-h)}},c.prototype._support=function(a,b,c,d){for(var e,f,g,h,i=-1/0,j=0;j<a.length;){var k=a[j++],l=a[j++],m=k*-c[0]+l*-c[1];m>i&&(i=m,e=k,f=l)}for(i=-1/0,j=0;j<b.length;)k=b[j++],l=b[j++],m=k*c[0]+l*c[1],m>i&&(i=m,g=k,h=l);return d[0]=g-e,d[1]=h-f,d},c}),e("qtek-2d/context/BezierCurveSegment",["require","./tool/math","glmatrix","./tool/GJK"],function(a){var b=a("./tool/math"),c=a("glmatrix"),d=c.vec3,e=c.vec2,f=(c.mat4,5e-5),g=a("./tool/GJK"),h=new g,i=function(a){return f>a&&a>-f?0:a},j=function(a,b,c,d,e,f,g,h){this.type=j.type,this.points=[a,b,c,d,e,f,g,h],this.thickness=0,this.coords=[],this.subCurveA=null,this.subCurveB=null,this.subdivisionLevel=0,this.triangles=[]};return j.prototype.strokeSteps=0,j.prototype.fx=0,j.prototype.fy=0,j.prototype.dfx=0,j.prototype.dfy=0,j.prototype.ddfx=0,j.prototype.ddfy=0,j.prototype.dddfx=0,j.prototype.dddfy=0,j.prototype.updateStrokeSegments=function(a,b){var c=this.points,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=(f-d)*a,m=(g-e)*b,n=(h-f)*a,o=(i-g)*b,p=(j-h)*a,q=(k-i)*b,r=Math.sqrt(l*l+m*m)+Math.sqrt(n*n+o*o)+Math.sqrt(p*p+q*q);this.strokeSteps=Math.ceil(.25*r);var s=1/(this.strokeSteps+1),t=s*s,u=t*s,v=3*s,w=3*t,x=6*t,y=6*u,z=d-2*f+h,A=e-2*g+i,B=3*(f-h)-d+j,C=3*(g-i)-e+k;this.fx=c[0],this.fy=c[1],this.dfx=(f-d)*v+z*w+B*u,this.dfy=(g-e)*v+A*w+C*u,this.ddfx=z*x+B*y,this.ddfy=A*x+C*y,this.dddfx=B*y,this.dddfy=C*y},j.prototype.reverse=function(){b.reverse(this.points,4,2),12===this.coords.length&&b.reverse(this.coords,4,3);for(var a=0;a<this.triangles.length;a++)this.triangles[a]=4-this.triangles[a];var c=this.points;this.fx=c[0],this.fy=c[1],this.dfx=-this.dfx,this.dfy=-this.dfy,this.ddfx=-this.ddfx,this.ddfy=-this.ddfy,this.dddfx=-this.dddfx,this.dddfy=-this.dddfy},j.prototype.subdivide=function(a){var b=this.points,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],k=b[7],l=(e-c)*a+c,m=(f-d)*a+d,n=(g-e)*a+e,o=(h-f)*a+f,p=(i-g)*a+g,q=(k-h)*a+h,r=(n-l)*a+l,s=(o-m)*a+m,t=(p-n)*a+n,u=(q-o)*a+o,v=(t-r)*a+r,w=(u-s)*a+s,x=new j(c,d,l,m,r,s,v,w),y=new j(v,w,t,u,p,q,i,k);x.subdivisionLevel=this.subdivisionLevel+1,y.subdivisionLevel=this.subdivisionLevel+1,this.subCurveA=x,this.subCurveB=y},j.prototype.intersectCurve=function(a){return this.subCurveA?a.subCurveA?this.subCurveA.intersectCurve(a.subCurveA)||this.subCurveA.intersectCurve(a.subCurveB)||this.subCurveB.intersectCurve(a.subCurveA)||this.subCurveB.intersectCurve(a.subCurveB):this.subCurveA.intersectCurve(a)||this.subCurveB.intersectCurve(a):h.intersect(this.points,a.points)},j.prototype.updateTriangles=function(){for(var a=this._getTriangles(),b=0;b<a.length;b++)this.triangles[b]=a[b];this.triangles.length=a.length},j.prototype.updateTextureCoords=function(){var a,b,c,f,g,h,j,k,l,m,n,o,p,q,r,s,t,u,v,w=d.fromValues(0,0,1),x=d.fromValues(0,0,1),y=d.fromValues(0,0,1),z=d.fromValues(0,0,1),A=d.create(),B=1/3,C=-1;return function(D){var E=this.coords,F=this.points,G=F[0],H=F[1],I=F[2],J=F[3],K=F[4],L=F[5],M=F[6],N=F[7];e.set(w,G,H),e.set(x,I,J),e.set(y,K,L),e.set(z,M,N),d.cross(A,z,y),a=d.dot(w,A),d.cross(A,w,z),b=d.dot(x,A),d.cross(A,x,w),c=d.dot(y,A),f=a-2*b+3*c,g=-b+3*c,h=3*c,f=i(f),g=i(g),h=i(h),t=1,(0!=f||0!=g||0!=h)&&(0==f&&0==g?(t=0>h?-t:t,E[0]=E[1]=E[2]=0,E[3]=B*t,E[4]=0,E[5]=B,E[6]=2/3*t,E[7]=B*t,E[8]=B,E[9]=E[10]=t,E[11]=1):(q=3*g*g-4*f*h,q=i(q),0==q&&0==f?(j=h,k=3*g,r=k-j,E[0]=j,E[1]=j*j*j,E[2]=1,E[3]=j-B*k,E[4]=j*j*-r,E[5]=1,E[6]=j-2*B*k,E[7]=r*r*j,E[8]=1,E[9]=-r,E[10]=-r*r*r,E[11]=1):q>=0?(p=Math.sqrt(3*q),j=3*g-p,k=6*f,l=3*g+p,m=k,v=Math.sqrt(j*j+k*k),j/=v,k/=v,v=Math.sqrt(l*l+m*m),l/=v,m/=v,r=k-j,s=m-l,t=0>f?-t:t,E[0]=j*l*t,E[1]=j*j*j*t,E[2]=l*l*l,E[3]=B*(3*j*l-j*m-k*l)*t,E[4]=j*j*-r*t,E[5]=l*l*-s,E[6]=B*(k*(m-2*l)+j*(3*l-2*m))*t,E[7]=r*r*j*t,E[8]=s*s*l,E[9]=r*s*t,E[10]=-r*r*r*t,E[11]=-s*s*s):(p=Math.sqrt(-q),j=g-p,k=2*f,l=g+p,m=k,v=Math.sqrt(j*j+k*k),j/=v,k/=v,v=Math.sqrt(l*l+m*m),l/=v,m/=v,n=j/k,o=l/m,C=n>0&&1>n?n:o>0&&1>o?o:-1,0>C||D?(r=k-j,s=m-l,u=i(j*l),t=f>0&&0>u||0>f&&u>0?-t:t,E[0]=u*t,E[1]=j*j*l*t,E[2]=j*l*l,E[3]=B*(-j*m-k*l+3*j*l)*t,E[4]=-B*j*(j*(m-3*l)+2*k*l)*t,E[5]=-B*l*(j*(2*m-3*l)+k*l),E[6]=B*(k*(m-2*l)+j*(3*l-2*m))*t,E[7]=B*r*(j*(2*m-3*l)+k*l)*t,E[8]=B*s*(j*(m-3*l)+2*k*l),E[9]=r*s*t,E[10]=-r*r*s*t,E[11]=-r*s*s):(this.subdivide(C),this.subCurveA.updateTextureCoords(!0),this.subCurveB.updateTextureCoords(!0)))),this.updateTriangles())}}(),j.prototype._getTriangles=function(){var a=[0,1,3,0,2,3],c=[1,0,3,1,2,3],d=[1,0,2,1,2,3],e=[0,1,3],f=[0,2,3];return function(){var g=this.points,h=g[0],i=g[1],j=g[2],k=g[3],l=g[4],m=g[5],n=g[6],o=g[7],p=b.isTriangleConvex(h,i,j,k,n,o);return p!=b.isTriangleConvex(h,i,l,m,n,o)?a:b.isTriangleConvex(h,i,j,k,l,m)^!p?b.isTriangleConvex(l,m,j,k,n,o)^!p?e:c:b.isTriangleConvex(j,k,l,m,n,o)^!p?f:d}}(),j.type=2,j}),e("qtek-2d/context/CanvasElement",["require"],function(){var a=function(){},b=["hasFill","hasStroke","getHashKey","updateVertices","afterDraw"],c=["updateElements","addElement","clearElements"];a._factories=[];var d=a._factories;return a.register=function(b,c){if(!(b&&!a._checkElementClass(b)||c&&!a._checkPrimitiveClass(c))){var e=d.length;return d.push({fElement:b,fPrimitive:c}),e}},a._checkElementClass=function(a){for(var c=!0,d=0;d<b.length;d++){var e=b[d];"undefined"==typeof a.prototype[e]&&(console.warn(e+" method must be implemented in Element"),c=!1)}return c},a._checkPrimitiveClass=function(a){for(var b=!0,d=0;d<c.length;d++){var e=c[d];"undefined"==typeof a.prototype[e]&&(console.warn(e+" method must be implemented in Element"),b=!1)}return b},a.setPrimitiveClass=function(b,c){if(a._checkPrimitiveClass(c)){var e=d[b];e&&(e.fPrimitive=c)}},a.setElementClass=function(b,c){if(a._checkElementClass(c)){var e=d[b];e&&(e.fElement=c)}},a.getPrimitiveClass=function(a){var b=d[a];return b?b.fPrimitive:void 0},a.getElementClass=function(a){var b=d[a];return b?b.fElement:void 0},a.createElement=function(a){var b=d[a];return b?new b.fElement:void 0},a.createPrimitive=function(a){var b=d[a];return b?new b.fPrimitive:void 0},a.getClassNumber=function(){return d.length},a}),e("qtek/core/glenum",[],function(){return{DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444}}),e("qtek/Texture",["require","./core/Base","./core/util","./core/glenum","./core/Cache"],function(a){var b=a("./core/Base"),c=(a("./core/util"),a("./core/glenum")),d=a("./core/Cache"),e=b.derive({width:512,height:512,type:c.UNSIGNED_BYTE,format:c.RGBA,wrapS:c.CLAMP_TO_EDGE,wrapT:c.CLAMP_TO_EDGE,minFilter:c.LINEAR_MIPMAP_LINEAR,magFilter:c.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new d},{getWebGLTexture:function(a){return this._cache.use(a.__GLID__),this._cache.miss("webgl_texture")&&this._cache.put("webgl_texture",a.createTexture()),this.dynamic?this.update(a):this._cache.isDirty()&&(this.update(a),this._cache.fresh()),this._cache.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache.dirtyAll()},update:function(){},beforeUpdate:function(a){a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,this.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,this.unpackAlignment),this.fallBack()},fallBack:function(){var a=this.isPowerOfTwo();this.format===c.DEPTH_COMPONENT&&(this.useMipmap=!1),a&&this.useMipmap?(this._minFilterOriginal&&(this.minFilter=this._minFilterOriginal),this._magFilterOriginal&&(this.magFilter=this._magFilterOriginal),this._wrapSOriginal&&(this.wrapS=this._wrapSOriginal),this._wrapTOriginal&&(this.wrapT=this._wrapTOriginal)):(this.NPOT=!0,this._minFilterOriginal=this.minFilter,this._magFilterOriginal=this.magFilter,this._wrapSOriginal=this.wrapS,this._wrapTOriginal=this.wrapT,this.minFilter==c.NEAREST_MIPMAP_NEAREST||this.minFilter==c.NEAREST_MIPMAP_LINEAR?this.minFilter=c.NEAREST:(this.minFilter==c.LINEAR_MIPMAP_LINEAR||this.minFilter==c.LINEAR_MIPMAP_NEAREST)&&(this.minFilter=c.LINEAR),this.wrapS=c.CLAMP_TO_EDGE,this.wrapT=c.CLAMP_TO_EDGE)},nextHighestPowerOfTwo:function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1},dispose:function(a){this._cache.use(a.__GLID__),this._cache.get("webgl_texture")&&a.deleteTexture(this._cache.get("webgl_texture")),this._cache.deleteContext(a.__GLID__)},isRenderable:function(){},isPowerOfTwo:function(){}});return e.BYTE=c.BYTE,e.UNSIGNED_BYTE=c.UNSIGNED_BYTE,e.SHORT=c.SHORT,e.UNSIGNED_SHORT=c.UNSIGNED_SHORT,e.INT=c.INT,e.UNSIGNED_INT=c.UNSIGNED_INT,e.FLOAT=c.FLOAT,e.HALF_FLOAT=36193,e.DEPTH_COMPONENT=c.DEPTH_COMPONENT,e.ALPHA=c.ALPHA,e.RGB=c.RGB,e.RGBA=c.RGBA,e.LUMINANCE=c.LUMINANCE,e.LUMINANCE_ALPHA=c.LUMINANCE_ALPHA,e.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,e.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,e.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,e.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,e.NEAREST=c.NEAREST,e.LINEAR=c.LINEAR,e.NEAREST_MIPMAP_NEAREST=c.NEAREST_MIPMAP_NEAREST,e.LINEAR_MIPMAP_NEAREST=c.LINEAR_MIPMAP_NEAREST,e.NEAREST_MIPMAP_LINEAR=c.NEAREST_MIPMAP_LINEAR,e.LINEAR_MIPMAP_LINEAR=c.LINEAR_MIPMAP_LINEAR,e.TEXTURE_MAG_FILTER=c.TEXTURE_MAG_FILTER,e.TEXTURE_MIN_FILTER=c.TEXTURE_MIN_FILTER,e.REPEAT=c.REPEAT,e.CLAMP_TO_EDGE=c.CLAMP_TO_EDGE,e.MIRRORED_REPEAT=c.MIRRORED_REPEAT,e}),e("qtek/core/glinfo",[],function(){var a=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","WEBGL_draw_buffers"],b={},c={initialize:function(c){if(!b[c.__GLID__]){b[c.__GLID__]={};
for(var d=0;d<a.length;d++){var e=a[d];this._createExtension(c,e)}}},getExtension:function(a,c){var d=a.__GLID__;return b[d]?("undefined"==typeof b[d][c]&&this._createExtension(a,c),b[d][c]):void 0},dispose:function(a){delete b[a.__GLID__]},_createExtension:function(a,c){var d=a.getExtension(c);d||(d=a.getExtension("MOZ_"+c)),d||(d=a.getExtension("WEBKIT_"+c)),b[a.__GLID__][c]=d}};return c}),e("qtek/texture/Texture2D",["require","../Texture","../core/glinfo","../core/glenum"],function(a){var b=a("../Texture"),c=a("../core/glinfo"),d=a("../core/glenum"),e=b.derive(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(a){a.bindTexture(a.TEXTURE_2D,this._cache.get("webgl_texture")),this.beforeUpdate(a);var e=this.format,f=this.type;a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,this.wrapS),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,this.wrapT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,this.magFilter),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,this.minFilter);var g=c.getExtension(a,"EXT_texture_filter_anisotropic");if(g&&this.anisotropic>1&&a.texParameterf(a.TEXTURE_2D,g.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===f){var h=c.getExtension(a,"OES_texture_half_float");h||(f=d.FLOAT)}if(this.image?a.texImage2D(a.TEXTURE_2D,0,e,e,f,this.image):e<=b.COMPRESSED_RGBA_S3TC_DXT5_EXT&&e>=b.COMPRESSED_RGB_S3TC_DXT1_EXT?a.compressedTexImage2D(a.TEXTURE_2D,0,e,this.width,this.height,0,this.pixels):a.texImage2D(a.TEXTURE_2D,0,e,this.width,this.height,0,e,f,this.pixels),this.useMipmap)if(this.mipmaps.length){if(this.image)for(var i=0;i<this.mipmaps.length;i++)this.mipmaps[i]&&a.texImage2D(a.TEXTURE_2D,i,e,e,f,this.mipmaps[i]);else if(this.pixels)for(var j=this.width,k=this.height,i=0;i<this.mipmaps.length;i++)this.mipmaps[i]&&(e<=b.COMPRESSED_RGBA_S3TC_DXT5_EXT&&e>=b.COMPRESSED_RGB_S3TC_DXT1_EXT?a.compressedTexImage2D(a.TEXTURE_2D,0,e,j,k,0,this.mipmaps[i]):a.texImage2D(a.TEXTURE_2D,i,e,j,k,0,e,f,this.mipmaps[i])),j/=2,k/=2}else this.NPOT||this.mipmaps.length||a.generateMipmap(a.TEXTURE_2D);a.bindTexture(a.TEXTURE_2D,null)},generateMipmap:function(a){a.bindTexture(a.TEXTURE_2D,this._cache.get("webgl_texture")),a.generateMipmap(a.TEXTURE_2D)},isPowerOfTwo:function(){if(this.image)var a=this.image.width,b=this.image.height;else var a=this.width,b=this.height;return 0===(a&a-1)&&0===(b&b-1)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||this.image.complete:this.width&&this.height},bind:function(a){a.bindTexture(a.TEXTURE_2D,this.getWebGLTexture(a))},unbind:function(a){a.bindTexture(a.TEXTURE_2D,null)},load:function(a){var b=new Image,c=this;return b.onload=function(){c.dirty(),c.trigger("success",c),b.onload=null},b.onerror=function(){c.trigger("error",c),b.onerror=null},b.src=a,this.image=b,this}});return e}),e("qtek-2d/context/CanvasImage",["require","qtek/texture/Texture2D","qtek/math/Matrix2d","./CanvasElement","glmatrix"],function(a){var b=a("qtek/texture/Texture2D"),c=a("qtek/math/Matrix2d"),d=a("./CanvasElement"),e=a("glmatrix"),f=e.vec2,g=[],h=function(a){this._data=a,this._ref=0};h.prototype.reference=function(){return this._ref++,this._data},h.prototype.removeReference=function(){return this._ref>0&&this._ref--,0==this._ref},h.prototype.getData=function(){return this._data};var i=[0,1,2,1,3,2],j=function(a,b,d,e,g,h,i,k,l){this.eType=j.eType,this.image=a,this.depth=0,this._texture=j.getTexture(a),this.transform=new c;var m=1/a.width,n=1/a.height;this.quadPositions=[f.fromValues(h,i),f.fromValues(h,i+l),f.fromValues(h+k,i),f.fromValues(h+k,i+l)],this.quadTexcoords=[f.fromValues(b*m,d*n),f.fromValues(b*m,(d+g)*n),f.fromValues((b+e)*m,d*n),f.fromValues((b+e)*m,(d+g)*n)],this._verticesData=null};return j.prototype={constructor:j,begin:function(){},end:function(a){c.copy(this.transform,a.currentTransform),this.updateVertices()},getTexture:function(){return this._texture},hasFill:function(){return!0},hasStroke:function(){return!1},dispose:function(a){j.disposeImage(this.image,a.renderer.gl)},getHashKey:function(){return this.eType+"_"+this.image.__IID__},updateVertices:function(){this._verticesData||(this._verticesData={position:new Float32Array(18),texcoord:new Float32Array(12)});for(var a=this._verticesData.position,b=this._verticesData.texcoord,c=this.depth,d=0,e=0,f=0;6>f;f++){var g=i[f];a[d]=this.quadPositions[g][0],a[d+1]=this.quadPositions[g][1],a[d+2]=c,b[e]=this.quadTexcoords[g][0],b[e+1]=this.quadTexcoords[g][1],d+=3,e+=2}},getVertices:function(){return this._verticesData},afterDraw:function(){},clone:function(){}},j.getTexture=function(a){if("undefined"==typeof a.__IID__||"undefined"==typeof g[a.__IID__]){var c=g.length,d=new b;d.image=a,d.flipY=!1,a.__IID__=c,g.push(new h(d))}return g[a.__IID__].reference()},j.disposeImage=function(a,b){if(!a.__IID__){var c=a.__IID__,d=g[c];if(d){var e=d.removeReference();if(e){d.getData().dispose(b);var f=g[g.length-1];g[c]=f,g.pop(),a.__IID__=c}}}},j.eType=d.register(j,null,null),j}),e("qtek-2d/context/tool/color",[],function(){function a(a){return a=Math.round(a),0>a?0:a>255?255:a}function b(a){return 0>a?0:a>1?1:a}function c(b){return a("%"===b[b.length-1]?parseFloat(b)/100*255:parseInt(b))}function d(a){return b("%"===a[a.length-1]?parseFloat(a)/100:parseFloat(a))}function e(a,b,c){return 0>c?c+=1:c>1&&(c-=1),1>6*c?a+(b-a)*c*6:1>2*c?b:2>3*c?a+(b-a)*(2/3-c)*6:a}function f(b){var f=b.replace(/ /g,"").toLowerCase();if(f in g)return g[f].slice();if("#"===f[0]){if(4===f.length){var h=parseInt(f.substr(1),16);return h>=0&&4095>=h?[(3840&h)>>4|(3840&h)>>8,240&h|(240&h)>>4,15&h|(15&h)<<4,1]:null}if(7===f.length){var h=parseInt(f.substr(1),16);return h>=0&&16777215>=h?[(16711680&h)>>16,(65280&h)>>8,255&h,1]:null}return null}var i=f.indexOf("("),j=f.indexOf(")");if(-1!==i&&j+1===f.length){var k=f.substr(0,i),l=f.substr(i+1,j-(i+1)).split(","),m=1;switch(k){case"rgba":if(4!==l.length)return null;m=d(l.pop());case"rgb":return 3!==l.length?null:[c(l[0]),c(l[1]),c(l[2]),m];case"hsla":if(4!==l.length)return null;m=d(l.pop());case"hsl":if(3!==l.length)return null;var n=(parseFloat(l[0])%360+360)%360/360,o=d(l[1]),p=d(l[2]),q=.5>=p?p*(o+1):p+o-p*o,r=2*p-q;return[a(255*e(r,q,n+1/3)),a(255*e(r,q,n)),a(255*e(r,q,n-1/3)),m];default:return null}}return null}var g={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};return{parse:f}}),e("qtek-2d/context/DrawingStyle",["require","./tool/color"],function(a){"use strict";var b=a("./tool/color"),c=function(){this.strokeStyle=[0,0,0,1],this.fillStyle=[0,0,0,1]};return c.prototype.lineWidth=1,c.prototype.globalAlpha=1,c.prototype.shadowOffsetX=0,c.prototype.shadowOffsetY=0,c.prototype.shadowBlur=0,c.prototype.shadowColor=[0,0,0],c.prototype.setStrokeStyle=function(a){if("string"==typeof a)var c=b.parse(a);else(3==a.length||4==a.length)&&(c=a);c?(this.strokeStyle[0]=c[0]/255,this.strokeStyle[1]=c[1]/255,this.strokeStyle[2]=c[2]/255,this.strokeStyle[3]=c[3]||1):(this.strokeStyle[0]=0,this.strokeStyle[1]=0,this.strokeStyle[2]=0,this.strokeStyle[3]=1)},c.prototype.setFillStyle=function(a){var c;"string"==typeof a?c=b.parse(a):(3==a.length||4==a.length)&&(c=a),c?(this.fillStyle[0]=c[0]/255,this.fillStyle[1]=c[1]/255,this.fillStyle[2]=c[2]/255,this.fillStyle[3]=c[3]||1):(this.fillStyle[0]=0,this.fillStyle[1]=0,this.fillStyle[2]=0,this.fillStyle[3]=1)},c.prototype.copy=function(a){this.strokeStyle=a.strokeStyle.slice(),this.fillStyle=a.fillStyle.slice(),this.lineWidth=a.lineWidth,this.globalAlpha=a.globalAlpha,this.shadowOffsetX=a.shadowOffsetX,this.shadowOffsetY=a.shadowOffsetY,this.shadowBlur=a.shadowBlur,this.shadowColor=a.shadowColor.slice()},c.prototype.clone=function(){},c}),e("qtek-2d/context/LineSegment",["require","./tool/math"],function(a){var b=a("./tool/math"),c=function(a,b,d,e){this.type=c.type,this.thickness=0,this.points=[a,b,d,e]};return c.prototype.strokeSteps=1,c.prototype.reverse=function(){b.reverse(this.points,2,2)},c.type=1,c}),e("qtek/core/LinkedList",["require"],function(){var a=function(){this.head=null,this.tail=null,this._length=0};return a.prototype.insert=function(b){var c=new a.Entry(b);return this.insertEntry(c),c},a.prototype.insertAt=function(b,c){if(!(0>b)){for(var d=this.head,e=0;d&&e!=b;)d=d.next,e++;if(d){var f=new a.Entry(c),g=d.prev;g.next=f,f.prev=g,f.next=d,d.prev=f}else this.insert(c)}},a.prototype.insertEntry=function(a){this.head?(this.tail.next=a,a.prev=this.tail,this.tail=a):this.head=this.tail=a,this._length++},a.prototype.remove=function(a){var b=a.prev,c=a.next;b?b.next=c:this.head=c,c?c.prev=b:this.tail=b,a.next=a.prev=null,this._length--},a.prototype.removeAt=function(a){if(!(0>a)){for(var b=this.head,c=0;b&&c!=a;)b=b.next,c++;return b?(this.remove(b),b.value):void 0}},a.prototype.getHead=function(){return this.head?this.head.value:void 0},a.prototype.getTail=function(){return this.tail?this.tail.value:void 0},a.prototype.getAt=function(a){if(!(0>a)){for(var b=this.head,c=0;b&&c!=a;)b=b.next,c++;return b.value}},a.prototype.indexOf=function(a){for(var b=this.head,c=0;b;){if(b.value===a)return c;b=b.next,c++}},a.prototype.length=function(){return this._length},a.prototype.isEmpty=function(){return 0==this._length},a.prototype.forEach=function(a,b){for(var c=this.head,d=0,e="undefined"!=typeof b;c;)e?a.call(b,c.value,d):a(c.value,d),c=c.next,d++},a.prototype.clear=function(){this.tail=this.head=null,this._length=0},a.Entry=function(a){this.value=a,this.next=null,this.prev=null},a}),e("qtek-2d/context/tool/Triangulation2",["require","qtek/core/LinkedList","./math"],function(a){"use strict";function b(a,b){this.p0=a,this.p1=b,this._linkedListEntry=null}var c=a("qtek/core/LinkedList"),d=a("./math"),e=1,f=2,g=function(){this.points=[],this.triangles=[],this.maxGridNumber=50,this.minGridNumber=0,this._gridNumber=20,this._boundingBox=[[1/0,1/0],[-1/0,-1/0]],this._nPoints=0,this._nTriangle=0,this._pointTypes=[],this._grids=[],this._gridWidth=0,this._gridHeight=0,this._edgeList=new c,this._edgeOut=[],this._edgeIn=[],this._candidates=[]};return g.prototype.triangulate=function(a){this._nPoints=a.length/2,this._nPoints<=3||(this._gridNumber=Math.ceil(Math.sqrt(this._nPoints)),this._gridNumber=Math.max(Math.min(this._gridNumber,this.maxGridNumber),this.minGridNumber),this.points=a,this._reset(),this._prepare(),this._earClipping(),this.triangles.length=3*this._nTriangle)},g.prototype._reset=function(){this._nTriangle=0,this._edgeList.clear(),this._candidates.length=0,this._boundingBox[0][0]=this._boundingBox[0][1]=1/0,this._boundingBox[1][0]=this._boundingBox[1][1]=-1/0;for(var a=this._gridNumber*this._gridNumber,b=this._grids.length,c=0;b>c;c++)this._grids[c].length=0;for(;a>c;c++)this._grids[c]=[];if(this._grids.length=a,b<this._nPoints){b=this._edgeIn.length;for(var c=b;c<this._nPoints;c++)this._edgeIn[c]=this._edgeOut[c]=null}else this._edgeIn.length=this._edgeOut.length=this._nPoints},g.prototype._prepare=function(){for(var a=this._boundingBox,b=this._nPoints,c=0,g=b-1;b>c;){var h=(c+1)%b,i=this.points[2*g],j=this.points[2*g+1],k=this.points[2*c],l=this.points[2*c+1],m=this.points[2*h],n=this.points[2*h+1];k<a[0][0]&&(a[0][0]=k),l<a[0][1]&&(a[0][1]=l),k>a[1][0]&&(a[1][0]=k),l>a[1][1]&&(a[1][1]=l),a[0][0]-=.1,a[0][1]-=.1,a[1][0]+=.1,a[1][1]+=.1;var o=d.triangleArea(i,j,k,l,m,n);Math.abs(o)<1?(this.points.splice(2*c,2),b--):(this._pointTypes[c]=0>o?e:f,0>o&&this._candidates.push(c),g=c,c++)}this._pointTypes.length=b,this._gridWidth=(a[1][0]-a[0][0])/this._gridNumber,this._gridHeight=(a[1][1]-a[0][1])/this._gridNumber;for(var c=0;b>c;c++)if(this._pointTypes[c]==f){var p=this.points[2*c],q=this.points[2*c+1],r=this._getPointHash(p,q);this._grids[r].push(c)}for(var c=0;b-1>c;c++)this._addEdge(c,c+1);this._addEdge(c,0)},g.prototype._earClipping=function(){for(var a=this._candidates,b=this._nPoints;a.length;){for(var c=!0,d=0;d<a.length;){var e=a[d];this._isEar(e)?(this._clipEar(e),a.splice(d,1),c=!1,b--):d++}c&&(this._clipEar(a.pop()),b--)}},g.prototype._isEar=function(a){var b=this._edgeIn[a],c=this._edgeOut[a],e=b.p0,g=c.p1,h=this.points[2*e],i=this.points[2*e+1],j=this.points[2*a],k=this.points[2*a+1],l=this.points[2*g],m=this.points[2*g+1];if(Math.abs(d.triangleArea(h,i,j,k,l,m))<1)return!0;for(var n=this._getTriangleGrids(h,i,j,k,l,m),o=n[0][1];o<=n[1][1];o++)for(var p=n[0][0];p<=n[1][0];p++)for(var q=o*this._gridNumber+p,r=this._grids[q],s=0;s<r.length;s++){var t=r[s];if(this._pointTypes[t]==f){var u=this.points[2*t],v=this.points[2*t+1];if(d.isPointInTriangle(h,i,j,k,l,m,u,v))return!1}}return!0},g.prototype._clipEar=function(a){var b=this._edgeIn[a],c=this._edgeOut[a],d=3*this._nTriangle;this.triangles[d]=b.p0,this.triangles[d+1]=b.p1,this.triangles[d+2]=c.p1,this._nTriangle++;var g=this._edgeIn[b.p0],h=this._edgeOut[c.p1];this._pointTypes[b.p0]==f&&this.isTriangleConvex2(g.p0,b.p0,c.p1)&&(this._candidates.push(b.p0),this._pointTypes[b.p0]=e),this._pointTypes[c.p1]==f&&this.isTriangleConvex2(b.p0,c.p1,h.p1)&&(this._candidates.push(c.p1),this._pointTypes[c.p1]=e),this._removeEdge(b),this._removeEdge(c),this._addEdge(b.p0,c.p1)},g.prototype._addEdge=function(a,c){var d=new b(a,c);this._edgeOut[a]=d,this._edgeIn[c]=d;var e=this._edgeList.insert(d);return d._linkedListEntry=e,d},g.prototype._removeEdge=function(a){this._edgeList.remove(a._linkedListEntry),this._edgeOut[a.p0]=null,this._edgeIn[a.p1]=null},g.prototype._getPointHash=function(a,b){var c=this._boundingBox;return Math.floor((b-c[0][1])/this._gridHeight)*this._gridNumber+Math.floor((a-c[0][0])/this._gridWidth)},g.prototype._getTriangleGrids=function(){var a,b,c,d,e=[[-1,-1],[-1,-1]];return function(f,g,h,i,j,k){var l=this._boundingBox;return a=c=f,b=d=g,a>h&&(a=h),b>i&&(b=i),h>c&&(c=h),i>d&&(d=i),a>j&&(a=j),b>k&&(b=k),j>c&&(c=j),k>d&&(d=k),e[0][0]=Math.floor((a-l[0][0])/this._gridWidth),e[1][0]=Math.floor((c-l[0][0])/this._gridWidth),e[0][1]=Math.floor((b-l[0][1])/this._gridHeight),e[1][1]=Math.floor((d-l[0][1])/this._gridHeight),e}}(),g.prototype.isTriangleConvex2=function(a,b,c){return this.triangleArea(a,b,c)<0},g.prototype.triangleArea=function(a,b,c){var d=this.points[2*a],e=this.points[2*a+1],f=this.points[2*b],g=this.points[2*b+1],h=this.points[2*c],i=this.points[2*c+1];return(f-d)*(i-g)-(g-e)*(h-f)},g}),e("qtek-2d/context/Polygon",["require","./tool/math","glmatrix","./tool/Triangulation2"],function(a){var b=a("./tool/math"),c=a("glmatrix"),d=c.vec2,e=a("./tool/Triangulation2"),f=new e,g=function(a){this.points=[],this.triangles=[],this._nPoints=0,this._isClosed=!1,this._isEnded=!1,this._x0=0,this._y0=0,this._xi=1,this._yi=1,this._autoUpdateBBox=a,this.boundingBox=a?[d.create(),d.create()]:null,this._isStatic=!1};return g.prototype.begin=function(a,b){if(this._isStatic&&(this._isStatic=!1,this.points=[],this.triangles=[]),this._nPoints=0,this._isClosed=!1,this._isEnded=!1,this.addPoint(a,b),this._x0=this._xi=a,this._y0=this._yi=b,this._autoUpdateBBox){var c=this.boundingBox;d.set(c[0],a,b),d.set(c[1],a,b)}},g.prototype.end=function(){this._isEnded||(this.points.length=2*this._nPoints,this._isEnded=!0)},g.prototype.addPoint=function(a,b){var c=2*this._nPoints;if(this.points[c]=a,this.points[c+1]=b,this._xi=a,this._yi=b,this._nPoints++,this._autoUpdateBBox){var d=this.boundingBox;a<d[0][0]&&(d[0][0]=a),b<d[0][1]&&(d[0][1]=b),a>d[1][0]&&(d[1][0]=a),b>d[1][1]&&(d[1][1]=b)}},g.prototype.triangulate=function(){this._nPoints<3||(3==this._nPoints?(this.triangles[0]=0,this.triangles[1]=1,this.triangles[2]=2,this.triangles.length=3):(f.triangles=this.triangles,f.triangulate(this.points),this.points=f.points,this._nPoints=this.points.length/2))},g.prototype.checkClose=function(a,c){return this._nPoints>=1&&b.approxEqualInt(a,this._x0)&&b.approxEqualInt(c,this._y0)?(this._isClosed=!0,!0):!1},g.prototype.isCCW=function(){return b.area(this.points)<0},g.prototype.area=function(){return b.area(this.points)},g.prototype.removeDuplicate=function(){for(var a=this.points,c=2*this._nPoints,d=0;c>d;)x0=a[d],y0=a[d+1],x1=a[(d+2)%c],y1=a[(d+3)%c],b.approxEqualInt(x0,x1)&&b.approxEqualInt(y0,y1)?(a.splice(d,2),this._nPoints--,c-=2):d+=2},g.prototype.updateBoundingBox=function(){this.boundingBox||(this.boundingBox=[d.create(),d.create()]);var a=this.boundingBox,b=this.points;a[0][0]=1/0,a[0][1]=1/0,a[1][0]=-1/0,a[1][1]=-1/0;for(var c=0;c<2*this._nPoints;){var e=b[c++],f=b[c++];e<a[0][0]&&(a[0][0]=e),f<a[0][1]&&(a[0][1]=f),e>a[1][0]&&(a[1][0]=e),f>a[1][1]&&(a[1][1]=f)}},g.prototype.isPointInPolygon=function(a,b){var c=this.boundingBox;return c[0][0]>a||c[1][0]<a||c[0][1]>b||c[1][1]<b?!1:void 0},g.prototype.toStatic=function(){this._isStatic||(this.points=new Float32Array(this.points),this.triangles=new Uint32Array(this.triangles),this._isStatic=!0)},g.prototype.reverse=function(){b.reverse(this.points,this._nPoints,2)},g}),e("qtek-2d/context/CanvasSubpath",["require","./tool/math","./LineSegment","./BezierCurveSegment","./Polygon","glmatrix"],function(a){var b=a("./tool/math"),c=a("./LineSegment"),d=a("./BezierCurveSegment"),e=a("./Polygon"),f=a("glmatrix"),g=(f.vec3,f.vec2),h=(f.mat4,function(){this.basePolygon=new e(!0),this.interiorPolygon=new e(!0),this.fillSegments=[],this.fillCurveSegments=[],this.strokeSegments=[],this.strokeVerticesArray=null,this._nFillSegments=0,this._nStrokeSegments=0,this._nFillCurveSegements=0,this._isClosed=!1,this._isEnded=!1,this._fill=!0,this._stroke=!1});return h.prototype.begin=function(a,b){this._nFillSegments=0,this._nStrokeSegments=0,this._nFillCurveSegements=0,this._isEnded=!1,this._isClosed=!1,this._fill=!1,this._stroke=!1,this.basePolygon.begin(a,b)},h.prototype.end=function(){if(!this._isEnded){this.strokeSegments.length=this._nStrokeSegments,this.fillSegments.length=this._nFillSegments,this.fillCurveSegments.length=this._nFillCurveSegements,this._isEnded=!0,this.basePolygon.end();var a=this.basePolygon.area();a>0?this.reverse():0==a&&this._nFillCurveSegements>0&&(b.isCCW(this.fillCurveSegments[0].points)||this.reverse())}},h.prototype.close=function(a){if(!this._isClosed){var b=this.basePolygon;if(b._nPoints>1){var d=new c(b._xi,b._yi,b._x0,b._y0);d.thickness=a,this.strokeSegments[this._nStrokeSegments++]=d}this._isClosed=!0}},h.prototype.stroke=function(a,b){if(!this._stroke){this._stroke=!0;for(var c=0;c<this.strokeSegments.length;c++){var e=this.strokeSegments[c];e.type==d.type&&e.updateStrokeSegments(a,b)}this._convertLineToPolygon()}},h.prototype.updateStrokeThickness=function(a){if(this._stroke){for(var b=0;b<this.segments.length;b++){var c=this.strokeSegments[b];c.thickness=a}this._convertLineToPolygon()}},h.prototype.fill=function(){this._fill||(this._fill=!0,this._checkOverlap(),this._updateCurveTextureCoords(),this._updateSegments(),this._updateInteriorPolygon(),this.interiorPolygon.triangulate())},h.prototype.addLine=function(a,b,d,e,f){var g=this._checkClose(d,e);g?this._isClosed=!0:this.basePolygon.addPoint(d,e);var h=new c(a,b,d,e);return h.thickness=f,this.strokeSegments[this._nStrokeSegments++]=h,this.fillSegments[this._nFillSegments++]=h,g},h.prototype.addQuadraticBezierCurve=function(a,b,c,d,e,f,g){var h=e,i=f;return e=(e+2*c)/3,f=(f+2*d)/3,c=(a+2*c)/3,d=(b+2*d)/3,this.addCubicBezierCurve(a,b,c,d,e,f,h,i,g)},h.prototype.addCubicBezierCurve=function(a,b,c,e,f,g,h,i,j){var k=this._checkClose(h,i);k?this._isClosed=!0:this.basePolygon.addPoint(h,i);var l=new d(a,b,c,e,f,g,h,i);return l.thickness=j,this.strokeSegments[this._nStrokeSegments++]=l,this.fillSegments[this._nFillSegments++]=l,this.fillCurveSegments[this._nFillCurveSegements++]=l,k},h.prototype.isPointInSubpath=function(a,b){var c=this.interiorPolygon.boundingBox;return c[0][0]>a||c[1][0]<a||c[0][1]>b||c[1][1]<b?!1:void 0},h.prototype._checkClose=function(a,b){return this.basePolygon.checkClose(a,b)},h.prototype._updateCurveTextureCoords=function(){for(var a=0;a<this.fillSegments.length;a++){var b=this.fillSegments[a];b.type==d.type&&this._updateLeafCurveTextureCoords(b)}},h.prototype._updateLeafCurveTextureCoords=function(a){a.subCurveA?(this._updateLeafCurveTextureCoords(a.subCurveA),this._updateLeafCurveTextureCoords(a.subCurveB)):a.updateTextureCoords()},h.prototype._checkOverlap=function(){for(var a=[],c=this.fillCurveSegments.length,d=0;c>d;d++)for(var e=d+1;c>e;e++){var f=this.fillCurveSegments[d],g=this.fillCurveSegments[e];f.intersectCurve(g)&&(a.push(f),a.push(g))}for(;a.length;){var h=a.shift(),i=a.shift();h.subdivide(.5),h.subCurveA.intersectCurve(i)&&Math.abs(b.area(h.subCurveA.points))>1&&(a.push(i),a.push(h.subCurveA)),h.subCurveB.intersectCurve(i)&&Math.abs(b.area(h.subCurveB.points))>1&&(a.push(i),a.push(h.subCurveB))}},h.prototype._updateSegments=function(){this._nFillCurveSegements=0;for(var a=0;a<this._nFillSegments;){var b=this.fillSegments[a];b.type==d.type?b.subCurveA?(this.fillSegments.splice(a,1),this._nFillSegments--,a=this._replaceSubdividedCurve(b,a)):(this.fillCurveSegments[this._nFillCurveSegements++]=b,a++):a++}this.fillCurveSegments.length=this._nFillCurveSegements},h.prototype._replaceSubdividedCurve=function(a,b){return a.subCurveA?(b=this._replaceSubdividedCurve(a.subCurveA,b),this._replaceSubdividedCurve(a.subCurveB,b)):(this.fillSegments.splice(b,0,a),this._nFillSegments++,this.fillCurveSegments[this._nFillCurveSegements++]=a,b+1)},h.prototype._updateInteriorPolygon=function(){var a,e,f,g,h,i,j,k;if(!(this._nFillSegments<2)){var l=this.interiorPolygon,m=this.fillSegments[0];l.begin(m.points[0],m.points[1]);for(var n=0;n<this._nFillSegments;n++){var o=this.fillSegments[n];switch(o.type){case c.type:l.addPoint(o.points[2],o.points[3]);break;case d.type:a=o.points[0],e=o.points[1],f=o.points[2],g=o.points[3],h=o.points[4],i=o.points[5],j=o.points[6],k=o.points[7];var p=b.isTriangleConvex(a,e,f,g,j,k);p!=b.isTriangleConvex(a,e,h,i,j,k)?p?(l.addPoint(h,i),l.addPoint(j,k)):(l.addPoint(f,g),l.addPoint(j,k)):p?l.addPoint(j,k):b.isTriangleConvex(a,e,h,i,f,g)?b.isTriangleConvex(f,g,h,i,j,k)?(l.addPoint(f,g),l.addPoint(j,k)):(l.addPoint(f,g),l.addPoint(h,i),l.addPoint(j,k)):b.isTriangleConvex(h,i,f,g,j,k)?(l.addPoint(h,i),l.addPoint(j,k)):(l.addPoint(h,i),l.addPoint(f,g),l.addPoint(j,k))}}l.end(),l.removeDuplicate()}},h.prototype._convertLineToPolygon=function(){for(var a=g.create(),b=g.create(),e=g.create(),f=g.create(),h=g.create(),i=g.create(),j=g.create(),k=[],l=0;4>l;l++)k[l]=g.create();return function(){for(var l=0,m=this.strokeSegments.length,n=0;m>n;n++){var o=this.strokeSegments[n];l+=6*o.strokeSteps}this.strokeVerticesArray&&this.strokeVerticesArray.length==2*l||(this.strokeVerticesArray=new Float32Array(2*l));var p=this.strokeVerticesArray,q=0,r=this._isClosed?m-1:0;o=this.strokeSegments[r],g.set(a,o.points[0],o.points[1]);for(var s=0,n=r;m>n;s++){switch(o=this.strokeSegments[n],o.type){case c.type:if(0==s){if(g.set(b,o.points[2],o.points[3]),g.copy(e,b),g.sub(h,b,a),g.normalize(h,h),!this._isClosed){g.set(i,h[1],-h[0]);var t=o.thickness/2;g.scaleAndAdd(k[0],a,i,t),g.scaleAndAdd(k[1],a,i,-t)}}else{g.set(e,o.points[2],o.points[3]),g.copy(f,h),g.sub(h,e,b),g.normalize(h,h),g.set(i,f[0]-h[0],f[1]-h[1]),g.normalize(i,i),g.set(j,f[1],-f[0]);var u=g.dot(i,j);0>u&&(g.negate(i,i),u=-u);var t=o.thickness/u/2;g.scaleAndAdd(k[2],b,i,t),g.scaleAndAdd(k[3],b,i,-t),0!==n&&(p[q++]=k[0][0],p[q++]=k[0][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[2][0],p[q++]=k[2][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[3][0],p[q++]=k[3][1],p[q++]=k[2][0],p[q++]=k[2][1]),g.copy(a,b),g.copy(b,e),g.copy(k[0],k[2]),g.copy(k[1],k[3])}break;case d.type:var v=o.fx,w=o.fy,x=o.dfx,y=o.dfy,z=o.ddfx,A=o.ddfy,B=o.dddfx,C=o.dddfy,D=0;if(0==s){if(v+=x,w+=y,x+=z,y+=A,z+=B,A+=C,g.set(b,v,w),g.copy(e,b),g.sub(h,b,a),g.normalize(h,h),!this._isClosed){g.set(i,h[1],-h[0]);var t=o.thickness/2;g.scaleAndAdd(k[0],a,i,t),g.scaleAndAdd(k[1],a,i,-t)}D=1}for(var E=D;E<o.strokeSteps;E++){{f[0]-h[0],f[1]-h[1]}v+=x,w+=y,x+=z,y+=A,z+=B,A+=C,g.set(e,v+x,w+y),g.copy(f,h),g.sub(h,e,b),g.normalize(h,h),g.set(i,f[0]-h[0],f[1]-h[1]),g.normalize(i,i),g.set(j,f[1],-f[0]);var u=g.dot(i,j);0>u&&(g.negate(i,i),u=-u);var t=o.thickness/u/2;g.scaleAndAdd(k[2],b,i,t),g.scaleAndAdd(k[3],b,i,-t),0==s&&this._isClosed||1==s&&E==D&&this._isClosed||(p[q++]=k[0][0],p[q++]=k[0][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[2][0],p[q++]=k[2][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[3][0],p[q++]=k[3][1],p[q++]=k[2][0],p[q++]=k[2][1]),g.copy(a,b),g.copy(b,e),g.copy(k[0],k[2]),g.copy(k[1],k[3])}}this._isClosed?n=s:n++}this._isClosed?(g.set(k[2],p[0],p[1]),g.set(k[3],p[2],p[3])):(g.set(i,h[1],-h[0]),g.scaleAndAdd(k[2],e,i,o.thickness/2),g.scaleAndAdd(k[3],e,i,-o.thickness/2)),p[q++]=k[0][0],p[q++]=k[0][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[2][0],p[q++]=k[2][1],p[q++]=k[1][0],p[q++]=k[1][1],p[q++]=k[3][0],p[q++]=k[3][1],p[q++]=k[2][0],p[q++]=k[2][1]}}(),h.prototype.isValid=function(){if(this._nFillSegments>1)return!0;if(1==this._nFillSegments){if(this._nFillCurveSegements>0)return!0;if(this.basePolygon.points.length>2)return!0}},h.prototype.reverse=function(){b.reverse(this.fillSegments,this._nFillSegments,1),b.reverse(this.strokeSegments,this._nStrokeSegments,1);for(var a=0;a<this._nStrokeSegments;a++)this.strokeSegments[a].reverse()},h.prototype.toStatic=function(){this.basePolygon.toStatic(),this.interiorPolygon.toStatic(),this.fillSegments.length=0,this.strokeSegments.length=0,this.fillCurveSegments.length=0},h}),e("qtek-2d/context/tool/CachedList",["require"],function(){var a=function(a,b){this.factory=a,this.maxRange=b||50,this._size=0,this._data=[],this._max=0,this._needsClearCount=0};return a.prototype={constructor:a,increase:function(){var a=this._data[this._size];return a||(a=this._data[this._size]=new this.factory),this._size++,a},decrease:function(){this._size>0&&this._size--},clear:function(a){this.tick(a),this._size=0},tick:function(a){if(this._size>0&&this._max/this._size>2||this._max-this._size>this.maxRange?this._needsClearCount++:this._max<this._size?(this._needsClearCount=0,this._max=this._size):this._needsClearCount=0,this._needsClearCount>10){if(a)for(var b=this._size;b<this._data.length;b++)a(this._data[b]);this._max=this._data.length=this._size}},size:function(){return this._size},data:function(){return this._data},get:function(a){return this._data[a]}},a}),e("qtek-2d/context/CanvasPath",["require","qtek/math/Matrix2d","./DrawingStyle","./CanvasSubpath","./tool/CachedList","./CanvasElement","./tool/math","qtek/core/util"],function(a){var b=a("qtek/math/Matrix2d"),c=a("./DrawingStyle"),d=a("./CanvasSubpath"),e=a("./tool/CachedList"),f=a("./CanvasElement"),g=a("./tool/math"),h=a("qtek/core/util"),i=Math.PI/4,j=2*Math.PI,k=function(){this.eType=k.eType,this.subpaths=new e(d),this.drawingStyle=new c,this.transform=new b,this.depth=0,this._subpath=null,this._fill=!1,this._stroke=!1,this._firstCmd=!1,this._xi=0,this._yi=0,this._verticesData=null,this._fillColorChanged=!0,this._strokeColorChanged=!0,this._isStatic=!1};return k.prototype={constructor:k,getHashKey:function(){return this.eType},setStyle:function(a,b){"fillStyle"==a?this.setFillStyle(b):"strokeStyle"==a?this.setStrokeStyle(b):"lineWidth"==a||(this.drawingStyle[a]=b)},setStrokeLineWidth:function(a){if(this._stroke){if(this._isStatic)return void console.warn("Static path can't change its stroke line width");if(a!==this.drawingStyle.lineWidth){this.drawingStyle.lineWidth=a;for(var b=this.subpaths.data(),c=0;c<this.subpaths.size();c++)b[c].updateStrokeThickness(a);this._updateStrokeVertices()}}},setFillStyle:function(a){this.drawingStyle.setFillStyle(a),this._fillColorChanged=!0},setStrokeStyle:function(a){this.drawingStyle.setStrokeStyle(a),this._strokeColorChanged=!0},setGlobalAlpha:function(a){this.drawingStyle.globalAlpha=a,this._strokeColorChanged=!0,this._fillColorChanged=!0},moveTo:function(a,b){this._subpath&&this._endSubpath(),this._firstCmd=!1,this._subpath=this._beginSubpath(a,b),this._xi=a,this._yi=b},lineTo:function(a,b,c){if(!this._subpath){if(this._firstCmd)return this._subpath=this._beginSubpath(a,b),this._xi=a,this._yi=b,void(this._firstCmd=!1);this._subpath=this._beginSubpath(this._xi,this._yi)}var d=this._subpath.addLine(this._xi,this._yi,a,b,c);d&&this._endSubpath(),this._xi=a,this._yi=b},bezierCurveTo:function(a,b,c,d,e,f,g){if(!this._subpath){if(this._firstCmd)return this._subpath=this._beginSubpath(e,f),this._xi=e,this._yi=f,void(this._firstCmd=!1);this._subpath=this._beginSubpath(this._xi,this._yi)}var h=this._subpath.addCubicBezierCurve(this._xi,this._yi,a,b,c,d,e,f,g);
h&&this._endSubpath(),this._xi=e,this._yi=f},quadraticCurveTo:function(a,b,c,d,e){if(!this._subpath){if(this._firstCmd)return this._subpath=this._beginSubpath(c,d),this._xi=c,this._yi=d,void(this._firstCmd=!1);this._subpath=this._beginSubpath(this._xi,this._yi)}var f=this._subpath.addQuadraticBezierCurve(this._xi,this._yi,a,b,c,d,e);f&&this._endSubpath(),this._xi=c,this._yi=d},arc:function(a,b,c,d,e,f,h){"undefined"==typeof f&&(f=!1);var k=a+c*Math.cos(d),l=b+c*Math.sin(d);if(this._subpath||(this._subpath=this._beginSubpath(k,l),this._xi=k,this._yi=l,this._firstCmd=!1),g.approxEqualInt(k,this._xi)&&g.approxEqualInt(l,this._yi)||this._subpath.addLine(this._xi,this._yi,k,l,h),0!=c&&!g.approxEqual(d,e)){d%=j,e%=j,0>d&&(d+=j),0>e&&(e+=j),f?e>=d&&(e-=j):d>=e&&(e+=j);var m=e-d,n=Math.ceil(Math.abs(m)/i*c/50);4>n&&(n=4);for(var o,p,q,r,s,t,u,v,w=m/n,x=d,y=.5522847498,z=0;n>z;z++){o=x+w,f?e>o&&(o=e,w=o-x):o>e&&(o=e,w=o-x),t=a+c*Math.cos(o),u=b+c*Math.sin(o),v=Math.tan(w/2),p=k-y*(l-b)*v,q=l+y*(k-a)*v,r=t+y*(u-b)*v,s=u-y*(t-a)*v;var A=this._subpath.addCubicBezierCurve(k,l,p,q,r,s,t,u,h);if(A){this._endSubpath();break}k=t,l=u,x=o}this._xi=t,this._yi=u}},arcTo:function(){},rect:function(a,b,c,d,e){this._endSubpath(),this._subpath=this._beginSubpath(a,b),this._firstCmd=!1,this._subpath.addLine(a,b,a,b+d,e),this._subpath.addLine(a,b+d,a+c,b+d,e),this._subpath.addLine(a+c,b+d,a+c,b,e),this._subpath.addLine(a+c,b,a,b,e),this._xi=a,this._yi=b,this._endSubpath()},begin:function(){this.subpaths.clear(),this._subpath=null,this._stroke=this._fill=!1,this._isStatic=!1,this._firstCmd=!0},end:function(){this._endSubpath(),this.updateVertices()},stroke:function(a){this._subpath&&this._endSubpath(),this.drawingStyle.setStrokeStyle(a.strokeStyle),this.drawingStyle.lineWidth=a.lineWidth,this.drawingStyle.globalAlpha=a.globalAlpha,b.copy(this.transform,a.currentTransform);for(var c=a.currentTransform._array,d=Math.sqrt(c[0]*c[0]+c[1]*c[1]),e=Math.sqrt(c[2]*c[2]+c[3]*c[3]),f=this.subpaths.data(),g=0;g<this.subpaths.size();g++)f[g].stroke(d,e);this._stroke=!0},fill:function(a){this._subpath&&this._endSubpath(),this.drawingStyle.setFillStyle(a.fillStyle),this.drawingStyle.globalAlpha=a.globalAlpha,b.copy(this.transform,a.currentTransform);for(var c=this.subpaths.data(),d=0;d<this.subpaths.size();d++)c[d].fill();this._fill=!0},hasFill:function(){return this._fill},hasStroke:function(){return this._stroke},close:function(a){this._subpath&&this._subpath.close(a)},updateVertices:function(){this._verticesData||(this._verticesData={}),this._fill&&this._updateFillVertices(),this._stroke&&this._updateStrokeVertices()},_updateFillVertices:function(){this._verticesData.fill||(this._verticesData.fill={position:null,coord:null});var a=this._verticesData.fill;a.dirty=!0;for(var b=0,c=this.subpaths.data(),d=this.subpaths.size(),e=0;d>e;e++){var f=c[e];if(f._fill){b+=f.interiorPolygon.triangles.length;for(var g=0;g<f.fillCurveSegments.length;g++)b+=f.fillCurveSegments[g].triangles.length}}a.position&&a.position.length===3*b||(a.position=new Float32Array(3*b),a.coord=new Float32Array(3*b));for(var h=a.position,i=a.coord,j=this.depth,k=0,e=0;d>e;e++){var f=c[e];if(f._fill){for(var l=f.interiorPolygon,m=0;m<l.triangles.length;m++){var n=l.triangles[m];h[k]=l.points[2*n],h[k+1]=l.points[2*n+1],h[k+2]=j,i[k]=0,i[k+1]=1,i[k+2]=1,k+=3}for(var o=f.fillCurveSegments,m=0;m<o.length;m++)for(var p=o[m],q=0;q<p.triangles.length;q++){var n=p.triangles[q],r=p.points,s=p.coords;i[k]=s[3*n],i[k+1]=s[3*n+1],i[k+2]=s[3*n+2],h[k]=r[2*n],h[k+1]=r[2*n+1],h[k+2]=j,k+=3}}}},_updateStrokeVertices:function(){this._verticesData.stroke||(this._verticesData.stroke={position:null});var a=this._verticesData.stroke;a.dirty=!0;for(var b=0,c=this.subpaths.size(),d=this.subpaths.data(),e=0;c>e;e++){var f=d[e];f._stroke&&(b+=f.strokeVerticesArray.length/2)}a.position&&a.position.length===3*b||(a.position=new Float32Array(3*b));for(var g=a.position,h=0,i=this.depth,c=this.subpaths.size(),d=this.subpaths.data(),e=0;c>e;e++){var f=d[e],j=f.strokeVerticesArray;if(f._stroke)for(var k=0;k<j.length/2;k++)g[h]=j[2*k],g[h+1]=j[2*k+1],g[h+2]=i+.002,h+=3}},getFillVertices:function(){return this._verticesData.fill},getFillVertexNumber:function(){return this._verticesData.fill.position.length/3},getStrokeVertices:function(){return this._verticesData.stroke},getStrokeVertexNumber:function(){return this._verticesData.stroke.position.length/3},afterDraw:function(){this.transform._dirty=!1,this._fillColorChanged=!1,this._strokeColorChanged=!1,this._fill&&(this._verticesData.fill.dirty=!1),this._stroke&&(this._verticesData.stroke.dirty=!1)},clone:function(a){var b=new k;return this._fill||this._stroke?(b._fill=this._fill,b._stroke=this._stroke,b.depth=a.requestDepthChannel(),b.drawingStyle.copy(this.drawingStyle),b.transform.copy(this.transform),b._verticesData={fill:h.clone(this._verticesData.fill),stroke:h.clone(this._verticesData.stroke)},b._verticesData.fill&&(b._verticesData.fill.dirty=!0),b._verticesData.stroke&&(b._verticesData.stroke.dirty=!0),b):(console.warn("Path must have fill or stroke"),b)},toStatic:function(){for(var a=this.subpaths.data(),b=this.subpaths.size(),c=0;b>c;c++)a[c].toStatic();this._isStatic=!0},_endSubpath:function(){this._subpath&&(this._subpath.isValid()?this._subpath.end():this.subpaths.decrease(),this._subpath=null)},_beginSubpath:function(a,b){var c=this.subpaths.increase();return c.begin(a,b),c}},k.eType=f.register(k,null,null),k}),e("qtek-2d/context/CanvasPointCloud",function(){}),e("qtek/math/Vector3",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.vec3,d=function(a,b,d){a=a||0,b=b||0,d=d||0,this._array=c.fromValues(a,b,d),this._dirty=!0};return d.prototype={constructor:d,get x(){return this._array[0]},set x(a){this._array[0]=a,this._dirty=!0},get y(){return this._array[1]},set y(a){this._array[1]=a,this._dirty=!0},get z(){return this._array[2]},set z(a){this._array[2]=a,this._dirty=!0},add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b,c){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._dirty=!0,this},clone:function(){return new d(this.x,this.y,this.z)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},cross:function(a,b){return c.cross(a._array,this._array,b._array),a._dirty=!0,this},dist:function(a){return c.dist(this._array,a._array)},distance:function(a){return c.distance(this._array,a._array)},div:function(a){return c.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return c.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},min:function(a){return vec2.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return vec2.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return c.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return c.random(this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return c.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return c.sqrDist(this._array,a._array)},squaredDistance:function(a){return c.squaredDistance(this._array,a._array)},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},sub:function(a){return c.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return c.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat3:function(a){return c.transformMat3(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return c.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},transformQuat:function(a){return c.transformQuat(this._array,this._array,a._array),this._dirty=!0,this},applyProjection:function(a){var b=this._array;if(a=a._array,0===a[15]){var c=-1/b[2];b[0]=a[0]*b[0]*c,b[1]=a[5]*b[1]*c,b[2]=(a[10]*b[2]+a[14])*c}else b[0]=a[0]*b[0]+a[12],b[1]=a[5]*b[1]+a[13],b[2]=a[10]*b[2]+a[14];return this._dirty=!0,this},setEulerFromQuaternion:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d,e){c.set(a._array,b,d,e),a._dirty=!0},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.cross=function(a,b,d){return c.cross(a._array,b._array,d._array),a._dirty=!0,a},d.dist=function(a,b){return c.distance(a._array,b._array)},d.distance=d.dist,d.div=function(a,b,d){return c.divide(a._array,b._array,d._array),a._dirty=!0,a},d.divide=d.div,d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.min=function(a,b,d){return c.min(a._array,b._array,d._array),a._dirty=!0,a},d.max=function(a,b,d){return c.max(a._array,b._array,d._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.negate=function(a,b){return c.negate(a._array,b._array),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.random=function(a,b){return c.random(a._array,b),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d),a._dirty=!0,a},d.scaleAndAdd=function(a,b,d,e){return c.scaleAndAdd(a._array,b._array,d._array,e),a._dirty=!0,a},d.sqrDist=function(a,b){return c.sqrDist(a._array,b._array)},d.squaredDistance=d.sqrDist,d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.sub=function(a,b,d){return c.subtract(a._array,b._array,d._array),a._dirty=!0,a},d.subtract=d.sub,d.transformMat3=function(a,b,d){return c.transformMat3(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat4=function(a,b,d){return c.transformMat4(a._array,b._array,d._array),a._dirty=!0,a},d.transformQuat=function(a,b){return c.transformQuat(a._array,b._array,m._array),a._dirty=!0,a},d.POSITIVE_X=new d(1,0,0),d.NEGATIVE_X=new d(-1,0,0),d.POSITIVE_Y=new d(0,1,0),d.NEGATIVE_Y=new d(0,-1,0),d.POSITIVE_Z=new d(0,0,1),d.NEGATIVE_Z=new d(0,0,-1),d.UP=new d(0,1,0),d.ZERO=new d(0,0,0),d}),e("qtek/math/Quaternion",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.quat,d=function(a,b,d,e){a=a||0,b=b||0,d=d||0,e=void 0===e?1:e,this._array=c.fromValues(a,b,d,e),this._dirty=!0};return d.prototype={constructor:d,get x(){return this._array[0]},set x(a){this._array[0]=a,this._dirty=!0},get y(){return this._array[1]},set y(a){this._array[1]=a,this._dirty=!0},get z(){return this._array[2]},set z(a){this._array[2]=a,this._dirty=!0},get w(){return this._array[3]},set w(a){this._array[3]=a,this._dirty=!0},add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},calculateW:function(){return c.calculateW(this._array,this._array),this._dirty=!0,this},set:function(a,b,c,d){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._array[3]=d,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._array[3]=a[3],this._dirty=!0,this},clone:function(){return new d(this.x,this.y,this.z,this.w)},conjugate:function(){return c.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},fromMat3:function(a){return c.fromMat3(this._array,a._array),this._dirty=!0,this},fromMat4:function(){var a=b.mat3,d=a.create();return function(b){return a.fromMat4(d,b._array),a.transpose(d,d),c.fromMat3(this._array,d),this._dirty=!0,this}}(),identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(a){return c.rotateX(this._array,this._array,a),this._dirty=!0,this},rotateY:function(a){return c.rotateY(this._array,this._array,a),this._dirty=!0,this},rotateZ:function(a){return c.rotateZ(this._array,this._array,a),this._dirty=!0,this},rotationTo:function(a,b){return c.rotationTo(this._array,a._array,b._array),this._dirty=!0,this},setAxes:function(a,b,d){return c.setAxes(this._array,a._array,b._array,d._array),this._dirty=!0,this},setAxisAngle:function(a,b){return c.setAxisAngle(this._array,a._array,b),this._dirty=!0,this},slerp:function(a,b,d){return c.slerp(this._array,a._array,b._array,d),this._dirty=!0,this},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},setFromEuler:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d,e,f){c.set(a._array,b,d,e,f),a._dirty=!0},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.calculateW=function(a,b){return c.calculateW(a._array,b._array),a._dirty=!0,a},d.conjugate=function(a,b){return c.conjugate(a._array,b._array),a._dirty=!0,a},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a._dirty=!0,a},d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.slerp=function(a,b,d,e){return c.slerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.rotateX=function(a,b,d){return c.rotateX(a._array,b._array,d),a._dirty=!0,a},d.rotateY=function(a,b,d){return c.rotateY(a._array,b._array,d),a._dirty=!0,a},d.rotateZ=function(a,b,d){return c.rotateZ(a._array,b._array,d),a._dirty=!0,a},d.setAxisAngle=function(a,b,d){return c.setAxisAngle(a._array,b._array,d),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.fromMat3=function(a,b){return c.fromMat3(a._array,b._array),a._dirty=!0,a},d.setAxes=function(a,b,d,e){return c.setAxes(a._array,b._array,d._array,e._array),a._dirty=!0,a},d.rotationTo=function(a,b,d){return c.rotationTo(a._array,b._array,d._array),a._dirty=!0,a},d}),e("qtek/math/Matrix4",["require","glmatrix","./Vector3"],function(a){var b=a("glmatrix"),c=a("./Vector3"),d=b.mat4,e=b.vec3,f=b.mat3,g=b.quat,h=function(){this._axisX=new c,this._axisY=new c,this._axisZ=new c,this._array=d.create(),this._dirty=!0};return h.prototype={constructor:h,get forward(){var a=this._array;return this._axisZ.set(a[8],a[9],a[10]),this._axisZ},set forward(a){var b=this._array;a=a._array,b[8]=a[0],b[9]=a[1],b[10]=a[2],this._dirty=!0},get up(){var a=this._array;return this._axisY.set(a[4],a[5],a[6]),this._axisY},set up(a){var b=this._array;a=a._array,b[4]=a[0],b[5]=a[1],b[6]=a[2],this._dirty=!0},get right(){var a=this._array;return this._axisX.set(a[0],a[1],a[2]),this._axisX},set right(a){var b=this._array;a=a._array,b[0]=a[0],b[1]=a[1],b[2]=a[2],this._dirty=!0},adjoint:function(){return d.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new h).copy(this)},copy:function(a){return d.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return d.determinant(this._array)},fromQuat:function(a){return d.fromQuat(this._array,a._array),this._dirty=!0,this},fromRotationTranslation:function(a,b){return d.fromRotationTranslation(this._array,a._array,b._array),this._dirty=!0,this},fromMat2d:function(a){return h.fromMat2d(this,a),this},frustum:function(a,b,c,e,f,g){return d.frustum(this._array,a,b,c,e,f,g),this._dirty=!0,this},identity:function(){return d.identity(this._array),this._dirty=!0,this},invert:function(){return d.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(a,b,c){return d.lookAt(this._array,a._array,b._array,c._array),this._dirty=!0,this},mul:function(a){return d.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return d.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return d.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return d.multiply(this._array,a._array,this._array),this._dirty=!0,this},ortho:function(a,b,c,e,f,g){return d.ortho(this._array,a,b,c,e,f,g),this._dirty=!0,this},perspective:function(a,b,c,e){return d.perspective(this._array,a,b,c,e),this._dirty=!0,this},rotate:function(a,b){return d.rotate(this._array,this._array,a,b._array),this._dirty=!0,this},rotateX:function(a){return d.rotateX(this._array,this._array,a),this._dirty=!0,this},rotateY:function(a){return d.rotateY(this._array,this._array,a),this._dirty=!0,this},rotateZ:function(a){return d.rotateZ(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return d.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return d.translate(this._array,this._array,a._array),this._dirty=!0,this},transpose:function(){return d.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var a=e.create(),b=e.create(),c=e.create(),d=f.create();return function(h,i,j){var k=this._array;e.set(a,k[0],k[1],k[2]),e.set(b,k[4],k[5],k[6]),e.set(c,k[8],k[9],k[10]),h.x=e.length(a),h.y=e.length(b),h.z=e.length(c),j.set(k[12],k[13],k[14]),f.fromMat4(d,k),f.transpose(d,d),d[0]/=h.x,d[1]/=h.x,d[2]/=h.x,d[3]/=h.y,d[4]/=h.y,d[5]/=h.y,d[6]/=h.z,d[7]/=h.z,d[8]/=h.z,g.fromMat3(i._array,d),g.normalize(i._array,i._array),h._dirty=!0,i._dirty=!0,j._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},h.adjoint=function(a,b){return d.adjoint(a._array,b._array),a._dirty=!0,a},h.copy=function(a,b){return d.copy(a._array,b._array),a._dirty=!0,a},h.determinant=function(a){return d.determinant(a._array)},h.identity=function(a){return d.identity(a._array),a._dirty=!0,a},h.ortho=function(a,b,c,e,f,g,h){return d.ortho(a._array,b,c,e,f,g,h),a._dirty=!0,a},h.perspective=function(a,b,c,e,f){return d.perspective(a._array,b,c,e,f),a._dirty=!0,a},h.lookAt=function(a,b,c,e){return d.lookAt(a._array,b._array,c._array,e._array),a._dirty=!0,a},h.invert=function(a,b){return d.invert(a._array,b._array),a._dirty=!0,a},h.mul=function(a,b,c){return d.mul(a._array,b._array,c._array),a._dirty=!0,a},h.multiply=h.mul,h.fromQuat=function(a,b){return d.fromQuat(a._array,b._array),a._dirty=!0,a},h.fromRotationTranslation=function(a,b,c){return d.fromRotationTranslation(a._array,b._array,c._array),a._dirty=!0,a},h.fromMat2d=function(a,b){a._dirty=!0;var b=b._array,a=a._array;return a[0]=b[0],a[4]=b[2],a[12]=b[4],a[1]=b[1],a[5]=b[3],a[13]=b[5],a},h.rotate=function(a,b,c,e){return d.rotate(a._array,b._array,c,e._array),a._dirty=!0,a},h.rotateX=function(a,b,c){return d.rotateX(a._array,b._array,c),a._dirty=!0,a},h.rotateY=function(a,b,c){return d.rotateY(a._array,b._array,c),a._dirty=!0,a},h.rotateZ=function(a,b,c){return d.rotateZ(a._array,b._array,c),a._dirty=!0,a},h.scale=function(a,b,c){return d.scale(a._array,b._array,c._array),a._dirty=!0,a},h.transpose=function(a,b){return d.transpose(a._array,b._array),a._dirty=!0,a},h.translate=function(a,b,c){return d.translate(a._array,b._array,c._array),a._dirty=!0,a},h}),e("qtek/math/Matrix3",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.mat3,d=function(){this._array=c.create(),this._dirty=!0};return d.prototype={constructor:d,adjoint:function(){return c.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},determinant:function(){return c.determinant(this._array)},fromMat2d:function(a){return c.fromMat2d(this._array,a._array),this._dirty=!0,this},fromMat4:function(a){return c.fromMat4(this._array,a._array),this._dirty=!0,this},fromQuat:function(a){return c.fromQuat(this._array,a._array),this._dirty=!0,this},identity:function(){return c.identity(this._array),this._dirty=!0,this},invert:function(){return c.invert(this._array,this._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this._dirty=!0,this},rotate:function(a){return c.rotate(this._array,this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a._array),this._dirty=!0,this},translate:function(a){return c.translate(this._array,this._array,a._array),this._dirty=!0,this},normalFromMat4:function(a){return c.normalFromMat4(this._array,a._array),this._dirty=!0,this},transpose:function(){return c.transpose(this._array,this._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.adjoint=function(a,b){return c.adjoint(a._array,b._array),a._dirty=!0,a},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a._dirty=!0,a},d.invert=function(a,b){return c.invert(a._array,b._array),a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.fromMat2d=function(a,b){return c.fromMat2d(a._array,b._array),a._dirty=!0,a},d.fromMat4=function(a,b){return c.fromMat4(a._array,b._array),a._dirty=!0,a},d.fromQuat=function(a,b){return c.fromQuat(a._array,b._array),a._dirty=!0,a},d.normalFromMat4=function(a,b){return c.normalFromMat4(a._array,b._array),a._dirty=!0,a},d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a._dirty=!0,a},d.transpose=function(a,b){return c.transpose(a._array,b._array),a._dirty=!0,a},d.translate=function(a,b,d){return c.translate(a._array,b._array,d._array),a._dirty=!0,a},d}),e("qtek/Node",["require","./core/Base","./core/util","./math/Vector3","./math/Quaternion","./math/Matrix4","./math/Matrix3","glmatrix"],function(a){var b=a("./core/Base"),c=(a("./core/util"),a("./math/Vector3")),d=a("./math/Quaternion"),e=a("./math/Matrix4"),f=(a("./math/Matrix3"),a("glmatrix")),g=f.mat4,h=0,i=b.derive({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,parent:null,scene:null,autoUpdateLocalTransform:!0,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name="NODE_"+h++),this.position||(this.position=new c),this.rotation||(this.rotation=new d),this.scale||(this.scale=new c(1,1,1)),this.worldTransform=new e,this.localTransform=new e,this._children=[]},{visible:!0,isRenderable:function(){return!1},setName:function(a){this.scene&&(delete this.scene._nodeRepository[this.name],this.scene._nodeRepository[a]=this),this.name=a},add:function(a){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating"),a.parent!==this&&(a.parent&&a.parent.remove(a),a.parent=this,this._children.push(a),this.scene&&this.scene!==a.scene&&a.traverse(this._addSelfToScene,this))},remove:function(a){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var b=this._children.indexOf(a);0>b||(this._children.splice(b,1),a.parent=null,this.scene&&a.traverse(this._removeSelfFromScene,this))},_removeSelfFromScene:function(a){a.scene.removeFromScene(a),a.scene=null},_addSelfToScene:function(a,b){b.scene.addToScene(a),a.scene=b.scene},isAncestor:function(a){for(var b=a.parent;b;){if(b===this)return!0;b=b.parent}return!1},children:function(){return this._children.slice()},childAt:function(a){return this._children[a]},getChildByName:function(a){for(var b=0;b<this._children.length;b++)if(this._children[b].name===a)return this._children[b]},getDescendantByName:function(a){for(var b=0;b<this._children.length;b++){var c=this._children[b];if(c.name===a)return c;var d=c.getDescendantByName(a);if(d)return d}},traverse:function(a,b,c){this._inIterating=!0,(void 0===c||this.constructor===c)&&a(this,b);for(var d=this._children,e=0,f=d.length;f>e;e++)d[e].traverse(a,this,c);this._inIterating=!1},setLocalTransform:function(a){g.copy(this.localTransform._array,a._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(){this.localTransform.decomposeMatrix(this.scale,this.rotation,this.position)},setWorldTransform:function(a){g.copy(this.worldTransform._array,a._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var a=g.create();return function(b){this.parent?(g.invert(a,this.parent.worldTransform._array),g.multiply(this.localTransform._array,a,this.worldTransform._array)):g.copy(this.localTransform._array,b._array),this.localTransform.decomposeMatrix(this.scale,this.rotation,this.position)}}(),updateLocalTransform:function(){var a=this.position,b=this.rotation,c=this.scale;if(a._dirty||c._dirty||b._dirty){var d=this.localTransform._array;g.fromRotationTranslation(d,b._array,a._array),g.scale(d,d,c._array),b._dirty=!1,c._dirty=!1,a._dirty=!1,this._needsUpdateWorldTransform=!0}},updateWorldTransform:function(){this.parent?g.multiply(this.worldTransform._array,this.parent.worldTransform._array,this.localTransform._array):g.copy(this.worldTransform._array,this.localTransform._array)},update:function(a){this.autoUpdateLocalTransform?this.updateLocalTransform():a=!0,(a||this._needsUpdateWorldTransform)&&(this.updateWorldTransform(),a=!0,this._needsUpdateWorldTransform=!1);for(var b=0,c=this._children.length;c>b;b++)this._children[b].update(a)},getWorldPosition:function(a){var b=this.worldTransform._array;return a?(a._array[0]=b[12],a._array[1]=b[13],a._array[2]=b[14],a):new c(b[12],b[13],b[14])},clone:function(){var a=new this.constructor;a.position.copy(this.position),a.rotation.copy(this.rotation),a.scale.copy(this.scale);for(var b=0;b<this._children.length;b++)a.add(this._children[b].clone());return a},rotateAround:function(){var a=new c,b=new e;return function(c,d,e){a.copy(this.position).subtract(c),this.localTransform.identity(),this.localTransform.translate(c),this.localTransform.rotate(e,d),b.fromRotationTranslation(this.rotation,a),this.localTransform.multiply(b),this.localTransform.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var a=new e,b=new c;return function(c,d){a.lookAt(this.position,c,d||this.localTransform.up).invert(),a.decomposeMatrix(b,this.rotation,this.position)}}()});return i}),e("qtek/Shader",["require","./core/Base","./core/util","./core/Cache","glmatrix"],function(a){function b(){return{locations:{},attriblocations:{}}}function c(a){for(var b=a.split("\n"),c=0,d=b.length;d>c;c++)b[c]=c+1+": "+b[c];return b.join("\n")}var d=a("./core/Base"),e=a("./core/util"),f=a("./core/Cache"),g=a("glmatrix"),h=g.mat2,i=g.mat3,j=g.mat4,k=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,l=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,m=/#define\s+(\w+)?(\s+[\w-.]+)?\s*\n/g,n={bool:"1i","int":"1i",sampler2D:"t",samplerCube:"t","float":"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},o={bool:function(){return!0},"int":function(){return 0},"float":function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return h.create()},mat3:function(){return i.create()},mat4:function(){return j.create()},array:function(){return[]}},p=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT","SKIN_MATRIX"],q=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],r={},s=1,t=2,u=3,v=d.derive(function(){return{vertex:"",fragment:"",precision:"mediump",attribSemantics:{},matrixSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},lightNumber:{},_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new f,this._updateShaderString()},{setVertex:function(a){this.vertex=a,this._updateShaderString(),this.dirty()},setFragment:function(a){this.fragment=a,this._updateShaderString(),this.dirty()},bind:function(a){if(this._cache.use(a.__GLID__,b),this._currentLocationsMap=this._cache.get("locations"),this._cache.isDirty()){this._updateShaderString();var c=this._buildProgram(a,this._vertexProcessed,this._fragmentProcessed);if(this._cache.fresh(),c)return c}a.useProgram(this._cache.get("program"))},dirty:function(){this._cache.dirtyAll();for(var a=0;a<this._cache._caches.length;a++)if(this._cache._caches[a]){var b=this._cache._caches[a];b.locations={},b.attriblocations={}}},_updateShaderString:function(){(this.vertex!==this._vertexPrev||this.fragment!==this._fragmentPrev)&&(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefine()},define:function(a,b,c){c=void 0!==c?c:null,("vertex"==a||"both"==a)&&this.vertexDefines[b]!==c&&(this.vertexDefines[b]=c,this.dirty()),("fragment"==a||"both"==a)&&this.fragmentDefines[b]!==c&&(this.fragmentDefines[b]=c,"both"!==a&&this.dirty())},unDefine:function(a,b){("vertex"==a||"both"==a)&&this.isDefined("vertex",b)&&(delete this.vertexDefines[b],this.dirty()),("fragment"==a||"both"==a)&&this.isDefined("fragment",b)&&(delete this.fragmentDefines[b],"both"!==a&&this.dirty())},isDefined:function(a,b){switch(a){case"vertex":return void 0!==this.vertexDefines[b];case"fragment":return void 0!==this.fragmentDefines[b]}},getDefine:function(a,b){switch(a){case"vertex":return this.vertexDefines[b];case"fragment":return this.fragmentDefines[b]
}},enableTexture:function(a){var b=this._textureStatus[a];if(b){var c=b.enabled;c||(b.enabled=!0,this.dirty())}},enableTexturesAll:function(){for(var a in this._textureStatus)this._textureStatus[a].enabled=!0;this.dirty()},disableTexture:function(a){var b=this._textureStatus[a];if(b){var c=!b.enabled;c||(b.enabled=!1,this.dirty())}},disableTexturesAll:function(){for(var a in this._textureStatus)this._textureStatus[a].enabled=!1;this.dirty()},isTextureEnabled:function(a){return this._textureStatus[a].enabled},hasUniform:function(a){var b=this._currentLocationsMap[a];return null!==b&&void 0!==b},setUniform:function(a,b,c,d){var e=this._currentLocationsMap,f=e[c];if(null===f||void 0===f)return!1;switch(b){case"m4":a.uniformMatrix4fv(f,!1,d);break;case"2i":a.uniform2i(f,d[0],d[1]);break;case"2f":a.uniform2f(f,d[0],d[1]);break;case"3i":a.uniform3i(f,d[0],d[1],d[2]);break;case"3f":a.uniform3f(f,d[0],d[1],d[2]);break;case"4i":a.uniform4i(f,d[0],d[1],d[2],d[3]);break;case"4f":a.uniform4f(f,d[0],d[1],d[2],d[3]);break;case"1i":a.uniform1i(f,d);break;case"1f":a.uniform1f(f,d);break;case"1fv":a.uniform1fv(f,d);break;case"1iv":a.uniform1iv(f,d);break;case"2iv":a.uniform2iv(f,d);break;case"2fv":a.uniform2fv(f,d);break;case"3iv":a.uniform3iv(f,d);break;case"3fv":a.uniform3fv(f,d);break;case"4iv":a.uniform4iv(f,d);break;case"4fv":a.uniform4fv(f,d);break;case"m2":case"m2v":a.uniformMatrix2fv(f,!1,d);break;case"m3":case"m3v":a.uniformMatrix3fv(f,!1,d);break;case"m4v":if(d instanceof Array){for(var g=new Float32Array(16*d.length),h=0,i=0;i<d.length;i++)for(var j=d[i],k=0;16>k;k++)g[h++]=j[k];a.uniformMatrix4fv(f,!1,g)}else d instanceof Float32Array&&a.uniformMatrix4fv(f,!1,d)}return!0},setUniformBySemantic:function(a,b,c){var d=this.attribSemantics[b];return d?this.setUniform(a,d.type,d.symbol,c):!1},enableAttributes:function(a,b){var c=this._cache.get("program"),d=this._cache.get("attriblocations"),e=r[a.__GLID__];e||(e=r[a.__GLID__]=[]);for(var f=[],g=0;g<b.length;g++){var h=b[g];if(this.attributeTemplates[h]){var i=d[h];if(void 0===i){if(i=a.getAttribLocation(c,h),-1===i){f[g]=-1;continue}d[h]=i}f[g]=i,e[i]=e[i]?t:s}else f[g]=-1}for(var g=0;g<e.length;g++)switch(e[g]){case s:a.enableVertexAttribArray(g),e[g]=u;break;case t:e[g]=u;break;case u:a.disableVertexAttribArray(g),e[g]=0}return f},_parseImport:function(){this._vertexProcessedWithoutDefine=v.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=v.parseImport(this.fragment)},_addDefine:function(){var a=[];for(var b in this.lightNumber){var c=this.lightNumber[b];c>0&&a.push("#define "+b.toUpperCase()+"_NUMBER "+c)}for(var d in this._textureStatus){var e=this._textureStatus[d];e.enabled&&a.push("#define "+d.toUpperCase()+"_ENABLED")}for(var d in this.vertexDefines){var f=this.vertexDefines[d];a.push(null===f?"#define "+d:"#define "+d+" "+f.toString())}this._vertexProcessed=a.join("\n")+"\n"+this._vertexProcessedWithoutDefine,a=[];for(var b in this.lightNumber){var c=this.lightNumber[b];c>0&&a.push("#define "+b.toUpperCase()+"_NUMBER "+c)}for(var d in this._textureStatus){var e=this._textureStatus[d];e.enabled&&a.push("#define "+d.toUpperCase()+"_ENABLED")}for(var d in this.fragmentDefines){var f=this.fragmentDefines[d];a.push(null===f?"#define "+d:"#define "+d+" "+f.toString())}var g=a.join("\n")+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=["precision",this.precision,"float"].join(" ")+";\n"+g},_parseUniforms:function(){function a(a,e,f,g,h,i){if(e&&f){var j=n[e],k=!0;if(j){if(c._uniformList.push(f),("sampler2D"===e||"samplerCube"===e)&&(c._textureStatus[f]={enabled:!1,shaderType:d}),g&&(j+="v"),i)if(p.indexOf(i)>=0)c.attribSemantics[i]={symbol:f,type:j},k=!1;else if(q.indexOf(i)>=0){var l=!1,m=i;i.match(/TRANSPOSE$/)&&(l=!0,m=i.slice(0,-9)),c.matrixSemantics[i]={symbol:f,type:j,isTranspose:l,semanticNoTranspose:m},k=!1}else if("unconfigurable"===i)k=!1;else{var r=c._parseDefaultValue(e,i);if(!r)throw new Error('Unkown semantic "'+i+'"');i=""}k&&(b[f]={type:j,value:g?o.array:r||o[e],semantic:i||null})}return["uniform",e,f,g].join(" ")+";\n"}}var b={},c=this,d="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(k,a),d="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(k,a),c.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=b},_parseDefaultValue:function(a,b){var c=/\[\s*(.*)\s*\]/;{if("vec2"!==a&&"vec3"!==a&&"vec4"!==a)return"bool"===a?function(){return"true"===b.toLowerCase()?!0:!1}:"float"===a?function(){return parseFloat(b)}:void 0;var d=c.exec(b)[1];if(d){var e=d.split(/\s*,\s*/);return function(){return new Float32Array(e)}}}},createUniforms:function(){var a={};for(var b in this.uniformTemplates){var c=this.uniformTemplates[b];a[b]={type:c.type,value:c.value()}}return a},_parseAttributes:function(){function a(a,d,e,f,g){if(d&&e){var h=1;switch(d){case"vec4":h=4;break;case"vec3":h=3;break;case"vec2":h=2;break;case"float":h=1}if(b[e]={type:"float",size:h,semantic:g||null},g){if(p.indexOf(g)<0)throw new Error('Unkown semantic "'+g+'"');c.attribSemantics[g]={symbol:e,type:d}}}return["attribute",d,e].join(" ")+";\n"}var b={},c=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(l,a),this.attributeTemplates=b},_parseDefines:function(){function a(a,d,e){var f="vertex"===c?b.vertexDefines:b.fragmentDefines;return f[d]||(f[d]="false"==e?!1:"true"==e?!0:e?parseFloat(e):null),""}var b=this,c="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(m,a),c="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(m,a)},_buildProgram:function(a,b,c){this._cache.get("program")&&a.deleteProgram(this._cache.get("program"));var d=a.createProgram(),e=a.createShader(a.VERTEX_SHADER);a.shaderSource(e,b),a.compileShader(e);var f=a.createShader(a.FRAGMENT_SHADER);a.shaderSource(f,c),a.compileShader(f);var g=this._checkShaderErrorMsg(a,e,b);if(g)return g;if(g=this._checkShaderErrorMsg(a,f,c))return g;if(a.attachShader(d,e),a.attachShader(d,f),this.attribSemantics.POSITION&&a.bindAttribLocation(d,0,this.attribSemantics.POSITION.symbol),a.linkProgram(d),!a.getProgramParameter(d,a.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+a.getProgramParameter(d,a.VALIDATE_STATUS)+", gl error ["+a.getError()+"]";for(var h=0;h<this._uniformList.length;h++){var i=this._uniformList[h],j=this._cache.get("locations");j[i]=a.getUniformLocation(d,i)}a.deleteShader(e),a.deleteShader(f),this._cache.put("program",d)},_checkShaderErrorMsg:function(a,b,d){return a.getShaderParameter(b,a.COMPILE_STATUS)?void 0:[a.getShaderInfoLog(b),c(d)].join("\n")},clone:function(){var a=new v({vertex:this.vertex,fragment:this.fragment,vertexDefines:e.clone(this.vertexDefines),fragmentDefines:e.clone(this.fragmentDefines)});for(var b in this._textureStatus)a._textureStatus[b]=e.clone(this._textureStatus[b]);return a},dispose:function(a){if(this._cache.use(a.__GLID__),b)var b=this._cache.get("program");a.deleteProgram(b),this._cache.deleteContext(a.__GLID__),this._locations={}}}),w=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;v.parseImport=function(a){return a=a.replace(w,function(a,b,c){var a=v.source(c);return a?v.parseImport(a):(console.warn('Shader chunk "'+c+'" not existed in library'),"")})};var x=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;return v["import"]=function(a){a.replace(x,function(a,b,c,d){var d=d.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(d){for(var e=c.split("."),f=v.codes,g=0;g<e.length-1;){var h=e[g++];f[h]||(f[h]={}),f=f[h]}h=e[g],f[h]=d}return d})},v.codes={},v.source=function(a){for(var b=a.split("."),c=v.codes,d=0;c&&d<b.length;){var e=b[d++];c=c[e]}return c?c:void console.warn('Shader "'+a+'" not existed in library')},v}),e("qtek/light/light.essl",[],function(){return"@export buildin.header.directional_light\nuniform vec3 directionalLightDirection[ DIRECTIONAL_LIGHT_NUMBER ] : unconfigurable;\nuniform vec3 directionalLightColor[ DIRECTIONAL_LIGHT_NUMBER ] : unconfigurable;\n@end\n\n@export buildin.header.ambient_light\nuniform vec3 ambientLightColor[ AMBIENT_LIGHT_NUMBER ] : unconfigurable;\n@end\n\n@export buildin.header.point_light\nuniform vec3 pointLightPosition[ POINT_LIGHT_NUMBER ] : unconfigurable;\nuniform float pointLightRange[ POINT_LIGHT_NUMBER ] : unconfigurable;\nuniform vec3 pointLightColor[ POINT_LIGHT_NUMBER ] : unconfigurable;\n@end\n\n@export buildin.header.spot_light\nuniform vec3 spotLightPosition[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform vec3 spotLightDirection[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform float spotLightRange[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform float spotLightUmbraAngleCosine[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform float spotLightFalloffFactor[SPOT_LIGHT_NUMBER] : unconfigurable;\nuniform vec3 spotLightColor[SPOT_LIGHT_NUMBER] : unconfigurable;\n@end"}),e("qtek/Light",["require","./Node","./Shader","./light/light.essl"],function(a){var b=a("./Node"),c=a("./Shader"),d=b.derive(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512}},{type:"",clone:function(){var a=b.prototype.clone.call(this);return a.color=Array.prototype.slice.call(this.color),a.intensity=this.intensity,a.castShadow=this.castShadow,a.shadowResolution=this.shadowResolution,a}});return c["import"](a("./light/light.essl")),d}),e("qtek/Geometry",["require","./core/Base","./core/util","./core/glenum","./core/Cache"],function(a){"use strict";function b(a,b,c,d,e){this.name=a,this.type=b,this.size=c,d&&(this.semantic=d),e?(this._isDynamic=!0,this.value=[]):(this._isDynamic=!1,this.value=null)}function c(a,b,c,d,e){this.name=a,this.type=b,this.buffer=c,this.size=d,this.semantic=e,this.symbol=""}function d(a,b){this.buffer=a,this.count=b}function e(){console.warn("Geometry doesn't implement this method, use DynamicGeometry or StaticGeometry instead")}var f=a("./core/Base"),g=(a("./core/util"),a("./core/glenum")),h=a("./core/Cache");b.prototype.init=function(a){if(this._isDynamic)console.warn("Dynamic geometry not support init method");else if(!this.value||this.value.length!=a*this.size){var b;switch(this.type){case"byte":b=Int8Array;break;case"ubyte":b=Uint8Array;break;case"short":b=Int16Array;break;case"ushort":b=Uint16Array;break;default:b=Float32Array}this.value=new b(a*this.size)}},b.prototype.clone=function(a){var c=new b(this.name,this.type,this.size,this.semantic,this._isDynamic);return a&&console.warn("todo"),c};var i=f.derive({boundingBox:null,attributes:{},faces:null,useFace:!0,chunkSize:65535},function(){this._cache=new h,this._attributeList=Object.keys(this.attributes)},{dirty:e,createAttribute:e,removeAttribute:e,getVertexNumber:e,getFaceNumber:e,isUseFace:e,isStatic:e,getEnabledAttributes:e,getBufferChunks:e,generateVertexNormals:e,generateFaceNormals:e,isUniqueVertex:e,generateUniqueVertex:e,generateTangents:e,generateBarycentric:e,applyTransform:e,dispose:e});return i.STATIC_DRAW=g.STATIC_DRAW,i.DYNAMIC_DRAW=g.DYNAMIC_DRAW,i.STREAM_DRAW=g.STREAM_DRAW,i.AttributeBuffer=c,i.IndicesBuffer=d,i.Attribute=b,i}),e("qtek/math/BoundingBox",["require","./Vector3","glmatrix"],function(a){var b=a("./Vector3"),c=a("glmatrix"),d=(c.mat4,c.vec3),e=d.transformMat4,f=d.copy,g=d.set,h=function(a,c){this.min=a||new b(1/0,1/0,1/0),this.max=c||new b(-1/0,-1/0,-1/0);for(var e=[],f=0;8>f;f++)e[f]=d.fromValues(0,0,0);this.vertices=e};return h.prototype={constructor:h,updateFromVertices:function(a){if(a.length>0){var b=this.min._array,c=this.max._array;f(b,a[0]),f(c,a[0]);for(var d=1;d<a.length;d++){var e=a[d];b[0]=Math.min(e[0],b[0]),b[1]=Math.min(e[1],b[1]),b[2]=Math.min(e[2],b[2]),c[0]=Math.max(e[0],c[0]),c[1]=Math.max(e[1],c[1]),c[2]=Math.max(e[2],c[2])}this.min._dirty=!0,this.max._dirty=!0}},union:function(a){d.min(this.min._array,this.min._array,a.min._array),d.max(this.max._array,this.max._array,a.max._array),this.min._dirty=!0,this.max._dirty=!0},intersectBoundingBox:function(a){var b=this.min._array,c=this.max._array,d=a.min._array,e=a.max._array;return!(b[0]>e[0]||b[1]>e[1]||b[2]>e[1]||c[0]<d[0]||c[1]<d[1]||c[2]<d[2])},applyTransform:function(a){(this.min._dirty||this.max._dirty)&&(this.updateVertices(),this.min._dirty=!1,this.max._dirty=!1);var b=a._array,c=this.min._array,d=this.max._array,g=this.vertices,h=g[0];e(h,h,b),f(c,h),f(d,h);for(var i=1;8>i;i++)h=g[i],e(h,h,b),c[0]=Math.min(h[0],c[0]),c[1]=Math.min(h[1],c[1]),c[2]=Math.min(h[2],c[2]),d[0]=Math.max(h[0],d[0]),d[1]=Math.max(h[1],d[1]),d[2]=Math.max(h[2],d[2]);this.min._dirty=!0,this.max._dirty=!0},applyProjection:function(a){(this.min._dirty||this.max._dirty)&&(this.updateVertices(),this.min._dirty=!1,this.max._dirty=!1);var b=a._array,c=this.vertices[0],d=this.vertices[3],e=this.vertices[7],f=this.min._array,g=this.max._array;if(1===b[15])f[0]=b[0]*c[0]+b[12],f[1]=b[5]*c[1]+b[13],g[2]=b[10]*c[2]+b[14],g[0]=b[0]*e[0]+b[12],g[1]=b[5]*e[1]+b[13],f[2]=b[10]*e[2]+b[14];else{var h=-1/c[2];f[0]=b[0]*c[0]*h,f[1]=b[5]*c[1]*h,g[2]=(b[10]*c[2]+b[14])*h,h=-1/d[2],g[0]=b[0]*d[0]*h,g[1]=b[5]*d[1]*h,h=-1/e[2],f[2]=(b[10]*e[2]+b[14])*h}this.min._dirty=!0,this.max._dirty=!0},updateVertices:function(){var a=this.min._array,b=this.max._array,c=this.vertices;g(c[0],a[0],a[1],a[2]),g(c[1],a[0],b[1],a[2]),g(c[2],b[0],a[1],a[2]),g(c[3],b[0],b[1],a[2]),g(c[4],a[0],a[1],b[2]),g(c[5],a[0],b[1],b[2]),g(c[6],b[0],a[1],b[2]),g(c[7],b[0],b[1],b[2])},copy:function(a){f(this.min._array,a.min._array),f(this.max._array,a.max._array),this.min._dirty=!0,this.max._dirty=!0},clone:function(){var a=new h;return a.copy(this),a}},h}),e("qtek/StaticGeometry",["require","./Geometry","./core/util","./math/BoundingBox","glmatrix","./core/glenum"],function(a){var b=a("./Geometry"),d=(a("./core/util"),a("./math/BoundingBox")),e=a("glmatrix"),f=a("./core/glenum"),g=e.mat4,h=e.vec3,i=b.derive(function(){return{attributes:{position:new b.Attribute("position","float",3,"POSITION",!1),texcoord0:new b.Attribute("texcoord0","float",2,"TEXCOORD_0",!1),texcoord1:new b.Attribute("texcoord1","float",2,"TEXCOORD_1",!1),normal:new b.Attribute("normal","float",3,"NORMAL",!1),tangent:new b.Attribute("tangent","float",4,"TANGENT",!1),color:new b.Attribute("color","float",4,"COLOR",!1),weight:new b.Attribute("weight","float",3,"WEIGHT",!1),joint:new b.Attribute("joint","float",4,"JOINT",!1),barycentric:new b.Attribute("barycentric","float",3,null,!1)},hint:f.STATIC_DRAW,faces:null,_normalType:"vertex",_enabledAttributes:null}},{dirty:function(){this._cache.dirtyAll(),this._enabledAttributes=null},getVertexNumber:function(){return this.attributes.position.value?this.attributes.position.value.length/3:0},getFaceNumber:function(){return this.faces.length/3},isUseFace:function(){return this.useFace&&null!=this.faces},isStatic:function(){return!0},createAttribute:function(a,c,d,e){var f=new b.Attribute(a,c,d,e,!1);return this.attributes[a]=f,this._attributeList.push(a),f},removeAttribute:function(a){var b=this._attributeList.indexOf(a);return b>=0?(this._attributeList.splice(b,1),delete this.attributes[a],!0):!1},getEnabledAttributes:function(){if(this._enabledAttributes)return this._enabledAttributes;for(var a=[],b=this.getVertexNumber(),c=0;c<this._attributeList.length;c++){var d=this._attributeList[c],e=this.attributes[d];e.value&&e.value.length===b*e.size&&a.push(d)}return this._enabledAttributes=a,a},getBufferChunks:function(a){return this._cache.use(a.__GLID__),this._cache.isDirty()&&(this._updateBuffer(a),this._cache.fresh()),this._cache.get("chunks")},_updateBuffer:function(a){var c=this._cache.get("chunks"),d=!1;c||(c=[],c[0]={attributeBuffers:[],indicesBuffer:null},this._cache.put("chunks",c),d=!0);for(var e=c[0],f=e.attributeBuffers,g=e.indicesBuffer,h=this.getEnabledAttributes(),i=0,j=0,k=0;k<h.length;k++){var l,m=h[k],n=this.attributes[m];if(!d){for(var o=i;o<f.length;o++)if(f[o].name===m){l=f[o],i=o+1;break}if(!l)for(var o=i-1;o>=0;o--)if(f[o].name===m){l=f[o],i=o;break}}var p;p=l?l.buffer:a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,p),a.bufferData(a.ARRAY_BUFFER,n.value,this.hint),f[j++]=new b.AttributeBuffer(m,n.type,p,n.size,n.semantic)}f.length=j,!g&&this.isUseFace()&&(g=new b.IndicesBuffer(a.createBuffer(),this.faces.length),e.indicesBuffer=g,a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,g.buffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.faces,this.hint))},generateVertexNormals:function(){var a=this.faces,b=this.attributes.position.value,c=this.attributes.normal.value;if(c&&c.length===b.length)for(var d=0;d<c.length;d++)c[d]=0;else c=this.attributes.normal.value=new Float32Array(b.length);for(var e=h.create(),f=h.create(),g=h.create(),i=h.create(),j=h.create(),k=h.create(),l=0;l<a.length;){var m=a[l++],n=a[l++],o=a[l++];h.set(e,b[3*m],b[3*m+1],b[3*m+2]),h.set(f,b[3*n],b[3*n+1],b[3*n+2]),h.set(g,b[3*o],b[3*o+1],b[3*o+2]),h.sub(i,e,f),h.sub(j,f,g),h.cross(k,i,j);for(var d=0;3>d;d++)c[3*m+d]=c[3*m+d]+k[d],c[3*n+d]=c[3*n+d]+k[d],c[3*o+d]=c[3*o+d]+k[d]}for(var d=0;d<c.length;)h.set(k,c[d],c[d+1],c[d+2]),h.normalize(k,k),c[d++]=k[0],c[d++]=k[1],c[d++]=k[2]},generateFaceNormals:function(){this.isUniqueVertex()||this.generateUniqueVertex();var a=this.faces,b=this.attributes.position.value,c=this.attributes.normal.value,d=h.create(),e=h.create(),f=h.create(),g=h.create(),i=h.create(),j=h.create();c||(c=this.attributes.position.value=new Float32Array(b.length));for(var k=0;k<a.length;){var l=a[k++],m=a[k++],n=a[k++];h.set(d,b[3*l],b[3*l+1],b[3*l+2]),h.set(e,b[3*m],b[3*m+1],b[3*m+2]),h.set(f,b[3*n],b[3*n+1],b[3*n+2]),h.sub(g,d,e),h.sub(i,e,f),h.cross(j,g,i),h.normalize(j,j);for(var o=0;3>o;o++)c[3*l+o]=j[o],c[3*m+o]=j[o],c[3*n+o]=j[o]}},generateTangents:function(){var a=this.getVertexNumber();this.attributes.tangent.value||(this.attributes.tangent.value=new Float32Array(4*a));for(var b=this.attributes.texcoord0.value,c=this.attributes.position.value,d=this.attributes.tangent.value,e=this.attributes.normal.value,f=[],g=[],i=0;a>i;i++)f[i]=[0,0,0],g[i]=[0,0,0];for(var j=[0,0,0],k=[0,0,0],i=0;i<this.faces.length;){var l=this.faces[i++],m=this.faces[i++],n=this.faces[i++],o=b[2*l],p=b[2*m],q=b[2*n],r=b[2*l+1],s=b[2*m+1],t=b[2*n+1],u=c[3*l],v=c[3*m],w=c[3*n],x=c[3*l+1],y=c[3*m+1],z=c[3*n+1],A=c[3*l+2],B=c[3*m+2],C=c[3*n+2],D=v-u,E=w-u,F=y-x,G=z-x,H=B-A,I=C-A,J=p-o,K=q-o,L=s-r,M=t-r,N=1/(J*M-L*K);j[0]=(M*D-L*E)*N,j[1]=(M*F-L*G)*N,j[2]=(M*H-L*I)*N,k[0]=(J*E-K*D)*N,k[1]=(J*G-K*F)*N,k[2]=(J*I-K*H)*N,h.add(f[l],f[l],j),h.add(f[m],f[m],j),h.add(f[n],f[n],j),h.add(g[l],g[l],k),h.add(g[m],g[m],k),h.add(g[n],g[n],k)}for(var O=h.create(),P=h.create(),Q=h.create(),i=0;a>i;i++){Q[0]=e[3*i],Q[1]=e[3*i+1],Q[2]=e[3*i+2];var R=f[i];h.scale(O,Q,h.dot(Q,R)),h.sub(O,R,O),h.normalize(O,O),h.cross(P,Q,R),d[4*i]=O[0],d[4*i+1]=O[1],d[4*i+2]=O[2],d[4*i+3]=h.dot(P,g[i])<0?-1:1}},isUniqueVertex:function(){return this.isUseFace()?this.getVertexNumber()===this.faces.length:!0},generateUniqueVertex:function(){for(var a=[],b=0,c=this.getVertexNumber();c>b;b++)a[b]=0;for(var d=this.getVertexNumber(),e=this.attributes,f=this.faces,g=this.getEnabledAttributes(),h=0;h<g.length;h++){for(var i=g[h],j=new Float32Array(this.faces.length*e[i].size),c=e[i].value.length,b=0;c>b;b++)j[b]=e[i].value[b];e[i].value=j}for(var b=0;b<f.length;b++){var k=f[b];if(a[k]>0){for(var h=0;h<g.length;h++)for(var i=g[h],l=e[i].value,m=e[i].size,n=0;m>n;n++)l[d*m+n]=l[k*m+n];f[b]=d,d++}a[k]++}},generateBarycentric:function(){this.isUniqueVertex()||this.generateUniqueVertex();var a=this.attributes.barycentric.value;if(!a||a.length!==3*this.faces.length){a=this.attributes.barycentric.value=new Float32Array(3*this.faces.length);for(var b=0;b<this.faces.length;)for(var c=0;3>c;c++){var d=this.faces[b++];a[d+c]=1}}},convertToDynamic:function(a){for(var b=(this._arrayChunks[c],0);b<this.faces.length;b+=3)a.faces.push(this.face.subarray(b,b+3));var e=this.getEnabledAttributes();for(var f in e){var g=e[f],h=a.attributes[f];h||(h=a.attributes[f]={type:g.type,size:g.size,value:[]},g.semantic&&(h.semantic=g.semantic));for(var b=0;b<g.value.length;b+=g.size)h.value.push(1===g.size?g.array[b]:g.subarray(b,b+g.size))}return this.boundingBox&&(a.boundingBox=new d,a.boundingBox.min.copy(this.boundingBox.min),a.boundingBox.max.copy(this.boundingBox.max)),a},applyTransform:function(a){this.boundingBox&&this.boundingBox.applyTransform(a);var b=this.attributes.position.value,c=this.attributes.normal.value,d=this.attributes.tangent.value;a=a._array;var e=g.create();g.invert(e,a),g.transpose(e,e),h.forEach(b,3,0,null,h.transformMat4,a),c&&h.forEach(c,3,0,null,h.transformMat4,e),d&&h.forEach(d,4,0,null,h.transformMat4,e)},dispose:function(a){this._cache.use(a.__GLID__);var b=this._cache.get("chunks");if(b)for(var c=0;c<b.length;c++)for(var d=b[c],e=0;e<d.attributeBuffers.length;e++){var f=d.attributeBuffers[e];a.deleteBuffer(f.buffer)}this._cache.deleteContext(a.__GLID__)}});return i}),e("qtek/Renderable",["require","./Node","./core/glenum","./core/glinfo","./math/Vector3","./StaticGeometry"],function(a){function b(a,b,c){this.availableAttributes=a,this.availableAttributeSymbols=b,this.indicesBuffer=c,this.vao=null}var c,d=a("./Node"),e=a("./core/glenum"),f=(a("./core/glinfo"),a("./math/Vector3"),a("./StaticGeometry"),0),g=null,h=!0,i=function(){this.faceNumber=0,this.vertexNumber=0,this.drawCallNumber=0},j=d.derive({material:null,geometry:null,mode:e.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new i},{lineWidth:1,culling:!0,cullFace:e.BACK,frontFace:e.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,isRenderable:function(){return this.geometry&&this.material&&this.material.shader&&this.visible},render:function(a,d){var i=d||this.material,j=i.shader,k=this.geometry,l=this.mode,m=null,n=k.hint==e.STATIC_DRAW,o=k.getVertexNumber(),p=k.isUseFace(),q=this._renderInfo;q.vertexNumber=o,q.faceNumber=0,q.drawCallNumber=0;var r=!1;if(c=a.__GLID__+"-"+k.__GUID__+"-"+j.__GUID__,o>k.chunkSize&&p||m&&n?r=!0:k._cache.isDirty()?r=!0:c!==f&&(r=!0),r=!0,f=c,r){var s=this._drawCache[c];if(!s){var t=k.getBufferChunks(a);if(!t)return;s=[];for(var u=0;u<t.length;u++){for(var v=t[u],w=v.attributeBuffers,x=v.indicesBuffer,y=[],z=[],A=0;A<w.length;A++){var B=w[A],C=B.name,D=B.semantic;if(D)var E=j.attribSemantics[D],F=E&&E.symbol;else var F=C;F&&j.attributeTemplates[F]&&(y.push(B),z.push(F))}var G=new b(y,z,x);s.push(G)}n&&(this._drawCache[c]=s)}for(var H=0;H<s.length;H++){var G=s[H],I=!0;m&&n&&(null==G.vao?G.vao=m.createVertexArrayOES():I=!1,m.bindVertexArrayOES(G.vao));var y=G.availableAttributes,z=G.availableAttributeSymbols,x=G.indicesBuffer;if(I)for(var J=j.enableAttributes(a,G.availableAttributeSymbols),A=0;A<y.length;A++){var K=J[A];if(-1!==K){var L,B=y[A],M=B.buffer,F=z[A],N=B.size;switch(B.type){case"float":L=a.FLOAT;break;case"byte":L=a.BYTE;break;case"ubyte":L=a.UNSIGNED_BYTE;break;case"short":L=a.SHORT;break;case"ushort":L=a.UNSIGNED_SHORT;break;default:L=a.FLOAT}a.bindBuffer(a.ARRAY_BUFFER,M),a.vertexAttribPointer(K,N,L,!1,0,0),m&&n&&a.enableVertexAttribArray(K)}}(l==e.LINES||l==e.LINE_STRIP||l==e.LINE_LOOP)&&a.lineWidth(this.lineWidth),g=x,h=k.isUseFace(),h?(I&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,x.buffer),a.drawElements(l,x.count,a.UNSIGNED_SHORT,0),q.faceNumber+=x.count/3):a.drawArrays(l,0,o),m&&n&&m.bindVertexArrayOES(null),q.drawCallNumber++}}else h?(a.drawElements(l,g.count,a.UNSIGNED_SHORT,0),q.faceNumber=g.count/3):a.drawArrays(l,0,o),q.drawCallNumber=1;return q},clone:function(){var a=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var b=d.prototype.clone.call(this);b.geometry=this.geometry,b.material=this.material;for(var c=0;c<a.length;c++){var e=a[c];b[e]!==this[e]&&(b[e]=this[e])}return b}}()});return j.beforeFrame=function(){f=0},j.POINTS=e.POINTS,j.LINES=e.LINES,j.LINE_LOOP=e.LINE_LOOP,j.LINE_STRIP=e.LINE_STRIP,j.TRIANGLES=e.TRIANGLES,j.TRIANGLE_STRIP=e.TRIANGLE_STRIP,j.TRIANGLE_FAN=e.TRIANGLE_FAN,j.BACK=e.BACK,j.FRONT=e.FRONT,j.FRONT_AND_BACK=e.FRONT_AND_BACK,j.CW=e.CW,j.CCW=e.CCW,j.RenderInfo=i,j}),e("qtek/Mesh",["require","./Renderable","./core/glenum","./core/glinfo"],function(a){var b=a("./Renderable"),c=a("./core/glenum"),d=(a("./core/glinfo"),b.derive({mode:c.TRIANGLES,skeleton:null,joints:null},function(){this.joints||(this.joints=[])},{render:function(a,c){var d=c||this.material;if(this.skeleton){var e=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);d.shader.setUniformBySemantic(a,"SKIN_MATRIX",e)}return b.prototype.render.call(this,a,c)}}));return d.POINTS=c.POINTS,d.LINES=c.LINES,d.LINE_LOOP=c.LINE_LOOP,d.LINE_STRIP=c.LINE_STRIP,d.TRIANGLES=c.TRIANGLES,d.TRIANGLE_STRIP=c.TRIANGLE_STRIP,d.TRIANGLE_FAN=c.TRIANGLE_FAN,d.BACK=c.BACK,d.FRONT=c.FRONT,d.FRONT_AND_BACK=c.FRONT_AND_BACK,d.CW=c.CW,d.CCW=c.CCW,d}),e("qtek/shader/source/basic.essl",[],function(){return"@export buildin.basic.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n    vec3 skinnedPosition = position;\n\n    #ifdef SKINNING\n        \n        @import buildin.chunk.skin_matrix\n        \n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_Barycentric = barycentric;\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n\n\n@export buildin.basic.fragment\n\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#extension GL_OES_standard_derivatives : enable\n@import buildin.util.edge_factor\n\nvoid main()\n{\n\n    #ifdef RENDER_TEXCOORD\n        gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n        return;\n    #endif\n\n    gl_FragColor = vec4(color, alpha);\n    \n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D( diffuseMap, v_Texcoord );\n\n        #ifdef SRGB_DECODE\n            tex.rgb = pow(tex.rgb, vec3(2.2));\n        #endif\n        \n        #if defined(DIFFUSEMAP_ALPHA_ALPHA)\n            gl_FragColor.a = tex.a;\n        #endif\n\n        gl_FragColor.rgb *= tex.rgb;\n    #endif\n\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.01)\n    {\n        gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n}\n\n@end"}),e("qtek/shader/source/lambert.essl",[],function(){return"/**\n * http://en.wikipedia.org/wiki/Lambertian_reflectance\n */\n\n@export buildin.lambert.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n\n    #ifdef SKINNING\n        \n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n        // Normal matrix ???\n        skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n\n\n@export buildin.lambert.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main()\n{\n    #ifdef RENDER_NORMAL\n        gl_FragColor = vec4(v_Normal, 1.0);\n        return;\n    #endif\n    #ifdef RENDER_TEXCOORD\n        gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n        return;\n    #endif\n\n    gl_FragColor = vec4(color, alpha);\n\n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D( diffuseMap, v_Texcoord );\n        #ifdef SRGB_DECODE\n            tex.rgb = pow(tex.rgb, vec3(2.2));\n        #endif\n        gl_FragColor.rgb *= tex.rgb;\n        #ifdef DIFFUSEMAP_ALPHA_ALPHA\n            gl_FragColor.a *= tex.a;\n        #endif\n    #endif\n\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n    \n    #ifdef AMBIENT_LIGHT_NUMBER\n        for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n        {\n            diffuseColor += ambientLightColor[i];\n        }\n    #endif\n    // Compute point light color\n    #ifdef POINT_LIGHT_NUMBER\n        #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[POINT_LIGHT_NUMBER];\n            if( shadowEnabled )\n            {\n                computeShadowOfPointLights( v_WorldPosition, shadowContribs );\n            }\n        #endif\n        for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n        {\n\n            vec3 lightPosition = pointLightPosition[i];\n            vec3 lightColor = pointLightColor[i];\n            float range = pointLightRange[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n\n            // Calculate point light attenuation\n            float dist = length(lightDirection);\n            float attenuation = lightAttenuation(dist, range);\n\n            // Normalize vectors\n            lightDirection /= dist;\n\n            float ndl = dot( v_Normal, lightDirection );\n\n            float shadowContrib = 1.0;\n            #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled )\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n        }\n    #endif\n    #ifdef DIRECTIONAL_LIGHT_NUMBER\n        #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[DIRECTIONAL_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfDirectionalLights( v_WorldPosition, shadowContribs );\n            }\n        #endif\n        for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n        {\n            vec3 lightDirection = -directionalLightDirection[i];\n            vec3 lightColor = directionalLightColor[i];\n            \n            float ndl = dot( v_Normal, normalize( lightDirection ) );\n\n            float shadowContrib = 1.0;\n            #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled )\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n        }\n    #endif\n    \n    #ifdef SPOT_LIGHT_NUMBER\n        #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[SPOT_LIGHT_NUMBER];\n            if( shadowEnabled )\n            {\n                computeShadowOfSpotLights( v_WorldPosition, shadowContribs );\n            }\n        #endif\n        for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n        {\n            vec3 lightPosition = -spotLightPosition[i];\n            vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n            vec3 lightColor = spotLightColor[i];\n            float range = spotLightRange[i];\n            float a = spotLightUmbraAngleCosine[i];\n            float b = spotLightPenumbraAngleCosine[i];\n            float falloffFactor = spotLightFalloffFactor[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n            // Calculate attenuation\n            float dist = length(lightDirection);\n            float attenuation = lightAttenuation(dist, range); \n\n            // Normalize light direction\n            lightDirection /= dist;\n            // Calculate spot light fall off\n            float c = dot(spotLightDirection, lightDirection);\n\n            float falloff;\n            falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n            falloff = pow(falloff, falloffFactor);\n\n            float ndl = dot(v_Normal, lightDirection);\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n                if( shadowEnabled )\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n\n        }\n    #endif\n\n    gl_FragColor.rgb *= diffuseColor;\n    gl_FragColor.rgb += emission;\n    if(lineWidth > 0.01)\n    {\n        gl_FragColor.rgb = gl_FragColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n}\n\n@end"
}),e("qtek/shader/source/phong.essl",[],function(){return"\n// http://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model\n\n@export buildin.phong.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\n\nuniform vec2 uvRepeat : [1.0, 1.0];\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n\n#ifdef VERTEX_COLOR\nattribute vec4 color : COLOR;\n#endif\n\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n\nvoid main()\n{\n    \n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n    #ifdef SKINNING\n        \n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n        // Normal matrix ???\n        skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n        skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n\n    v_Texcoord = texcoord * uvRepeat;\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n    v_Barycentric = barycentric;\n\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    \n    #ifdef NORMALMAP_ENABLED\n        v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n        v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n    #endif\n\n    #ifdef VERTEX_COLOR\n        v_Color = color;\n    #endif\n}\n\n@end\n\n\n@export buildin.phong.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nuniform sampler2D diffuseMap;\nuniform sampler2D normalMap;\nuniform samplerCube environmentMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nuniform float shininess : 30;\n\nuniform vec3 specularColor : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\n\nuniform float reflectivity : 0.5;\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\nvoid main()\n{\n    #ifdef RENDER_TEXCOORD\n        gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n        return;\n    #endif\n\n    vec4 finalColor = vec4(color, alpha);\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(eyePos - v_WorldPosition);\n\n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D(diffuseMap, v_Texcoord);\n        #ifdef SRGB_DECODE\n            tex.rgb = pow(tex.rgb, vec3(2.2));\n        #endif\n        finalColor.rgb *= tex.rgb;\n        #ifdef DIFFUSEMAP_ALPHA_ALPHA\n            finalColor.a *= tex.a;\n        #endif\n    #endif\n\n    vec3 normal = v_Normal;\n    #ifdef NORMALMAP_ENABLED\n        normal = texture2D(normalMap, v_Texcoord).xyz * 2.0 - 1.0;\n        mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n        normal = normalize(tbn * normal);\n    #endif\n\n    #ifdef RENDER_NORMAL\n        gl_FragColor = vec4(normal, 1.0);\n        return;\n    #endif\n\n    // Diffuse part of all lights\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    // Specular part of all lights\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    \n    #ifdef AMBIENT_LIGHT_NUMBER\n        for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n        {\n            diffuseTerm += ambientLightColor[i];\n        }\n    #endif\n    #ifdef POINT_LIGHT_NUMBER\n        #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[POINT_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfPointLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n        {\n            vec3 lightPosition = pointLightPosition[i];\n            vec3 lightColor = pointLightColor[i];\n            float range = pointLightRange[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n\n            // Calculate point light attenuation\n            float dist = length(lightDirection);\n            float attenuation = lightAttenuation(dist, range); \n\n            // Normalize vectors\n            lightDirection /= dist;\n            vec3 halfVector = normalize(lightDirection + viewDirection);\n\n            float ndh = dot(normal, halfVector);\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot(normal,  lightDirection);\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n                if(shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lightColor * ndl * attenuation * shadowContrib;\n\n            diffuseTerm += li;\n            if (shininess > 0.0)\n            {\n                specularTerm += li * pow(ndh, shininess);\n            }\n\n        }\n    #endif\n\n    #ifdef DIRECTIONAL_LIGHT_NUMBER\n        #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[DIRECTIONAL_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfDirectionalLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n        {\n\n            vec3 lightDirection = -normalize(directionalLightDirection[i]);\n            vec3 lightColor = directionalLightColor[i];\n\n            vec3 halfVector = normalize(lightDirection + viewDirection);\n\n            float ndh = dot(normal, halfVector);\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot(normal, lightDirection);\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n                if(shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lightColor * ndl * shadowContrib;\n\n            diffuseTerm += li;\n            if (shininess > 0.0)\n            {\n                specularTerm += li * pow(ndh, shininess);\n            }\n        }\n    #endif\n\n    #ifdef SPOT_LIGHT_NUMBER\n        #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[SPOT_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfSpotLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n        {\n            vec3 lightPosition = spotLightPosition[i];\n            vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n            vec3 lightColor = spotLightColor[i];\n            float range = spotLightRange[i];\n            float a = spotLightUmbraAngleCosine[i];\n            float b = spotLightPenumbraAngleCosine[i];\n            float falloffFactor = spotLightFalloffFactor[i];\n\n            vec3 lightDirection = lightPosition - v_WorldPosition;\n            // Calculate attenuation\n            float dist = length(lightDirection);\n            float attenuation = lightAttenuation(dist, range); \n\n            // Normalize light direction\n            lightDirection /= dist;\n            // Calculate spot light fall off\n            float c = dot(spotLightDirection, lightDirection);\n\n            float falloff;\n            // Fomular from real-time-rendering\n            falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n            falloff = pow(falloff, falloffFactor);\n\n            vec3 halfVector = normalize(lightDirection + viewDirection);\n\n            float ndh = dot(normal, halfVector);\n            ndh = clamp(ndh, 0.0, 1.0);\n\n            float ndl = dot(normal, lightDirection);\n            ndl = clamp(ndl, 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n                if (shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n\n            diffuseTerm += li;\n            if (shininess > 0.0)\n            {\n                specularTerm += li * pow(ndh, shininess);\n            }\n        }\n    #endif\n\n    finalColor.rgb *= diffuseTerm;\n    finalColor.rgb += specularTerm * specularColor;\n    finalColor.rgb += emission;\n\n    #ifdef ENVIRONMENTMAP_ENABLED\n        vec3 envTex = textureCube(environmentMap, reflect(-viewDirection, normal)).xyz;\n        finalColor.rgb = finalColor.rgb + envTex * reflectivity;\n    #endif\n\n    if(lineWidth > 0.01)\n    {\n        finalColor.rgb = finalColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n    #ifdef GAMMA_ENCODE\n        finalColor.rgb = pow(finalColor.rgb, vec3(1 / 2.2));\n    #endif\n\n    gl_FragColor = finalColor;\n}\n\n@end"}),e("qtek/shader/source/physical.essl",[],function(){return"\n// http://blog.selfshadow.com/publications/s2013-shading-course/\n\n@export buildin.physical.vertex\n\n@import buildin.phong.vertex\n\n@end\n\n\n@export buildin.physical.fragment\n\n#define PI 3.14159265358979\n\nuniform mat4 viewInverse : VIEWINVERSE;\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\n#ifdef NORMALMAP_ENABLED\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n\nuniform sampler2D diffuseMap;\nuniform sampler2D normalMap;\nuniform samplerCube environmentMap;\n\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n\nuniform float glossiness : 0.5;\n\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\nuniform vec3 emission : [0.0, 0.0, 0.0];\n\n// Uniforms for wireframe\nuniform float lineWidth : 0.0;\nuniform vec3 lineColor : [0.0, 0.0, 0.0];\nvarying vec3 v_Barycentric;\n\n#ifdef AMBIENT_LIGHT_NUMBER\n@import buildin.header.ambient_light\n#endif\n#ifdef POINT_LIGHT_NUMBER\n@import buildin.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_NUMBER\n@import buildin.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_NUMBER\n@import buildin.header.spot_light\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\n// Import util functions and uniforms needed\n@import buildin.util.calculate_attenuation\n\n@import buildin.util.edge_factor\n\n@import buildin.plugin.compute_shadow_map\n\n\nfloat G_Smith(float glossiness, float ndv, float ndl)\n{\n    // float k = (roughness+1.0) * (roughness+1.0) * 0.125;\n    float roughness = 1.0 - glossiness;\n    float k = roughness * roughness / 2.0;\n    float G1V = ndv / (ndv * (1.0 - k) + k);\n    float G1L = ndl / (ndl * (1.0 - k) + k);\n    return G1L * G1V;\n}\n\nvec3 F_Schlick(float ldn) {\n    return specularColor + (1.0 - specularColor) * pow(1.0 - ldn, 5.0);\n}\n\nfloat D_Phong(float g, float ndh) {\n    // from black ops 2\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\n\nfloat D_GGX(float g, float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (PI * tmp * tmp);\n}\n\nvoid main()\n{\n    #ifdef RENDER_TEXCOORD\n        gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n        return;\n    #endif\n\n    vec4 finalColor = vec4(color, alpha);\n\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n    float g = glossiness;\n\n    #ifdef DIFFUSEMAP_ENABLED\n        vec4 tex = texture2D(diffuseMap, v_Texcoord);\n        #ifdef SRGB_DECODE\n            tex.rgb = pow(tex.rgb, vec3(2.2));\n        #endif\n        finalColor.rgb *= tex.rgb;\n        #ifdef DIFFUSEMAP_ALPHA_ALPHA\n            finalColor.a *= tex.a;\n        #endif\n        #ifdef DIFFUSEMAP_ALPHA_GLOSS\n            g *= tex.a;\n        #endif\n    #endif\n\n    vec3 N = v_Normal;\n    #ifdef NORMALMAP_ENABLED\n        N = texture2D(normalMap, v_Texcoord).xyz * 2.0 - 1.0;\n        mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n        N = normalize(tbn * N);\n    #endif\n\n    #ifdef RENDER_NORMAL\n        gl_FragColor = vec4(N, 1.0);\n        return;\n    #endif\n\n    #ifdef RENDER_GLOSSINESS\n        gl_FragColor = vec4(vec3(g), 1.0);\n        return;\n    #endif\n\n    float ndv = dot(N, V);\n\n    // Diffuse part of all lights\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    // Specular part of all lights\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    \n    #ifdef AMBIENT_LIGHT_NUMBER\n        for(int i = 0; i < AMBIENT_LIGHT_NUMBER; i++)\n        {\n            // Hemisphere ambient lighting from cryengine\n            diffuseTerm += ambientLightColor[i] * (clamp(N.y * 0.7, 0.0, 1.0) + 0.3);\n            // diffuseTerm += ambientLightColor[i];\n        }\n    #endif\n    #ifdef POINT_LIGHT_NUMBER\n        #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[POINT_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfPointLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < POINT_LIGHT_NUMBER; i++)\n        {\n\n            vec3 lightPosition = pointLightPosition[i];\n            vec3 lc = pointLightColor[i];\n            float range = pointLightRange[i];\n\n            vec3 L = lightPosition - v_WorldPosition;\n\n            // Calculate point light attenuation\n            float dist = length(L);\n            float attenuation = lightAttenuation(dist, range); \n            L /= dist;\n            vec3 H = normalize(L + V);\n            float ndl = clamp(dot(N, L), 0.0, 1.0);\n            float ndh = clamp(dot(N, H), 0.0, 1.0);\n            float ldn = clamp(dot(L, N), 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n                if(shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lc * ndl * attenuation * shadowContrib;\n            diffuseTerm += li;\n            specularTerm += li * F_Schlick(ldn) * D_Phong(g, ndh);\n        }\n    #endif\n\n    #ifdef DIRECTIONAL_LIGHT_NUMBER\n        #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[DIRECTIONAL_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfDirectionalLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < DIRECTIONAL_LIGHT_NUMBER; i++)\n        {\n\n            vec3 L = -normalize(directionalLightDirection[i]);\n            vec3 lc = directionalLightColor[i];\n\n            vec3 H = normalize(L + V);\n            float ndl = clamp(dot(N, L), 0.0, 1.0);\n            float ndh = clamp(dot(N, H), 0.0, 1.0);\n            float ldn = clamp(dot(L, N), 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n                if(shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lc * ndl * shadowContrib;\n\n            diffuseTerm += li;\n            specularTerm += li * F_Schlick(ldn) * D_Phong(g, ndh);\n        }\n    #endif\n\n    #ifdef SPOT_LIGHT_NUMBER\n        #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n            float shadowContribs[SPOT_LIGHT_NUMBER];\n            if(shadowEnabled)\n            {\n                computeShadowOfSpotLights(v_WorldPosition, shadowContribs);\n            }\n        #endif\n        for(int i = 0; i < SPOT_LIGHT_NUMBER; i++)\n        {\n            vec3 lightPosition = spotLightPosition[i];\n            vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n            vec3 lc = spotLightColor[i];\n            float range = spotLightRange[i];\n            float a = spotLightUmbraAngleCosine[i];\n            float b = spotLightPenumbraAngleCosine[i];\n            float falloffFactor = spotLightFalloffFactor[i];\n\n            vec3 L = lightPosition - v_WorldPosition;\n            // Calculate attenuation\n            float dist = length(L);\n            float attenuation = lightAttenuation(dist, range); \n\n            // Normalize light direction\n            L /= dist;\n            // Calculate spot light fall off\n            float c = dot(spotLightDirection, L);\n\n            float falloff;\n            // Fomular from real-time-rendering\n            falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n            falloff = pow(falloff, falloffFactor);\n\n            vec3 H = normalize(L + V);\n            float ndl = clamp(dot(N, L), 0.0, 1.0);\n            float ndh = clamp(dot(N, H), 0.0, 1.0);\n            float ldn = clamp(dot(L, N), 0.0, 1.0);\n\n            float shadowContrib = 1.0;\n            #if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n                if (shadowEnabled)\n                {\n                    shadowContrib = shadowContribs[i];\n                }\n            #endif\n\n            vec3 li = lc * attenuation * (1.0-falloff) * shadowContrib * ndl;\n\n            diffuseTerm += li;\n            specularTerm += li * F_Schlick(ldn) * D_Phong(g, ndh);\n        }\n    #endif\n\n    finalColor.rgb *= diffuseTerm;\n    finalColor.rgb += specularTerm;\n    finalColor.rgb += emission;\n\n    #ifdef ENVIRONMENTMAP_ENABLED\n        vec3 envTex = textureCube(environmentMap, reflect(-V, N)).xyz;\n        finalColor.rgb = finalColor.rgb + envTex * g;\n    #endif\n\n    if(lineWidth > 0.)\n    {\n        finalColor.rgb = finalColor.rgb * mix(lineColor, vec3(1.0), edgeFactor(lineWidth));\n    }\n\n    #ifdef GAMMA_ENCODE\n        finalColor.rgb = pow(finalColor.rgb, vec3(1 / 2.2));\n    #endif\n    gl_FragColor = finalColor;\n}\n\n@end"}),e("qtek/shader/source/wireframe.essl",[],function(){return"@export buildin.wireframe.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec3 v_Barycentric;\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n    #ifdef SKINNING\n\n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n\n    v_Barycentric = barycentric;\n}\n\n@end\n\n\n@export buildin.wireframe.fragment\n\nuniform vec3 color : [0.0, 0.0, 0.0];\n\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\n\nvarying vec3 v_Barycentric;\n\n#extension GL_OES_standard_derivatives : enable\n\n@import buildin.util.edge_factor\n\nvoid main()\n{\n\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = ( 1.0-edgeFactor(lineWidth) ) * alpha;\n}\n\n@end"}),e("qtek/shader/source/skybox.essl",[],function(){return"@export buildin.skybox.vertex\n\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end\n\n@export buildin.skybox.fragment\n\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\n\nvarying vec3 v_WorldPosition;\n\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n\n    vec3 tex = textureCube(environmentMap, viewDirection).xyz;\n\n    #ifdef SRGB_DECODE\n        tex.rgb = pow(tex.rgb, vec3(2.2));\n    #endif\n    \n    gl_FragColor = vec4(tex, 1.0);\n}\n@end"}),e("qtek/shader/source/util.essl",[],function(){return"// Use light attenuation formula in\n// http://blog.slindev.com/2011/01/10/natural-light-attenuation/\n@export buildin.util.calculate_attenuation\n\nuniform float attenuationFactor : 5.0;\n\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    if( range > 0.0)\n    {\n        attenuation = dist*dist/(range*range);\n        float att_s = attenuationFactor;\n        attenuation = 1.0/(attenuation*att_s+1.0);\n        att_s = 1.0/(att_s+1.0);\n        attenuation = attenuation - att_s;\n        attenuation /= 1.0 - att_s;\n    }\n    return attenuation;\n}\n\n@end\n\n//http://codeflow.org/entries/2012/aug/02/easy-wireframe-display-with-barycentric-coordinates/\n@export buildin.util.edge_factor\n\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n\n@end\n\n// Pack depth\n// Float value can only be [0.0 - 1.0) ?\n@export buildin.util.encode_float\nvec4 encodeFloat( const in float depth )\n{\n\n    const vec4 bitShifts = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\n    const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n    vec4 res = fract( depth * bitShifts );\n    res -= res.xxyz * bit_mask;\n\n    return res;\n}\n@end\n\n@export buildin.util.decode_float\nfloat decodeFloat(const in vec4 colour)\n{\n    const vec4 bitShifts = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n    return dot(colour, bitShifts);\n}\n@end\n\n// http://graphicrants.blogspot.com/2009/04/rgbm-color-encoding.html\n@export buildin.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n}\n@end\n\n@export buildin.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    vec4 rgbm;\n    color *= 1.0 / range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6 ) ), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n\n\n@export buildin.chunk.skin_matrix\n\n// Weighted Sum Skinning Matrix\nmat4 skinMatrixWS;\nif (joint.x >= 0.0)\n{\n    skinMatrixWS = skinMatrix[int(joint.x)] * weight.x;\n}\nif (joint.y >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.y)] * weight.y;\n}\nif (joint.z >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.z)] * weight.z;\n}\nif (joint.w >= 0.0)\n{\n    skinMatrixWS += skinMatrix[int(joint.w)] * (1.0-weight.x-weight.y-weight.z);\n}\n@end\n"}),e("qtek/shader/source/prez.essl",[],function(){return"// Shader for prez pass\n@export buildin.prez.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvoid main()\n{\n\n    vec3 skinnedPosition = position;\n\n    #ifdef SKINNING\n        \n        @import buildin.chunk.skin_matrix\n        \n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n    \n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n\n@end\n\n\n@export buildin.prez.fragment\n\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n\n@end"}),e("qtek/shader/source/shadowmap.essl",[],function(){return"\n@export buildin.sm.depth.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\n\n#ifdef SHADOW_TRANSPARENT \nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nvoid main(){\n    \n    vec3 skinnedPosition = position;\n    \n    #ifdef SKINNING\n\n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n\n    #ifdef SHADOW_TRANSPARENT\n        v_Texcoord = texcoord;\n    #endif\n}\n@end\n\n@export buildin.sm.depth.fragment\n\nvarying vec4 v_ViewPosition;\n\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\n\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\n@import buildin.util.encode_float\n\nvoid main(){\n    // Whats the difference between gl_FragCoord.z and this v_ViewPosition\n    // gl_FragCoord consider the polygon offset ?\n    float depth = v_ViewPosition.z / v_ViewPosition.w;\n    // float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n    #ifdef USE_VSM\n        depth = depth * 0.5 + 0.5;\n        float moment1 = depth;\n        float moment2 = depth * depth;\n\n        // Adjusting moments using partial derivative\n        float dx = dFdx(depth);\n        float dy = dFdy(depth);\n        moment2 += 0.25*(dx*dx+dy*dy);\n\n        gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n    #else\n        // Add slope scaled bias using partial derivative\n        float dx = dFdx(depth);\n        float dy = dFdy(depth);\n        depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n\n        #ifdef SHADOW_TRANSPARENT\n            if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n                // Hi-Z\n                gl_FragColor = encodeFloat(0.9999);\n                return;\n            }\n        #endif\n\n        gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n    #endif\n}\n@end\n\n@export buildin.sm.debug_depth\n\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n\n@import buildin.util.decode_float\n\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n    #ifdef USE_VSM\n        gl_FragColor = vec4(tex.rgb, 1.0);\n    #else\n        float depth = decodeFloat(tex);\n        gl_FragColor = vec4(depth, depth, depth, 1.0);\n    #endif\n}\n\n@end\n\n\n@export buildin.sm.distance.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\n\nattribute vec3 position : POSITION;\n\n#ifdef SKINNING\nattribute vec3 boneWeight;\nattribute vec4 boneIndex;\n\nuniform mat4 skinMatrix[JOINT_NUMBER] : SKIN_MATRIX;\n#endif\n\nvarying vec3 v_WorldPosition;\n\nvoid main(){\n\n    vec3 skinnedPosition = position;\n    #ifdef SKINNING\n        @import buildin.chunk.skin_matrix\n\n        skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #endif\n\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n\n@end\n\n@export buildin.sm.distance.fragment\n\nuniform vec3 lightPosition;\nuniform float range : 100;\n\nvarying vec3 v_WorldPosition;\n\n@import buildin.util.encode_float\n\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n    #ifdef USE_VSM\n        gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n    #else\n        dist = dist / range;\n        gl_FragColor = encodeFloat(dist);\n    #endif\n}\n@end\n\n@export buildin.plugin.compute_shadow_map\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER) || defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\n#ifdef SPOT_LIGHT_SHADOWMAP_NUMBER\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_NUMBER];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_NUMBER];\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[SHADOW_CASCADE];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER];\n#endif\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_NUMBER];\nuniform float pointLightRanges[POINT_LIGHT_SHADOWMAP_NUMBER];\n#endif\n\nuniform bool shadowEnabled : true;\n\n@import buildin.util.decode_float\n\n#if defined(DIRECTIONAL_LIGHT_NUMBER) || defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n    return decodeFloat(tex) * 2.0 - 1.0< z ? 0.0 : 1.0;\n}\n\nfloat pcf(sampler2D map, vec2 uv, float z){\n\n    float shadowContrib = tapShadowMap(map, uv, z);\n    float offset = 1.0 / 2048.0;\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset, -offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset, -offset), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset), z);\n\n    return shadowContrib / 9.0;\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n    // http://fabiensanglard.net/shadowmappingVSM/\n    variance = max(variance, 0.0000001);\n    // Compute probabilistic upper bound. \n    float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n    // Now reduce light-bleeding by removing the [0, x] tail and linearly rescaling (x, 1]\n    // TODO : bleedBias parameter ?\n    pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position){\n    \n    vec4 posInLightSpace = lightVPM * vec4(v_WorldPosition, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n    // In frustum\n    if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n        // To texture uv\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv, z);\n        #endif\n    }\n    return 1.0;\n}\n\n#endif\n\n#ifdef POINT_LIGHT_SHADOWMAP_NUMBER\n\nfloat computeShadowOfCube(samplerCube map, vec3 direction, float range){\n    vec4 shadowTex = textureCube(map, direction);\n    float dist = length(direction);\n\n    #ifdef USE_VSM\n        vec2 moments = shadowTex.xy;\n        float variance = moments.y - moments.x * moments.x;\n        float mD = moments.x - dist;\n        float p = variance / (variance + mD * mD);\n        if(moments.x + 0.001 < dist){\n            return clamp(p, 0.0, 1.0);\n        }else{\n            return 1.0;\n        }\n    #else\n        if((decodeFloat(shadowTex) + 0.0002) * range < dist){\n            return 0.0;\n        }else{\n            return 1.0;\n        }\n    #endif\n}\n#endif\n\n#if defined(SPOT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_NUMBER] ){\n    for(int i = 0; i < SPOT_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowContrib = computeShadowContrib(spotLightShadowMaps[i], spotLightMatrices[i], position);\n        shadowContribs[i] = shadowContrib;\n    }\n    // set default fallof of rest lights\n    for(int i = SPOT_LIGHT_SHADOWMAP_NUMBER; i < SPOT_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#endif\n\n\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER)\n\n#ifdef SHADOW_CASCADE\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_NUMBER]){\n    // http://www.opengl.org/wiki/Compute_eye_space_from_window_space\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n\n    for (int i = 0; i < SHADOW_CASCADE; i++) {\n        if (\n            depth >= shadowCascadeClipsNear[i] &&\n            depth <= shadowCascadeClipsFar[i]\n        ) {\n            float shadowContrib = computeShadowContrib(directionalLightShadowMaps[i], directionalLightMatrices[i], position);\n            // TODO Will get a sampler needs to be be uniform error in native gl\n            shadowContribs[0] = shadowContrib;\n        }\n    }\n    // set default fallof of rest lights\n    for(int i = DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#else\n\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_NUMBER]){\n    for(int i = 0; i < DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i++){\n        float shadowContrib = computeShadowContrib(directionalLightShadowMaps[i], directionalLightMatrices[i], position);\n        shadowContribs[i] = shadowContrib;\n    }\n    // set default fallof of rest lights\n    for(int i = DIRECTIONAL_LIGHT_SHADOWMAP_NUMBER; i < DIRECTIONAL_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n#endif\n\n#endif\n\n\n#if defined(POINT_LIGHT_SHADOWMAP_NUMBER)\n\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_NUMBER] ){\n    for(int i = 0; i < POINT_LIGHT_SHADOWMAP_NUMBER; i++){\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 direction = position - lightPosition;\n        shadowContribs[i] = computeShadowOfCube(pointLightShadowMaps[i], direction, pointLightRanges[i]);\n    }\n    for(int i = POINT_LIGHT_SHADOWMAP_NUMBER; i < POINT_LIGHT_NUMBER; i++){\n        shadowContribs[i] = 1.0;\n    }\n}\n\n#endif\n\n#endif\n\n@end"
}),e("qtek/shader/source/compositor/vertex.essl",[],function(){return"\n@export buildin.compositor.vertex\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n\n@end"}),e("qtek/shader/source/compositor/coloradjust.essl",[],function(){return'@export buildin.compositor.coloradjust\n\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\n\n// Values from "Graphics Shaders: Theory and Practice" by Bailey and Cunningham\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n\n    // brightness\n    vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n    // contrast\n    color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    // exposure\n    color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n    // gamma\n    color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n    // saturation\n    float luminance = dot( color, w );\n    color = mix(vec3(luminance), color, saturation);\n    \n    gl_FragColor = vec4(color, tex.a);\n}\n\n@end\n\n// Seperate shader for float texture\n@export buildin.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float brightness : 0.0;\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = tex.rgb + vec3(brightness);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float contrast : 1.0;\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float exposure : 0.0;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb * pow(2.0, exposure);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float gamma : 1.0;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = pow(tex.rgb, vec3(gamma));\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n\n@export buildin.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n\nuniform float saturation : 1.0;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb;\n    float luminance = dot(color, w);\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end'}),e("qtek/shader/source/compositor/blur.essl",[],function(){return"@export buildin.compositor.gaussian_blur_h\n\nuniform sampler2D texture; // the texture with the scene you want to blur\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 2.0; \nuniform float textureWidth : 512.0;\n\nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n   float blurOffset = blurSize / textureWidth;\n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 4.0*blurOffset, 0.0), v_Texcoord.y)) * 0.05;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 3.0*blurOffset, 0.0), v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - 2.0*blurOffset, 0.0), v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(max(v_Texcoord.x - blurOffset, 0.0), v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.18;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + blurOffset, 1.0), v_Texcoord.y)) * 0.15;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 2.0*blurOffset, 1.0), v_Texcoord.y)) * 0.12;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 3.0*blurOffset, 1.0), v_Texcoord.y)) * 0.09;\n   sum += texture2D(texture, vec2(min(v_Texcoord.x + 4.0*blurOffset, 1.0), v_Texcoord.y)) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.gaussian_blur_v\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n \nuniform float blurSize : 2.0;\nuniform float textureHeight : 512.0;\n \nvoid main(void)\n{\n   vec4 sum = vec4(0.0);\n   float blurOffset = blurSize / textureHeight;\n   // blur in y (vertical)\n   // take nine samples, with the distance blurSize between them\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 4.0*blurOffset, 0.0))) * 0.05;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 3.0*blurOffset, 0.0))) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - 2.0*blurOffset, 0.0))) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, max(v_Texcoord.y - blurOffset, 0.0))) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, v_Texcoord.y)) * 0.18;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + blurOffset, 1.0))) * 0.15;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 2.0*blurOffset, 1.0))) * 0.12;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 3.0*blurOffset, 1.0))) * 0.09;\n   sum += texture2D(texture, vec2(v_Texcoord.x, min(v_Texcoord.y + 4.0*blurOffset, 1.0))) * 0.05;\n \n   gl_FragColor = sum;\n}\n\n@end\n\n@export buildin.compositor.box_blur\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 3.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n\n   vec4 tex = texture2D(texture, v_Texcoord);\n   vec2 offset = blurSize / textureSize;\n\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, 0.0) );\n   tex += texture2D(texture, v_Texcoord + vec2(-offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(offset.x, -offset.y) );\n   tex += texture2D(texture, v_Texcoord + vec2(0.0, -offset.y) );\n\n   tex /= 9.0;\n\n   gl_FragColor = tex;\n}\n\n@end\n\n// http://www.slideshare.net/DICEStudio/five-rendering-ideas-from-battlefield-3-need-for-speed-the-run\n@export buildin.compositor.hexagonal_blur_mrt_1\n\n// MRT in chrome\n// https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/webgl-draw-buffers.html\n#extension GL_EXT_draw_buffers : require\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color = vec4(0.0);\n   // Top\n   for(int i = 0; i < 10; i++){\n      color += 1.0/10.0 * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragData[0] = color;\n   vec4 color2 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragData[1] = (color + color2) / 2.0;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_mrt_2\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 2.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color1 = vec4(0.0);\n   // Down left\n   for(int i = 0; i < 10; i++){\n      color1 += 1.0/10.0 * texture2D(texture0, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < 10; i++){\n      color2 += 1.0/10.0 * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2) / 2.0;\n}\n\n@end\n\n\n@export buildin.compositor.hexagonal_blur_1\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n\n   vec4 color = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Top\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color += 1.0 / fKernelSize * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n\n@end\n\n@export buildin.compositor.hexagonal_blur_2\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture;\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n   offset.y /= 2.0;\n\n   vec4 color = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Down left\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color += 1.0/fKernelSize * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   gl_FragColor = color;\n}\n@end\n\n@export buildin.compositor.hexagonal_blur_3\n\n#define KERNEL_SIZE 10\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\n\nvarying vec2 v_Texcoord;\n\nuniform float blurSize : 1.0;\n\nuniform vec2 textureSize : [512.0, 512.0];\n\nvoid main(void){\n   vec2 offset = blurSize / textureSize;\n   offset.y /= 2.0;\n\n   vec4 color1 = vec4(0.0);\n   float fKernelSize = float(KERNEL_SIZE);\n   // Down left\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color1 += 1.0/fKernelSize * texture2D(texture1, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );\n   }\n   vec4 color2 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color2 += 1.0/fKernelSize * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   vec4 color3 = vec4(0.0);\n   // Down right\n   for(int i = 0; i < KERNEL_SIZE; i++){\n      color3 += 1.0/fKernelSize * texture2D(texture2, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );\n   }\n\n   gl_FragColor = (color1 + color2 + color3) / 3.0;\n}\n\n@end"}),e("qtek/shader/source/compositor/lum.essl",[],function(){return"\n@export buildin.compositor.lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n\n@end"}),e("qtek/shader/source/compositor/lut.essl",[],function(){return"\n// https://github.com/BradLarson/GPUImage?source=c\n@export buildin.compositor.lut\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\nuniform sampler2D lookup;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    float blueColor = tex.b * 63.0;\n    \n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    \n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    \n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    \n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    \n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n\n@end"}),e("qtek/shader/source/compositor/output.essl",[],function(){return"@export buildin.compositor.output\n\n#define OUTPUT_ALPHA;\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n\n    gl_FragColor.rgb = tex.rgb;\n\n    #ifdef OUTPUT_ALPHA\n        gl_FragColor.a = tex.a;\n    #else\n        gl_FragColor.a = 1.0;\n    #endif\n\n}\n\n@end"}),e("qtek/shader/source/compositor/hdr.essl",[],function(){return"// HDR Pipeline\n@export buildin.compositor.hdr.bright\n\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\n\nvarying vec2 v_Texcoord;\n\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n\n@import buildin.util.rgbm_decode\n@import buildin.util.rgbm_encode\n\nvoid main()\n{\n    #ifdef TEXTURE_ENABLED\n        #ifdef RGBM_DECODE\n            vec3 tex = RGBMDecode(texture2D(texture, v_Texcoord));\n        #else\n            vec3 tex = texture2D(texture, v_Texcoord).rgb;\n        #endif\n    #else\n        vec3 tex = vec3(0.0);\n    #endif\n\n    float lum = dot(tex, lumWeight);\n    if (lum > threshold)\n    {\n        gl_FragColor.rgb = tex * scale;\n    }\n    else\n    {\n        gl_FragColor.rgb = vec3(0.0);\n    }\n    gl_FragColor.a = 1.0;\n\n    #ifdef RGBM_ENCODE\n        gl_FragColor.rgba = RGBMEncode(gl_FragColor.rgb);\n    #endif\n}\n@end\n\n@export buildin.compositor.hdr.log_lum\n\nvarying vec2 v_Texcoord;\n\nuniform sampler2D texture;\n\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n\n@end\n\n@export buildin.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\n\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\n\nuniform float frameTime : 0.02;\n\nvoid main()\n{\n    float fAdaptedLum = texture2D(adaptedLum, vec2(0.5, 0.5)).r;\n    float fCurrentLum = exp(texture2D(currentLum, vec2(0.5, 0.5)).r);\n\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor.rgb = vec3(fAdaptedLum);\n    gl_FragColor.a = 1.0;\n}\n@end\n\n// Tone mapping with gamma correction\n// http://filmicgames.com/archives/75\n@export buildin.compositor.hdr.tonemapping\n\nuniform sampler2D texture;\nuniform sampler2D bloom;\nuniform sampler2D lensflare;\nuniform sampler2D lum;\n\nuniform float exposure : 1.0;\n\nvarying vec2 v_Texcoord;\n\nconst float A = 0.22;   // Shoulder Strength\nconst float B = 0.30;   // Linear Strength\nconst float C = 0.10;   // Linear Angle\nconst float D = 0.20;   // Toe Strength\nconst float E = 0.01;   // Toe Numerator\nconst float F = 0.30;   // Toe Denominator\nconst vec3 whiteScale = vec3(11.2);\n\nvec3 uncharted2ToneMap(vec3 x)\n{\n    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\n\nvec3 filmicToneMap(vec3 color)\n{\n    vec3 x = max(vec3(0.0), color - 0.004);\n    return (x*(6.2*x+0.5))/(x*(6.2*x+1.7)+0.06);\n}\n\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n\nvoid main()\n{\n    vec3 tex = vec3(0.0);\n    float a = 1.0;\n    #ifdef TEXTURE_ENABLED\n        vec4 res = texture2D(texture, v_Texcoord);\n        a = res.a;\n        tex = res.rgb;\n    #endif\n\n    #ifdef BLOOM_ENABLED\n        tex += texture2D(bloom, v_Texcoord).rgb * 0.25;\n    #endif\n\n    #ifdef LENSFLARE_ENABLED\n        tex += texture2D(lensflare, v_Texcoord).rgb;\n    #endif\n\n    // Adjust exposure\n    // From KlayGE\n    #ifdef LUM_ENABLED\n        float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n        float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n        float exposureBias = adaptedLumDest * exposure;\n    #else\n        float exposureBias = exposure;\n    #endif\n    tex *= exposureBias;\n\n    // Do tone mapping\n    vec3 color = uncharted2ToneMap(tex) / uncharted2ToneMap(whiteScale);\n    color = pow(color, vec3(1.0/2.2));\n    // vec3 color = filmicToneMap(tex);\n\n    #ifdef RGBM_ENCODE\n        gl_FragColor.rgba = RGBMEncode(color);\n    #else\n        gl_FragColor = vec4(color, a);\n    #endif\n}\n\n@end"}),e("qtek/shader/source/compositor/lensflare.essl",[],function(){return"// john-chapman-graphics.blogspot.co.uk/2013/02/pseudo-lens-flare.html\n@export buildin.compositor.lensflare\n\n#define SAMPLE_NUMBER 8\n\nuniform sampler2D texture;\nuniform sampler2D lensColor;\n\nuniform vec2 textureSize : [512, 512];\n\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\n\nvarying vec2 v_Texcoord;\n\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        texture2D(texture, texcoord + direction * distortion.r).r,\n        texture2D(texture, texcoord + direction * distortion.g).g,\n        texture2D(texture, texcoord + direction * distortion.b).b,\n        1.0\n    );\n}\n\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0); // Flip texcoords\n    vec2 textureOffset = 1.0 / textureSize;\n\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n    //Sample ghost\n    vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n\n    result *= texture2D(lensColor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n    //Sample halo\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n\n    gl_FragColor = result;\n}\n@end"}),e("qtek/shader/source/compositor/blend.essl",[],function(){return"@export buildin.compositor.blend\n// Blend at most 4 textures\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n\nvarying vec2 v_Texcoord;\n\nvoid main()\n{\n    vec3 tex = vec3(0.0);\n    #ifdef TEXTURE1_ENABLED\n        tex += texture2D(texture1, v_Texcoord).rgb * weight1;\n    #endif\n    #ifdef TEXTURE2_ENABLED\n        tex += texture2D(texture2, v_Texcoord).rgb * weight2;\n    #endif\n    #ifdef TEXTURE3_ENABLED\n        tex += texture2D(texture3, v_Texcoord).rgb * weight3;\n    #endif\n    #ifdef TEXTURE4_ENABLED\n        tex += texture2D(texture4, v_Texcoord).rgb * weight4;\n    #endif\n\n    gl_FragColor = vec4(tex, 1.0);\n}\n@end"}),e("qtek/shader/source/compositor/fxaa.essl",[],function(){return"// https://github.com/mitsuhiko/webgl-meincraft/blob/master/assets/shaders/fxaa.glsl\n@export buildin.compositor.fxaa\n\nuniform sampler2D texture;\nuniform vec2 viewportSize : [512, 512];\n\nvarying vec2 v_Texcoord;\n\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n\nvoid main()\n{\n    vec2 resolution = 1.0 / viewportSize;\n    vec3 rgbNW = texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\n    vec3 rgbNE = texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\n    vec3 rgbSW = texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\n    vec3 rgbSE = texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\n    vec4 rgbaM  = texture2D( texture,  gl_FragCoord.xy  * resolution );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n\n    vec3 rgbA = texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz;\n    rgbA += texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz;\n    rgbA *= 0.5;\n\n    vec3 rgbB = texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz;\n    rgbB += texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n\n    float lumaB = dot( rgbB, luma );\n\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n\n        gl_FragColor = vec4( rgbA, opacity );\n\n    } else {\n\n        gl_FragColor = vec4( rgbB, opacity );\n\n    }\n}\n\n@end"}),e("qtek/shader/library",["require","../Shader","../core/util","./source/basic.essl","./source/lambert.essl","./source/phong.essl","./source/physical.essl","./source/wireframe.essl","./source/skybox.essl","./source/util.essl","./source/prez.essl","./source/shadowmap.essl","./source/compositor/vertex.essl","./source/compositor/coloradjust.essl","./source/compositor/blur.essl","./source/compositor/lum.essl","./source/compositor/lut.essl","./source/compositor/output.essl","./source/compositor/hdr.essl","./source/compositor/lensflare.essl","./source/compositor/blend.essl","./source/compositor/fxaa.essl"],function(a){function b(a,b){var c=[],d={},f={};"string"==typeof b?c=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(b)?(c=b.textures||[],d=b.vertexDefines||{},f=b.fragmentDefines||{}):b instanceof Array&&(c=b);var g=Object.keys(d),h=Object.keys(f);c.sort(),g.sort(),h.sort();var i=[a];i=i.concat(c);for(var j=0;j<g.length;j++)i.push(d[g[j]]);for(var j=0;j<h.length;j++)i.push(f[h[j]]);var k=i.join("_");if(_pool[k])return _pool[k];var l=_library[a];if(!l)return void console.error('Shader "'+a+'" is not in the library');for(var m=new e({vertex:l.vertex,fragment:l.fragment}),j=0;j<c.length;j++)m.enableTexture(c[j]);for(var a in d)m.define("vertex",a,d[a]);for(var a in f)m.define("fragment",a,f[a]);return _pool[k]=m,m}function c(a,b,c){_library[a]={vertex:b,fragment:c}}function d(){_pool={}}{var e=a("../Shader");a("../core/util")}return _library={},_pool={},e["import"](a("./source/basic.essl")),e["import"](a("./source/lambert.essl")),e["import"](a("./source/phong.essl")),e["import"](a("./source/physical.essl")),e["import"](a("./source/wireframe.essl")),e["import"](a("./source/skybox.essl")),e["import"](a("./source/util.essl")),e["import"](a("./source/prez.essl")),e["import"](a("./source/shadowmap.essl")),c("buildin.basic",e.source("buildin.basic.vertex"),e.source("buildin.basic.fragment")),c("buildin.lambert",e.source("buildin.lambert.vertex"),e.source("buildin.lambert.fragment")),c("buildin.phong",e.source("buildin.phong.vertex"),e.source("buildin.phong.fragment")),c("buildin.wireframe",e.source("buildin.wireframe.vertex"),e.source("buildin.wireframe.fragment")),c("buildin.skybox",e.source("buildin.skybox.vertex"),e.source("buildin.skybox.fragment")),c("buildin.prez",e.source("buildin.prez.vertex"),e.source("buildin.prez.fragment")),c("buildin.physical",e.source("buildin.physical.vertex"),e.source("buildin.physical.fragment")),e["import"](a("./source/compositor/vertex.essl")),e["import"](a("./source/compositor/coloradjust.essl")),e["import"](a("./source/compositor/blur.essl")),e["import"](a("./source/compositor/lum.essl")),e["import"](a("./source/compositor/lut.essl")),e["import"](a("./source/compositor/output.essl")),e["import"](a("./source/compositor/hdr.essl")),e["import"](a("./source/compositor/lensflare.essl")),e["import"](a("./source/compositor/blend.essl")),e["import"](a("./source/compositor/fxaa.essl")),{get:b,template:c,clear:d}}),e("qtek/texture/TextureCube",["require","../Texture","../core/glinfo","../core/glenum","../core/util"],function(a){function b(a){return"CANVAS"===a.nodeName||a.complete}var c=a("../Texture"),d=a("../core/glinfo"),e=a("../core/glenum"),f=a("../core/util"),g={px:"TEXTURE_CUBE_MAP_POSITIVE_X",py:"TEXTURE_CUBE_MAP_POSITIVE_Y",pz:"TEXTURE_CUBE_MAP_POSITIVE_Z",nx:"TEXTURE_CUBE_MAP_NEGATIVE_X",ny:"TEXTURE_CUBE_MAP_NEGATIVE_Y",nz:"TEXTURE_CUBE_MAP_NEGATIVE_Z"},h=c.derive(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null}}},{update:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.beforeUpdate(a);var b=this.format,c=this.type;a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_WRAP_S,this.wrapS),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_WRAP_T,this.wrapT),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_MAG_FILTER,this.magFilter),a.texParameteri(a.TEXTURE_CUBE_MAP,a.TEXTURE_MIN_FILTER,this.minFilter);var f=d.getExtension(a,"EXT_texture_filter_anisotropic");if(f&&this.anisotropic>1&&a.texParameterf(a.TEXTURE_CUBE_MAP,f.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===c){var h=d.getExtension(a,"OES_texture_half_float");h||(c=e.FLOAT)}for(var i in this.image){var j=this.image[i];j?a.texImage2D(a[g[i]],0,b,b,c,j):a.texImage2D(a[g[i]],0,b,this.width,this.height,0,b,c,this.pixels[i])}!this.NPOT&&this.useMipmap&&a.generateMipmap(a.TEXTURE_CUBE_MAP),a.bindTexture(a.TEXTURE_CUBE_MAP,null)},generateMipmap:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),a.generateMipmap(a.TEXTURE_CUBE_MAP)},bind:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,this.getWebGLTexture(a))},unbind:function(a){a.bindTexture(a.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){function a(a){return a&a-1===0}return this.image.px?a(this.image.px.width)&&a(this.image.px.height):a(this.width)&&a(this.height)},isRenderable:function(){return this.image.px?b(this.image.px)&&b(this.image.nx)&&b(this.image.py)&&b(this.image.ny)&&b(this.image.pz)&&b(this.image.nz):this.width&&this.height},load:function(a){var b=0,c=this;return f.each(a,function(a,d){var e=new Image;e.onload=function(){b--,0===b&&(c.dirty(),c.trigger("success",c)),e.onload=null},e.onerror=function(){b--,e.onerror=null},b++,e.src=a,c.image[d]=e}),this}});return h}),e("qtek/Material",["require","./core/Base","./Shader","./core/util","./core/glenum","./Texture","./texture/Texture2D","./texture/TextureCube"],function(a){var b=a("./core/Base"),c=(a("./Shader"),a("./core/util"),a("./core/glenum"),a("./Texture")),d=(a("./texture/Texture2D"),a("./texture/TextureCube"),b.derive({name:"",uniforms:null,shader:null,depthTest:!0,depthMask:!0,transparent:!1,blend:null,_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader)},{bind:function(a,b){for(var d=0,e=b&&b.shader===this.shader,f=0;f<this._enabledUniforms.length;f++){var g=this._enabledUniforms[f],h=this.uniforms[g];if(!e||b.uniforms[g].value!==h.value)if(void 0!==h.value){if(!(null===h.value||h.value instanceof Array&&!h.value.length))if(h.value instanceof c){var i=this.shader.setUniform(a,"1i",g,d);if(!i)continue;var j=h.value;a.activeTexture(a.TEXTURE0+d),j.isRenderable()?j.bind(a):j.unbind(a),d++}else if(h.value instanceof Array){if(0===h.value.length)continue;var k=h.value[0];if(k instanceof c){if(!this.shader.hasUniform(g))continue;for(var l=[],m=0;m<h.value.length;m++){var j=h.value[m];a.activeTexture(a.TEXTURE0+d),j.isRenderable()?j.bind(a):j.unbind(a),l.push(d++)}this.shader.setUniform(a,"1iv",g,l)}else this.shader.setUniform(a,h.type,g,h.value)}else this.shader.setUniform(a,h.type,g,h.value)}else console.warn('Uniform value "'+g+'" is undefined')}},setUniform:function(a,b){var c=this.uniforms[a];c&&(c.value=b)},setUniforms:function(a){for(var b in a){var c=a[b];this.setUniform(b,c)}},enableUniform:function(a){this.uniforms[a]&&!this.isUniformEnabled(a)&&this._enabledUniforms.push(a)},disableUniform:function(a){var b=this._enabledUniforms.indexOf(a);b>=0&&this._enabledUniforms.splice(b,1)},isUniformEnabled:function(a){return this._enabledUniforms.indexOf(a)>=0},set:function(a,b){if("object"==typeof a)for(var c in a){var d=a[c];this.set(c,d)}else{var e=this.uniforms[a];e&&(e.value=b)}},get:function(a){var b=this.uniforms[a];return b?b.value:void 0},attachShader:function(a,b){var c=this.uniforms;if(this.uniforms=a.createUniforms(),this.shader=a,this._enabledUniforms=Object.keys(this.uniforms),b)for(var d in c)this.uniforms[d]&&(this.uniforms[d].value=c[d].value)},detachShader:function(){this.shader=null,this.uniforms={}},dispose:function(){}}));return d}),e("qtek/Renderer",["require","./core/Base","./core/util","./Light","./Mesh","./Texture","./core/glinfo","./core/glenum","./math/BoundingBox","./math/Matrix4","./Shader","./shader/library","./Material","./math/Vector3","./math/Vector2","glmatrix"],function(a){var b=a("./core/Base"),c=(a("./core/util"),a("./Light"),a("./Mesh"),a("./Texture")),d=a("./core/glinfo"),e=a("./core/glenum"),g=a("./math/BoundingBox"),h=a("./math/Matrix4"),i=(a("./Shader"),a("./shader/library")),j=a("./Material"),k=(a("./math/Vector3"),a("./math/Vector2")),l=a("glmatrix"),m=l.mat4,n=l.vec3,o=(l.vec4,0),p=i.get("buildin.prez"),q=new j({shader:p}),r={},s=b.derive(function(){return{canvas:null,width:100,height:100,devicePixelRatio:window.devicePixelRatio||1,color:[0,0,0,0],clear:17664,alhpa:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},_viewportSettings:[],_clearSettings:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height);try{var a={alhpa:this.alhpa,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=this.canvas.getContext("webgl",a)||this.canvas.getContext("experimental-webgl",a),!this.gl)throw new Error;this.gl.__GLID__=o++,this.width=this.canvas.width,this.height=this.canvas.height,this.resize(this.width,this.height),d.initialize(this.gl)}catch(b){if(this.throwError)throw"Error creating WebGL Context";this.trigger("error","Error creating WebGL Context")}},{resize:function(a,b){var c=this.canvas;"undefined"!=typeof a?(c.style.width=a+"px",c.style.height=b+"px",c.width=a*this.devicePixelRatio,c.height=b*this.devicePixelRatio,this.width=a,this.height=b):(this.width=c.width/this.devicePixelRatio,this.height=c.height/this.devicePixelRatio),this.setViewport(0,0,c.width,c.height)},setDevicePixelRatio:function(a){this.devicePixelRatio=a,this.resize(this.width,this.height)},setViewport:function(a,b,c,d){if("object"==typeof a){var e=a;a=e.x,b=e.y,c=e.width,d=e.height}this.gl.viewport(a,b,c,d),this.viewport={x:a,y:b,width:c,height:d}},saveViewport:function(){this._viewportSettings.push(this.viewport)},restoreViewport:function(){this._viewportSettings.length>0&&this.setViewport(this._viewportSettings.pop())},saveClear:function(){this._clearSettings.push(this.clear)},restoreClear:function(){this._clearSettings.length>0&&(this.clear=this._clearSettings.pop())},render:function(a,b,c,d){var e=this.gl;
this._sceneRendering=a;var g=this.color;this.clear&&(e.clearColor(g[0],g[1],g[2],g[3]),e.clear(this.clear)),c||a.update(!1),b.scene||b.update(!0);var h=a.opaqueQueue,i=a.transparentQueue,j=a.material;if(a.trigger("beforerender",this,a,b),i.length>0)for(var k=m.create(),l=n.create(),o=0;o<i.length;o++){var p=i[o];m.multiply(k,b.viewMatrix._array,p.worldTransform._array),n.transformMat4(l,p.position._array,k),p.__depth=l[2]}h.sort(s.opaqueSortFunc),i.sort(s.transparentSortFunc),a.trigger("beforerender:opaque",this,h),b.sceneBoundingBoxLastFrame.min.set(1/0,1/0,1/0),b.sceneBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),e.disable(e.BLEND),e.enable(e.DEPTH_TEST);var q=this.renderQueue(h,b,j,d);a.trigger("afterrender:opaque",this,h,q),a.trigger("beforerender:transparent",this,i),e.enable(e.BLEND);var r=this.renderQueue(i,b,j);a.trigger("afterrender:transparent",this,i,r);var t={};for(f in q)t[f]=q[f]+r[f];return a.trigger("afterrender",this,a,b,t),t},renderQueue:function(a,b,c,d){var e={faceNumber:0,vertexNumber:0,drawCallNumber:0,meshNumber:0};m.copy(t.VIEW,b.viewMatrix._array),m.copy(t.PROJECTION,b.projectionMatrix._array),m.multiply(t.VIEWPROJECTION,b.projectionMatrix._array,t.VIEW),m.copy(t.VIEWINVERSE,b.worldTransform._array),m.invert(t.PROJECTIONINVERSE,t.PROJECTION),m.invert(t.VIEWPROJECTIONINVERSE,t.VIEWPROJECTION);var f,g,h,i,j,k,l,n,o=this.gl,s=this._sceneRendering;if(d){n=[],p.bind(o),o.colorMask(!1,!1,!1,!1),o.depthMask(!0);for(var u=0;u<a.length;u++){var v=a[u],w=v.worldTransform._array,x=v.geometry;if(m.multiply(t.WORLDVIEW,t.VIEW,w),m.multiply(t.WORLDVIEWPROJECTION,t.VIEWPROJECTION,w),(!x.boundingBox||this._frustumCulling(v,b))&&!v.skeleton){v.cullFace!==k&&(k=v.cullFace,o.cullFace(k)),v.frontFace!==l&&(l=v.frontFace,o.frontFace(l)),v.culling!==j&&(j=v.culling,j?o.enable(o.CULL_FACE):o.disable(o.CULL_FACE));var y=p.matrixSemantics.WORLDVIEWPROJECTION;p.setUniform(o,y.type,y.symbol,t.WORLDVIEWPROJECTION),v.render(o,q),n.push(v)}}o.depthFunc(o.LEQUAL),o.colorMask(!0,!0,!0,!0),o.depthMask(!1)}else n=a;for(var u=0;u<n.length;u++){var v=n[u],z=c||v.material,A=z.shader,x=v.geometry,w=v.worldTransform._array;if(m.copy(t.WORLD,w),m.multiply(t.WORLDVIEW,t.VIEW,w),m.multiply(t.WORLDVIEWPROJECTION,t.VIEWPROJECTION,w),(A.matrixSemantics.WORLDINVERSE||A.matrixSemantics.WORLDINVERSETRANSPOSE)&&m.invert(t.WORLDINVERSE,w),(A.matrixSemantics.WORLDVIEWINVERSE||A.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&m.invert(t.WORLDVIEWINVERSE,t.WORLDVIEW),(A.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||A.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&m.invert(t.WORLDVIEWPROJECTIONINVERSE,t.WORLDVIEWPROJECTION),!x.boundingBox||d||this._frustumCulling(v,b)){if(g!==A){s&&s.isShaderLightNumberChanged(A)&&s.setShaderLightNumber(A);var B=A.bind(o);if(B){if(r[A.__GUID__])continue;if(r[A.__GUID__]=!0,this.throwError)throw new Error(B);this.trigger("error",B)}s&&s.setLightUniforms(A,o),g=A}f!==z&&(d||(z.depthTest!==h&&(z.depthTest?o.enable(o.DEPTH_TEST):o.disable(o.DEPTH_TEST),h=z.depthTest),z.depthMask!==i&&(o.depthMask(z.depthMask),i=z.depthMask)),z.bind(o,f),f=z,z.transparent&&(z.blend?z.blend(o):(o.blendEquationSeparate(o.FUNC_ADD,o.FUNC_ADD),o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA))));for(var C=A.matrixSemanticKeys,D=0;D<C.length;D++){var E=C[D],y=A.matrixSemantics[E],F=t[E];if(y.isTranspose){var G=t[y.semanticNoTranspose];m.transpose(F,G)}A.setUniform(o,y.type,y.symbol,F)}v.cullFace!==k&&(k=v.cullFace,o.cullFace(k)),v.frontFace!==l&&(l=v.frontFace,o.frontFace(l)),v.culling!==j&&(j=v.culling,j?o.enable(o.CULL_FACE):o.disable(o.CULL_FACE));var H=v.render(o,c);H&&(e.faceNumber+=H.faceNumber,e.vertexNumber+=H.vertexNumber,e.drawCallNumber+=H.drawCallNumber,e.meshNumber++)}}return e},_frustumCulling:function(){var a=new g,b=new h;return function(c,d){var e=c.geometry.boundingBox;if(b._array=t.WORLDVIEW,a.copy(e),a.applyTransform(b),d.sceneBoundingBoxLastFrame.union(a),c.frustumCulling){if(!a.intersectBoundingBox(d.frustum.boundingBox))return!1;b._array=t.PROJECTION,a.max._array[2]>0&&a.min._array[2]<0&&(a.max._array[2]=-1e-20),a.applyProjection(b);var f=a.min._array,g=a.max._array;if(g[0]<-1||f[0]>1||g[1]<-1||f[1]>1||g[2]<-1||f[2]>1)return!1}return!0}}(),disposeScene:function(a){this.disposeNode(a),a.dispose()},disposeNode:function(a){var b={},d=this.gl;a.traverse(function(a){a.geometry&&a.geometry.dispose(d),a.material&&(b[a.material.__GUID__]=a.material),a.dispose&&a.dispose(d)});for(var e in b){var f=b[e];f.shader.dispose(d);for(var g in f.uniforms){var h=f.uniforms[g].value;if(h)if(h instanceof c)h.dispose(d);else if(h instanceof Array)for(var i=0;i<h.length;i++)h[i]instanceof c&&h[i].dispose(d)}}a._children=[]},disposeShader:function(a){a.dispose(this.gl)},disposeGeometry:function(a){a.dispose(this.gl)},disposeTexture:function(a){a.dispose(this.gl)},disposeFrameBuffer:function(a){a.dispose(this.gl)},dispose:function(){d.dispose(this.gl)},screenToNdc:function(a,b,c){return c||(c=new k),b=this.height-b,c._array[0]=(a-this.viewport.x)/this.viewport.width,c._array[0]=2*c._array[0]-1,c._array[1]=(b-this.viewport.y)/this.viewport.height,c._array[1]=2*c._array[1]-1,c}});s.opaqueSortFunc=function(a,b){return a.material.shader===b.material.shader?a.material===b.material?a.geometry.__GUID__-b.geometry.__GUID__:a.material.__GUID__-b.material.__GUID__:a.material.shader.__GUID__-b.material.shader.__GUID__},s.transparentSortFunc=function(a,b){return a.__depth===b.__depth?a.material.shader===b.material.shader?a.material===b.material?a.geometry.__GUID__-b.geometry.__GUID__:a.material.__GUID__-b.material.__GUID__:a.material.shader.__GUID__-b.material.shader.__GUID__:a.__depth-b.__depth};var t={WORLD:m.create(),VIEW:m.create(),PROJECTION:m.create(),WORLDVIEW:m.create(),VIEWPROJECTION:m.create(),WORLDVIEWPROJECTION:m.create(),WORLDINVERSE:m.create(),VIEWINVERSE:m.create(),PROJECTIONINVERSE:m.create(),WORLDVIEWINVERSE:m.create(),VIEWPROJECTIONINVERSE:m.create(),WORLDVIEWPROJECTIONINVERSE:m.create(),WORLDTRANSPOSE:m.create(),VIEWTRANSPOSE:m.create(),PROJECTIONTRANSPOSE:m.create(),WORLDVIEWTRANSPOSE:m.create(),VIEWPROJECTIONTRANSPOSE:m.create(),WORLDVIEWPROJECTIONTRANSPOSE:m.create(),WORLDINVERSETRANSPOSE:m.create(),VIEWINVERSETRANSPOSE:m.create(),PROJECTIONINVERSETRANSPOSE:m.create(),WORLDVIEWINVERSETRANSPOSE:m.create(),VIEWPROJECTIONINVERSETRANSPOSE:m.create(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:m.create()};return s.COLOR_BUFFER_BIT=e.COLOR_BUFFER_BIT,s.DEPTH_BUFFER_BIT=e.DEPTH_BUFFER_BIT,s.STENCIL_BUFFER_BIT=e.STENCIL_BUFFER_BIT,s}),e("qtek/math/Plane",["require","./Vector3","glmatrix"],function(a){var b=a("./Vector3"),c=a("glmatrix"),d=c.vec3,e=c.mat4,f=c.vec4,g=function(a,c){this.normal=a||new b(0,1,0),this.distance=c||0};return g.prototype={constructor:g,distanceToPoint:function(a){return d.dot(a._array,this.normal._array)-this.distance},projectPoint:function(a,c){c||(c=new b);var e=this.distanceToPoint(a);return d.scaleAndAdd(c._array,a._array,this.normal._array,-e),c._dirty=!0,c},normalize:function(){var a=1/d.len(this.normal._array);d.scale(this.normal._array,a),this.distance*=a},intersectFrustum:function(a){for(var b=a.vertices,c=this.normal._array,e=d.dot(b[0]._array,c)>this.distance,f=1;8>f;f++)if(d.dot(b[f]._array,c)>this.distance!=e)return!0},intersectLine:function(){var a=d.create();return function(c,e,f){var g=this.distanceToPoint(c),h=this.distanceToPoint(e);if(g>0&&h>0||0>g&&0>h)return null;var i=this.normal._array,j=this.distance,k=c._array;d.sub(a,e._array,c._array),d.normalize(a,a);var l=d.dot(i,a);if(0==l)return null;f||(f=new b);var m=(d.dot(i,k)-j)/l;return d.scaleAndAdd(f._array,k,a,-m),f._dirty=!0,f}}(),applyTransform:function(){var a=e.create(),b=f.create(),c=f.create();return c[3]=1,function(g){g=g._array,d.scale(c,this.normal._array,this.distance),f.transformMat4(c,c,g),this.distance=d.dot(c,this.normal._array),e.invert(a,g),e.transpose(a,a),b[3]=0,d.copy(b,this.normal._array),f.transformMat4(b,b,a),d.copy(this.normal._array,b)}}(),copy:function(a){d.copy(this.normal._array,a.normal._array),this.normal._dirty=!0,this.distance=a.distance},clone:function(){var a=new g;return a.copy(this),a}},g}),e("qtek/math/Frustum",["require","./Vector3","./BoundingBox","./Plane","glmatrix"],function(a){var b=(a("./Vector3"),a("./BoundingBox")),c=a("./Plane"),d=a("glmatrix"),e=d.vec3,f=function(){this.planes=[];for(var a=0;6>a;a++)this.planes.push(new c);this.boundingBox=new b,this.vertices=[];for(var a=0;8>a;a++)this.vertices[a]=e.fromValues(0,0,0)};return f.prototype={setFromProjection:function(a){var b=this.planes,c=a._array,d=c[0],f=c[1],g=c[2],h=c[3],i=c[4],j=c[5],k=c[6],l=c[7],m=c[8],n=c[9],o=c[10],p=c[11],q=c[12],r=c[13],s=c[14],t=c[15];if(e.set(b[0].normal._array,h-d,l-i,p-m),b[0].distance=-(t-q),b[0].normalize(),e.set(b[1].normal._array,h+d,l+i,p+m),b[1].distance=-(t+q),b[1].normalize(),e.set(b[2].normal._array,h+f,l+j,p+n),b[2].distance=-(t+r),b[2].normalize(),e.set(b[3].normal._array,h-f,l-j,p-n),b[3].distance=-(t-r),b[3].normalize(),e.set(b[4].normal._array,h-g,l-k,p-o),b[4].distance=-(t-s),b[4].normalize(),e.set(b[5].normal._array,h+g,l+k,p+o),b[5].distance=-(t+s),b[5].normalize(),0===t){var u=j/d,v=-s/(o-1),w=-s/(o+1),x=-w/j,y=-v/j;this.boundingBox.min.set(-x*u,-x,w),this.boundingBox.max.set(x*u,x,v);var z=this.vertices;e.set(z[0],-x*u,-x,w),e.set(z[1],-x*u,x,w),e.set(z[2],x*u,-x,w),e.set(z[3],x*u,x,w),e.set(z[4],-y*u,-y,v),e.set(z[5],-y*u,y,v),e.set(z[6],y*u,-y,v),e.set(z[7],y*u,y,v)}else{var A=(-1-q)/d,B=(1-q)/d,C=(1-r)/j,D=(-1-r)/j,E=(-1-s)/o,F=(1-s)/o;this.boundingBox.min.set(A,D,F),this.boundingBox.max.set(B,C,E);for(var G=0;8>G;G++)e.copy(this.vertices[G],this.boundingBox.vertices[G])}},getTransformedBoundingBox:function(){var a=e.create();return function(b,c){var d=this.vertices,f=c._array,g=b.min._array,h=b.max._array,i=d[0];e.transformMat4(a,i,f),e.copy(g,a),e.copy(h,a);for(var j=1;8>j;j++)i=d[j],e.transformMat4(a,i,f),g[0]=Math.min(a[0],g[0]),g[1]=Math.min(a[1],g[1]),g[2]=Math.min(a[2],g[2]),h[0]=Math.max(a[0],h[0]),h[1]=Math.max(a[1],h[1]),h[2]=Math.max(a[2],h[2]);return b.min._dirty=!0,b.max._dirty=!0,b}}()},f}),e("qtek/math/Ray",["require","../core/Base","./Vector3","glmatrix"],function(a){var b=(a("../core/Base"),a("./Vector3")),c=a("glmatrix"),d=c.vec3,e=1e-5,f=function(a,c){this.origin=a||new b,this.direction=c||new b};return f.prototype={constructor:f,intersectPlane:function(a,c){var e=a.normal._array,f=a.distance,g=this.origin._array,h=this.direction._array,i=d.dot(e,h);if(0==i)return null;c||(c=new b);var j=(d.dot(e,g)-f)/i;return d.scaleAndAdd(c._array,g,h,-j),c._dirty=!0,c},mirrorAgainstPlane:function(a){var b=d.dot(a.normal._array,this.direction._array);d.scaleAndAdd(this.direction._array,this.direction._array,a.normal._array,2*-b),this.direction_dirty=!0},intersectBoundingBox:function(a,c){var e,f,g,h,i,j,k=this.direction._array,l=this.origin._array,m=a.min._array,n=a.max._array,o=1/k[0],p=1/k[1],q=1/k[2];if(o>=0?(e=(m[0]-l[0])*o,f=(n[0]-l[0])*o):(f=(m[0]-l[0])*o,e=(n[0]-l[0])*o),p>=0?(g=(m[1]-l[1])*p,h=(n[1]-l[1])*p):(h=(m[1]-l[1])*p,g=(n[1]-l[1])*p),e>h||g>f)return null;if((g>e||e!==e)&&(e=g),(f>h||f!==f)&&(f=h),q>=0?(i=(m[2]-l[2])*q,j=(n[2]-l[2])*q):(j=(m[2]-l[2])*q,i=(n[2]-l[2])*q),e>j||i>f)return null;if((i>e||e!==e)&&(e=i),(f>j||f!==f)&&(f=j),0>f)return null;var r=e>=0?e:f;return c||(c=new b),d.scaleAndAdd(c._array,l,k,r),c},intersectTriangle:function(){var a=d.create(),c=d.create(),f=d.create(),g=d.create();return function(h,i,j,k,l){var m=this.direction._array,n=this.origin._array;h=h._array,i=i._array,j=j._array,d.sub(a,i,h),d.sub(c,j,h),d.cross(g,c,m);var o=d.dot(a,g);if(k){if(o>-e)return null}else if(o>-e&&e>o)return null;d.sub(f,n,h);var p=d.dot(g,f)/o;if(0>p||p>1)return null;d.cross(g,a,f);var q=d.dot(m,g)/o;if(0>q||q>1||p+q>1)return null;d.cross(g,a,c);var r=-d.dot(f,g)/o;return 0>r?null:(l||(l=new b),d.scaleAndAdd(l._array,n,m,r),l)}}(),applyTransform:function(a){b.add(this.direction,this.direction,this.origin),b.transformMat4(this.origin,this.origin,a),b.transformMat4(this.direction,this.direction,a),b.sub(this.direction,this.direction,this.origin),b.normalize(this.direction,this.direction)},copy:function(a){b.copy(this.origin,a.origin),b.copy(this.direction,a.direction)},clone:function(){var a=new f;return a.copy(this),a}},f}),e("qtek/Camera",["require","./Node","./math/Matrix4","./math/Frustum","./math/BoundingBox","./math/Ray","glmatrix"],function(a){var b=a("./Node"),c=a("./math/Matrix4"),d=a("./math/Frustum"),e=a("./math/BoundingBox"),f=a("./math/Ray"),g=a("glmatrix"),h=g.mat4,i=g.vec3,j=g.vec4,k=b.derive(function(){return{projectionMatrix:new c,invProjectionMatrix:new c,viewMatrix:new c,frustum:new d,sceneBoundingBoxLastFrame:new e}},function(){this.update(!0)},{update:function(a){b.prototype.update.call(this,a),h.invert(this.viewMatrix._array,this.worldTransform._array),this.updateProjectionMatrix(),h.invert(this.invProjectionMatrix._array,this.projectionMatrix._array),this.frustum.setFromProjection(this.projectionMatrix)},updateProjectionMatrix:function(){},castRay:function(){var a=j.create();return function(b,c){var d=void 0!==c?c:new f,e=b._array[0],g=b._array[1];return j.set(a,e,g,-1,1),j.transformMat4(a,a,this.invProjectionMatrix._array),j.transformMat4(a,a,this.worldTransform._array),i.scale(d.origin._array,a,1/a[3]),j.set(a,e,g,1,1),j.transformMat4(a,a,this.invProjectionMatrix._array),j.transformMat4(a,a,this.worldTransform._array),i.scale(a,a,1/a[3]),i.sub(d.direction._array,a,d.origin._array),i.normalize(d.direction._array,d.direction._array),d.direction._dirty=!0,d.origin._dirty=!0,d}}()});return k}),e("qtek/camera/Orthographic",["require","../Camera"],function(a){var b=a("../Camera"),c=b.derive({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},clone:function(){var a=b.prototype.clone.call(this);return a.left=this.left,a.right=this.right,a.near=this.near,a.far=this.far,a.top=this.top,a.bottom=this.bottom,a}});return c}),e("qtek-2d/context/Geometry2D",["require","qtek/Geometry","qtek/StaticGeometry"],function(a){var b=a("qtek/Geometry"),c=a("qtek/StaticGeometry"),d=b.derive({_enabledAttributes:null,hint:b.DYNAMIC_DRAW},{dirty:function(){this._cache.dirtyAll()},getVertexNumber:c.prototype.getVertexNumber,getFaceNumber:c.prototype.getFaceNumber,isUseFace:c.prototype.isUseFace,getEnabledAttributes:c.prototype.getEnabledAttributes,getBufferChunks:c.prototype.getBufferChunks,_updateBuffer:c.prototype._updateBuffer});return d}),e("qtek-2d/context/Primitive",["require","qtek/Renderable","./Geometry2D","qtek/Material","qtek/Shader"],function(a){"use strict";var b=a("qtek/Renderable"),c=(a("./Geometry2D"),a("qtek/Material"),a("qtek/Shader"),b.derive({culling:!1,mode:b.TRIANGLES},{updateElements:function(){},addElement:function(){},clearElements:function(){},render:b.prototype.render}));return c}),e("qtek-2d/context/shader/path.essl",[],function(){return"@export buildin.2d.path.vertex\n\nattribute vec3 position;\nattribute vec4 color;\nattribute vec3 t0;\nattribute vec3 t1;\nattribute vec3 coord;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nvarying vec4 v_Color;\nvarying vec3 v_klm;\n\nvoid main()\n{\n    mat3 localTransform = mat3(\n        t0.x, t1.x, 0.0,\n        t0.y, t1.y, 0.0,\n        t0.z, t1.z, 1.0\n    );\n    vec3 pos2d = vec3(position.xy, 1.0);\n    pos2d = localTransform * pos2d;\n    vec4 pos3d = vec4(pos2d.xy, position.z, 1.0);\n\n    v_Color = color;\n    v_klm = coord;\n    gl_Position = worldViewProjection * pos3d;\n}\n\n@end\n\n\n@export buildin.2d.path.fragment\n\nvarying vec4 v_Color;\nvarying vec3 v_klm;\n\n#ifdef ANTIALIASING\n    #extension GL_OES_standard_derivatives : enable\n#endif\n\nvoid main()\n{\n    #ifdef ANTIALIASING\n        // Gradients\n        vec3 px = dFdx(v_klm);\n        vec3 py = dFdy(v_klm);\n        // Chain rule\n        float k2 = v_klm.x * v_klm.x;\n        float c = k2 * v_klm.x - v_klm.y * v_klm.z;\n        float k23 = 3.0 * k2;\n        float cx = k23 * px.x - v_klm.z * px.y - v_klm.y * px.z;\n        float cy = k23 * py.x - v_klm.z * py.y - v_klm.y * py.z;\n        // Signed distance\n        float sd = c / sqrt(cx * cx + cy * cy);\n\n        float alpha = clamp(0.5 - sd, 0.0, 1.0);\n\n    #else\n        float alpha = step(v_klm.x * v_klm.x * v_klm.x, v_klm.y * v_klm.z);\n    #endif\n\n    gl_FragColor = v_Color;\n    gl_FragColor.a *= alpha;\n\n    if (gl_FragColor.a < 1e-3) {\n        discard;\n    }\n}\n\n@end"}),e("qtek-2d/context/PathPrimitive",["require","qtek/Geometry","qtek/Material","qtek/Shader","./Geometry2D","./CanvasPath","./CanvasElement","./Primitive","./shader/path.essl"],function(a){var b=a("qtek/Geometry"),c=a("qtek/Material"),d=a("qtek/Shader"),e=a("./Geometry2D"),f=a("./CanvasPath"),g=a("./CanvasElement"),h=a("./Primitive");d.import(a("./shader/path.essl"));var i=new d({vertex:d.source("buildin.2d.path.vertex"),fragment:d.source("buildin.2d.path.fragment")});i.define("fragment","ANTIALIASING");var j=h.derive(function(){return{geometry:new e({attributes:{position:new b.Attribute("position","float",3,null,!1),color:new b.Attribute("position","float",4,null,!1),t0:new b.Attribute("t0","float",3,null,!1),t1:new b.Attribute("t1","float",3,null,!1),coord:new b.Attribute("coord","float",3,null,!1)}}),material:new c({shader:i,transparent:!0,depthMask:!0,depthTest:!0}),_paths:[],_needsUpdateAll:!1}},{addElement:function(a){this._paths.push(a),this._needsUpdateAll=!0},clearElements:function(){this._paths.length=0},updateElements:function(){for(var a=this.geometry,b=0,c=0;c<this._paths.length;c++){var d=this._paths[c];d.hasFill()&&(b+=this._paths[c].getFillVertexNumber()),d.hasStroke()&&(b+=this._paths[c].getStrokeVertexNumber())}var e=this._needsUpdateAll;a.attributes.position.value&&a.getVertexNumber()===b||(a.attributes.position.value=new Float32Array(3*b),a.attributes.color.value=new Float32Array(4*b),a.attributes.t0.value=new Float32Array(3*b),a.attributes.t1.value=new Float32Array(3*b),a.attributes.coord.value=new Float32Array(3*b),e=!0);for(var f=0,g=0,h=a.attributes.t0.value,i=a.attributes.t1.value,j=a.attributes.color.value,k=a.attributes.position.value,l=a.attributes.coord.value,c=0;c<this._paths.length;c++){var d=this._paths[c],m=d.transform._array,n=d.depth,o=d.drawingStyle.globalAlpha,p=0,q=0;if(d.hasFill()){p=d.getFillVertexNumber();var r=d.getFillVertices();(r.dirty||e)&&(l.set(r.coord,f),k.set(r.position,f));for(var s=f+2;3*p+f>s;s+=3)k[s]=n;if(d._fillColorChanged||e)for(var t=d.drawingStyle.fillStyle,s=0;p>s;s++)j[g++]=t[0],j[g++]=t[1],j[g++]=t[2],j[g++]=t[3]*o;else g+=4*p;f+=3*p}if(d.hasStroke()){q=d.getStrokeVertexNumber();var r=d.getStrokeVertices();if((r.dirty||e)&&k.set(r.position,f),e)for(var s=f;f+3*q>s;)l[s++]=0,l[s++]=1,l[s++]=1;for(var s=f+2;f+3*q>s;s+=3)k[s]=n+.002;if(d._strokeColorChanged||e)for(var t=d.drawingStyle.strokeStyle,s=0;q>s;s++)j[g++]=t[0],j[g++]=t[1],j[g++]=t[2],j[g++]=t[3]*o;else g+=4*q}if(f-=3*p,d.transform._dirty||e)for(var s=0;p+q>s;s++)h[f]=m[0],h[f+1]=m[2],h[f+2]=m[4],i[f]=m[1],i[f+1]=m[3],i[f+2]=m[5],f+=3;else f+=3*(p+q)}this._needsUpdateAll=!1,a.dirty()}});return g.setPrimitiveClass(f.eType,j),j}),e("qtek-2d/context/shader/image.essl",[],function(){return"@export buildin.2d.image.vertex\n\nattribute vec3 position;\nattribute vec2 texcoord;\nattribute vec3 t0;\nattribute vec3 t1;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nvarying vec2 v_Uv;\n\nvoid main()\n{\n    mat3 localTransform = mat3(\n        t0.x, t1.x, 0.0,\n        t0.y, t1.y, 0.0,\n        t0.z, t1.z, 1.0\n    );\n    vec3 pos2d = vec3(position.xy, 1.0);\n    pos2d = localTransform * pos2d;\n    vec4 pos3d = vec4(pos2d.xy, position.z, 1.0);\n\n    gl_Position = worldViewProjection * pos3d;\n    v_Uv = texcoord;\n}\n\n@end\n\n\n@export buildin.2d.image.fragment\n\nuniform sampler2D sprite;\n\nvarying vec2 v_Uv;\n\nvoid main()\n{\n    gl_FragColor = texture2D(sprite, v_Uv);\n}\n\n@end"}),e("qtek-2d/context/ImagePrimitive",["require","qtek/Geometry","qtek/Material","qtek/Shader","./Geometry2D","./CanvasImage","./CanvasElement","./Primitive","glmatrix","./shader/image.essl"],function(a){{var b=a("qtek/Geometry"),c=a("qtek/Material"),d=a("qtek/Shader"),e=a("./Geometry2D"),f=a("./CanvasImage"),g=a("./CanvasElement"),h=a("./Primitive"),i=a("glmatrix");i.vec2}d.import(a("./shader/image.essl"));var j=new d({vertex:d.source("buildin.2d.image.vertex"),fragment:d.source("buildin.2d.image.fragment")});j.enableTexture("sprite");var k=h.derive(function(){return{geometry:new e({attributes:{position:new b.Attribute("position","float",3,null,!1),texcoord:new b.Attribute("texcoord","float",2,null,!1),t0:new b.Attribute("t0","float",3,null,!1),t1:new b.Attribute("t1","float",3,null,!1)}}),material:new c({shader:j,transparent:!0,depthMask:!0,depthTest:!0}),_images:[],_inDescendantOrder:!1}},{addElement:function(a){this._images.push(a)},clearElements:function(){this._images.length=0,this._inDescendantOrder=!1},updateElements:function(a){if(0!=this._images.length){var b=this.geometry,c=6*this._images.length;b.attributes.position.value&&b.getVertexNumber()===c||(b.attributes.position.value=new Float32Array(3*c),b.attributes.texcoord.value=new Float32Array(2*c),b.attributes.t0.value=new Float32Array(3*c),b.attributes.t1.value=new Float32Array(3*c));var d=this._images[0].getTexture();this.material.set("sprite",d);var e=0,f=0,g=b.attributes.t0.value,h=b.attributes.t1.value;if(a&&!this._inDescendantOrder){for(var i=0,j=this._images.length;i<Math.floor(j/2);i++){var k=j-1,l=this._images[i];this._images[i]=this._images[k],this._images[k]=l}this._inDescendantOrder=!0}for(var i=0;i<this._images.length;i++){var m=this._images[i],n=m.depth,o=m.transform._array,p=m.getVertices();b.attributes.position.value.set(p.position,e),b.attributes.texcoord.value.set(p.texcoord,f);for(var q=e+2;18+e>q;q+=3)b.attributes.position.value[q]=n;for(var q=0;6>q;q++)g[e]=o[0],g[e+1]=o[2],g[e+2]=o[4],h[e]=o[1],h[e+1]=o[3],h[e+2]=o[5],e+=3,f+=2}b.dirty()}},_sortFunc:function(a,b){return b.depth-a.depth}});return g.setPrimitiveClass(f.eType,k),k}),e("qtek-2d/context/tool/ImageAtlas",["require","../CanvasImage","qtek/Texture"],function(a){var b=a("../CanvasImage"),c=a("qtek/Texture"),d=1024,e=window.devicePixelRatio||1,f=function(){this._canvas=document.createElement("canvas"),this._ctx2d=this._canvas.getContext("2d"),this._offsetX=0,this._offsetY=0,this._texture=null};f.prototype.clear=function(){this._canvas.width=d*e,this._canvas.height=d*e,this._offsetX=this._offsetY=0,this._nBlockSqrt=1,this._ctx2d.clearRect(0,0,this._canvas.width,this._canvas.height),this._ctx2d.scale(e,e),this._texture&&this._texture.dirty()};var g=/([0-9]+)px/;return f.prototype.addText=function(a,d,f,h,i,j){var k=this._ctx2d;k.fillStyle=j.fillStyle,k.strokeStyle=j.strokeStyle,k.font=j.font;var l=this._offsetX,m=this._offsetY,n=k.measureText(a).width;"undefined"!=typeof i&&(n=Math.min(n,i));var o=Math.max(+g.exec(k.font)[1],k.measureText("m").width),p=1.5*o;if(n>this._canvas.width/e&&console.warn("Text width no longer than "+this._canvas.width),l+n>this._canvas.width/e){if(l=0,m+p>this._canvas.height/e)return null;m+=p}switch(this._offsetY=m,this._offsetX=l+n,"fill"==d?"undefined"!=typeof i?k.fillText(a,l,m+o,i):k.fillText(a,l,m+o):"undefined"!=typeof i?k.strokeText(a,l,m+o,i):k.strokeText(a,l,m+o),j.textAlign){case"start":break;case"left":break;case"end":case"right":f-=n;break;case"center":f-=n/2}switch(j.textBaseline){case"alphabetic":case"ideographic":case"bottom":h-=o;break;case"top":case"hanging":break;case"middle":h-=o/2}var q=new b(this._canvas,l*e,m*e,n*e,p*e,f,h,n,p);return q&&(this._texture=q.getTexture(),this._texture.minFilter=c.NEAREST,this._texture.magFilter=c.NEAREST,this._texture.useMipmap=!1),q},f.prototype.measureText=function(a,b){var a=this._ctx2d;return a.font=_ctx.font,a.measureText(b)},f.prototype.addImage=function(){},f.prototype.getTexture=function(){return this._texture},f.prototype.dispose=function(a){this._texture.dispose(a)},f}),e("qtek-2d/context/Painter",["require","qtek/core/Base","qtek/Shader","qtek/math/Matrix2d","qtek/math/Matrix4","./tool/CachedList","./CanvasElement","./PathPrimitive","./ImagePrimitive","./CanvasPath","./CanvasImage","./tool/ImageAtlas"],function(a){"use strict";var b=a("qtek/core/Base"),c=(a("qtek/Shader"),a("qtek/math/Matrix2d")),d=a("qtek/math/Matrix4"),e=a("./tool/CachedList"),f=a("./CanvasElement"),g=(a("./PathPrimitive"),a("./ImagePrimitive"),a("./CanvasPath"),a("./CanvasImage"),a("./tool/ImageAtlas")),h=b.derive(function(){return{transform:new c,ctx:null,_elements:[],_primitives:[],_primitiveLists:[],_textAtlas:new e(g,2),_blending:!0,_blendFunc:null}},function(){for(var a=f.getClassNumber(),b=0;a>b;b++){var c=f.getPrimitiveClass(b);this._primitiveLists.push(c?new e(c,5):null)}this._disposePrimitive=this._disposePrimitive.bind(this),this._disposeImageAtlas=this._disposeImageAtlas.bind(this)},{addElement:function(a){a.depth=this.ctx.requestDepthChannel(),this._elements.push(a)},getElements:function(){return this._elements},draw:function(){var a=this.ctx,b=a.renderer.gl;this._blending?b.enable(b.BLEND):b.disable(b.BLEND);for(var c=0;c<this._primitives.length;c++)d.fromMat2d(this._primitives[c].worldTransform,this.transform),this._primitives[c].material.blend=this._blending&&this._blendFunc?this._blendFunc:null;a.renderer.renderQueue(this._primitives,a.camera);for(var c=0;c<this._elements.length;c++)this._elements[c].afterDraw()},repaint:function(){for(var a=0;a<this._primitives.length;a++)this._primitives[a].updateElements();this.draw()},enableBlending:function(){this._blending=!0},disableBlending:function(){this._blending=!1},setBlendFunc:function(a){this._blendFunc=a},begin:function(){this.beginTextAtlas();for(var a=0;a<this._primitives.length;a++)this._primitives[a].clearElements();this._primitives.length=0,this._elements.length=0;for(var a=0;a<this._primitiveLists.length;a++)this._primitiveLists[a]&&this._primitiveLists[a].clear(this._disposePrimitive)},end:function(){if(this._blending){for(var a,b=null,c=0;c<this._elements.length;c++){var d=this._elements[c],e=d.getHashKey();if(d.getHashKey()!=b){var f=this._primitiveLists[d.eType];f&&(a=f.increase(),a.clearElements()),a&&this._primitives.push(a),b=e}a&&a.addElement(d)}for(var c=0;c<this._primitives.length;c++)this._primitives[c].updateElements()}else{for(var c=0;c<this._primitiveLists.length;c++)if(this._primitiveLists[c]){var a=this._primitiveLists[c].increase();a.clearElements(),this._primitives.push(a)}for(var c=0;c<this._elements.length;c++){var d=this._elements[c],a=this._primitiveLists[d.eType].get(0);a.addElement(d)}for(var c=0;c<this._primitives.length;c++)this._primitives[c].updateElements(!0)}},beginTextAtlas:function(){this._textAtlas.clear(this._disposeImageAtlas)},getNewTextAtlas:function(){var a=this._textAtlas.increase();return a.clear(),a},endTextAtlas:function(){},dispose:function(){this.begin()},_disposePrimitive:function(a){a.geometry.dispose(this.ctx.renderer.gl)},_disposeImageAtlas:function(a){a.dispose(this.ctx.renderer.gl)},_eleDepthSortFunc:function(a,b){return a.depth-b.depth}});return h}),e("qtek/Scene",["require","./Node","./Light","glmatrix","./math/BoundingBox"],function(a){function b(a,b){return b.castShadow&&!a.castShadow?!0:void 0}var c=a("./Node"),d=a("./Light"),e=a("glmatrix"),f=(a("./math/BoundingBox"),e.mat4,e.vec3,c.derive(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],_lightUniforms:{},_lightNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0,AMBIENT_LIGHT:0},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this.scene=this},{addToScene:function(a){a.name&&(this._nodeRepository[a.name]=a)},removeFromScene:function(a){a.name&&delete this._nodeRepository[a.name]},getNode:function(a){return this._nodeRepository[a]},update:function(a){if(this.autoUpdate||a){c.prototype.update.call(this,a);var b=this.lights,d=(this.opaqueQueue,this.transparentQueue,this.material&&this.material.transparent);this._opaqueObjectCount=0,this._transparentObjectCount=0,b.length=0,this._updateRenderQueue(this,d),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount;for(var e in this._lightNumber)this._lightNumber[e]=0;for(var f=0;f<b.length;f++){var g=b[f];this._lightNumber[g.type]++}this._updateLightUniforms()}},_updateRenderQueue:function(a,b){if(a.visible)for(var c=0;c<a._children.length;c++){var e=a._children[c];e instanceof d&&this.lights.push(e),e.isRenderable()&&(e.material.transparent||b?this.transparentQueue[this._transparentObjectCount++]=e:this.opaqueQueue[this._opaqueObjectCount++]=e),e._children.length>0&&this._updateRenderQueue(e)}},_updateLightUniforms:function(){var a=this.lights;a.sort(b);var c=this._lightUniforms;for(var d in c)c[d].value.length=0;for(var e=0;e<a.length;e++){var f=a[e];for(d in f.uniformTemplates){var g=f.uniformTemplates[d];c[d]||(c[d]={type:"",value:[]});var h=g.value(f),i=c[d];switch(i.type=g.type+"v",g.type){case"1i":case"1f":i.value.push(h);break;case"2f":case"3f":case"4f":for(var j=0;j<h.length;j++)i.value.push(h[j]);break;default:console.error("Unkown light uniform type "+g.type)}}}},isShaderLightNumberChanged:function(a){return a.lightNumber.POINT_LIGHT!==this._lightNumber.POINT_LIGHT||a.lightNumber.DIRECTIONAL_LIGHT!==this._lightNumber.DIRECTIONAL_LIGHT||a.lightNumber.SPOT_LIGHT!==this._lightNumber.SPOT_LIGHT||a.lightNumber.AMBIENT_LIGHT!==this._lightNumber.AMBIENT_LIGHT},setShaderLightNumber:function(a){for(var b in this._lightNumber)a.lightNumber[b]=this._lightNumber[b];a.dirty()},setLightUniforms:function(a,b){for(var c in this._lightUniforms){var d=this._lightUniforms[c];a.setUniform(b,d.type,c,d.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}}));return f}),e("qtek/DynamicGeometry",["require","./Geometry","./core/util","./math/Vector3","./math/BoundingBox","./core/glenum","glmatrix"],function(a){var b=a("./Geometry"),c=(a("./core/util"),a("./math/Vector3"),a("./math/BoundingBox")),d=a("./core/glenum"),e=a("glmatrix"),f=e.vec3,g=(e.vec2,e.mat2,e.mat4),h=Array.prototype.slice,i=b.derive(function(){return{attributes:{position:new b.Attribute("position","float",3,"POSITION",!0),texcoord0:new b.Attribute("texcoord0","float",2,"TEXCOORD_0",!0),texcoord1:new b.Attribute("texcoord1","float",2,"TEXCOORD_1",!0),normal:new b.Attribute("normal","float",3,"NORMAL",!0),tangent:new b.Attribute("tangent","float",4,"TANGENT",!0),color:new b.Attribute("color","float",4,"COLOR",!0),weight:new b.Attribute("weight","float",3,"WEIGHT",!0),joint:new b.Attribute("joint","float",4,"JOINT",!0),barycentric:new b.Attribute("barycentric","float",3,null,!0)},hint:d.DYNAMIC_DRAW,faces:[],_enabledAttributes:null,_arrayChunks:[]}},{updateBoundingBox:function(){this.boundingBox||(this.boundingBox=new c),this.boundingBox.updateFromVertices(this.attributes.position.value)},dirty:function(a){if(a)this._cache.dirtyAll(a),this._cache.dirtyAll(),this._enabledAttributes=null;else{this.dirty("indices");for(var b in this.attributes)this.dirty(b)}},getVertexNumber:function(){return this.attributes.position.value.length},getFaceNumber:function(){return this.faces.length},isUseFace:function(){return this.useFace&&this.faces.length>0},isSplitted:function(){return this.getVertexNumber()>this.chunkSize},isStatic:function(){return!1},createAttribute:function(a,c,d,e){var f=new b.Attribute(a,c,d,e,!0);return this.attributes[a]=f,this._attributeList.push(a),f},removeAttribute:function(a){var b=this._attributeList.indexOf(a);return b>=0?(this._attributeList.splice(b,1),delete this.attributes[a],!0):!1},getEnabledAttributes:function(){if(this._enabledAttributes)return this._enabledAttributes;for(var a={},b=this.getVertexNumber(),c=0;c<this._attributeList.length;c++){var d=this._attributeList[c],e=this.attributes[d];
e.value.length&&e.value.length===b&&(a[d]=e)}return this._enabledAttributes=a,a},_getDirtyAttributes:function(){var a=this.getEnabledAttributes();if(this._cache.miss("chunks"))return a;var b={},c=!0;for(var d in a){{a[d]}this._cache.isDirty(d)&&(b[d]=a[d],c=!1)}return c?void 0:b},getChunkNumber:function(){return this._arrayChunks.length},getBufferChunks:function(a){if(this._cache.use(a.__GLID__),this._cache.isDirty()){var b=this._getDirtyAttributes(),c=this._cache.isDirty("indices");if(c=c&&this.isUseFace(),b){this._updateAttributesAndIndicesArrays(b,c),this._updateBuffer(a,b,c);for(var d in b)this._cache.fresh(d);this._cache.fresh("indices"),this._cache.fresh()}}return this._cache.get("chunks")},_updateAttributesAndIndicesArrays:function(a,b){var c=this,d=this.getVertexNumber(),e=[],f=[],g={};for(var h in a)switch(H){case"byte":g[h]=Int8Array;break;case"ubyte":g[h]=Uint8Array;break;case"short":g[h]=Int16Array;break;case"ushort":g[h]=Uint16Array;break;default:g[h]=Float32Array}var i=function(b){if(c._arrayChunks[b])return c._arrayChunks[b];var f={attributeArrays:{},indicesArray:null};for(var g in a)f.attributeArrays[g]=null;for(var h=0;d>h;h++)e[h]=-1;return c._arrayChunks.push(f),f},j=Object.keys(a);if(d>this.chunkSize&&this.isUseFace()){var k,l=0,m=[0],n=[];for(p=0;d>p;p++)n[p]=-1,e[p]=-1;if(b)for(p=0;p<this.faces.length;p++)f[p]=[0,0,0];k=i(l);for(var o=0,p=0;p<this.faces.length;p++){var q=this.faces[p],r=f[p];o+3>this.chunkSize&&(l++,m[l]=p,o=0,k=i(l));for(var s=0;3>s;s++){for(var t=q[s],u=-1===e[t],v=0;v<j.length;v++){var h=j[v],w=k.attributeArrays[h],x=a[h].value,y=a[h].size;if(w||(w=k.attributeArrays[h]=[]),u){1===y&&(w[o]=x[t]);for(var z=0;y>z;z++)w[o*y+z]=x[t][z]}}u?(e[t]=o,r[s]=o,o++):r[s]=e[t]}}for(var A=0;A<this._arrayChunks.length;A++){var B=this._arrayChunks[A];for(var h in B.attributeArrays){var C=B.attributeArrays[h];C instanceof Array&&(B.attributeArrays[h]=new g[h](C))}}if(b)for(var D,E,F,B,A=0;A<this._arrayChunks.length;A++){D=m[A],E=m[A+1]||this.faces.length,F=0,B=this._arrayChunks[A];var G=B.indicesArray;G||(G=B.indicesArray=new Uint16Array(3*(E-D)));for(var p=D;E>p;p++)G[F++]=f[p][0],G[F++]=f[p][1],G[F++]=f[p][2]}}else{var B=i(0);if(b){var G=B.indicesArray;G||(G=B.indicesArray=new Uint16Array(3*this.faces.length));for(var F=0,p=0;p<this.faces.length;p++)G[F++]=this.faces[p][0],G[F++]=this.faces[p][1],G[F++]=this.faces[p][2]}for(var h in a){var x=a[h].value,H=a[h].type,y=a[h].size,w=B.attributeArrays[h],I=d*y;if(w&&w.length===I||(w=new g[h](I),B.attributeArrays[h]=w),1===y)for(var p=0;p<x.length;p++)w[p]=x[p];else for(var F=0,p=0;p<x.length;p++)for(var z=0;y>z;z++)w[F++]=x[p][z]}}},_updateBuffer:function(a,c,d){var e=this._cache.get("chunks"),f=!1;if(!e){e=[];for(var g=0;g<this._arrayChunks.length;g++)e[g]={attributeBuffers:[],indicesBuffer:null};this._cache.put("chunks",e),f=!0}for(var h=0;h<this._arrayChunks.length;h++){var i=e[h];i||(i=e[h]={attributeBuffers:[],indicesBuffer:null});var j=i.attributeBuffers,k=i.indicesBuffer,l=this._arrayChunks[h],m=l.attributeArrays,n=l.indicesArray,o=0,p=0;for(var q in c){var r,s=c[q],t=s.type,u=s.semantic,v=s.size;if(!f){for(var g=p;g<j.length;g++)if(j[g].name===q){r=j[g],p=g+1;break}if(!r)for(var g=p-1;g>=0;g--)if(j[g].name===q){r=j[g],p=g;break}}var w;w=r?r.buffer:a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,w),a.bufferData(a.ARRAY_BUFFER,m[q],this.hint),j[o++]=new b.AttributeBuffer(q,t,w,v,u)}j.length=o,d&&(k||(k=new b.IndicesBuffer(a.createBuffer(),n.length),i.indicesBuffer=k),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,k.buffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,n,this.hint))}},generateVertexNormals:function(){for(var a=this.faces,b=a.length,c=this.attributes.position.value,d=this.attributes.normal.value,e=f.create(),g=f.create(),h=f.create(),i=0;i<d.length;i++)f.set(d[i],0,0,0);for(var i=d.length;i<c.length;i++)d[i]=[0,0,0];for(var j=0;b>j;j++){var k=a[j],l=k[0],m=k[1],n=k[2],o=c[l],p=c[m],q=c[n];f.sub(g,o,p),f.sub(h,p,q),f.cross(e,g,h),f.add(d[l],d[l],e),f.add(d[m],d[m],e),f.add(d[n],d[n],e)}for(var i=0;i<d.length;i++)f.normalize(d[i],d[i])},generateFaceNormals:function(){this.isUniqueVertex()||this.generateUniqueVertex();for(var a=this.faces,b=a.length,c=this.attributes.position.value,d=this.attributes.normal.value,e=f.create(),g=f.create(),i=f.create(),j=d.length===c.length,k=0;b>k;k++){var l=a[k],m=l[0],n=l[1],o=l[2],p=c[m],q=c[n],r=c[o];f.sub(g,p,q),f.sub(i,q,r),f.cross(e,g,i),j?(f.copy(d[m],e),f.copy(d[n],e),f.copy(d[o],e)):d[m]=d[n]=d[o]=h.call(e)}},generateTangents:function(){for(var a=this.attributes.texcoord0.value,b=this.attributes.position.value,c=this.attributes.tangent.value,d=this.attributes.normal.value,e=[],g=[],h=this.getVertexNumber(),i=0;h>i;i++)e[i]=[0,0,0],g[i]=[0,0,0];for(var j=[0,0,0],k=[0,0,0],i=0;i<this.faces.length;i++){var l=this.faces[i],m=l[0],n=l[1],o=l[2],p=a[m],q=a[n],r=a[o],s=b[m],t=b[n],u=b[o],v=t[0]-s[0],w=u[0]-s[0],x=t[1]-s[1],y=u[1]-s[1],z=t[2]-s[2],A=u[2]-s[2],B=q[0]-p[0],C=r[0]-p[0],D=q[1]-p[1],E=r[1]-p[1],F=1/(B*E-D*C);j[0]=(E*v-D*w)*F,j[1]=(E*x-D*y)*F,j[2]=(E*z-D*A)*F,k[0]=(B*w-C*v)*F,k[1]=(B*y-C*x)*F,k[2]=(B*A-C*z)*F,f.add(e[m],e[m],j),f.add(e[n],e[n],j),f.add(e[o],e[o],j),f.add(g[m],g[m],k),f.add(g[n],g[n],k),f.add(g[o],g[o],k)}for(var G=[0,0,0,0],H=[0,0,0],i=0;h>i;i++){var I=d[i],J=e[i];f.scale(G,I,f.dot(I,J)),f.sub(G,J,G),f.normalize(G,G),f.cross(H,I,J),G[3]=f.dot(H,g[i])<0?-1:1,c[i]=G.slice()}},isUniqueVertex:function(){return this.isUseFace()?this.getVertexNumber()===3*this.faces.length:!0},generateUniqueVertex:function(){for(var a=[],b=0;b<this.getVertexNumber();b++)a[b]=0;for(var c=this.getVertexNumber(),d=this.getEnabledAttributes(),e=this.faces,f=Object.keys(d),b=0;b<e.length;b++)for(var g=e[b],i=0;3>i;i++){var j=g[i];if(a[j]>0){for(var k=0;k<f.length;k++){var l=f[k],m=d[l].value,n=d[l].size;m.push(1===n?m[j]:h.call(m[j]))}g[i]=c,c++}a[j]++}this.dirty()},generateBarycentric:function(){var a=[1,0,0],b=[0,0,1],c=[0,1,0];return function(){this.isUniqueVertex()||this.generateUniqueVertex();var d=this.attributes.barycentric.value;if(d.length!=3*this.faces.length)for(var e,f,g,h,i=0;i<this.faces.length;i++)h=this.faces[i],e=h[0],f=h[1],g=h[2],d[e]=a,d[f]=b,d[g]=c}}(),convertToStatic:function(a){if(this._updateAttributesAndIndicesArrays(this.getEnabledAttributes(),!0),this._arrayChunks.length>1)console.warn("Large geometry will discard chunks when convert to StaticGeometry");else if(0===this._arrayChunks.length)return a;var b=this._arrayChunks[0],d=this.getEnabledAttributes();for(var e in d){var f=d[e],g=a.attributes[e];g||(g=a.attributes[e]={type:f.type,size:f.size,value:null},f.semantic&&(g.semantic=f.semantic)),g.value=b.attributeArrays[e]}return a.faces=b.indicesArray,this.boundingBox&&(a.boundingBox=new c,a.boundingBox.min.copy(this.boundingBox.min),a.boundingBox.max.copy(this.boundingBox.max)),a},applyTransform:function(a){this.boundingBox&&this.boundingBox.applyTransform(a);var b=this.attributes.position.value,c=this.attributes.normal.value,d=this.attributes.tangent.value;a=a._array;for(var e=0;e<b.length;e++)f.transformMat4(b[e],b[e],a);var h=g.create();g.invert(h,a),g.transpose(h,h);for(var e=0;e<c.length;e++)f.transformMat4(c[e],c[e],h);for(var e=0;e<d.length;e++)f.transformMat4(d[e],d[e],h)},dispose:function(a){this._cache.use(a.__GLID__);var b=this._cache.get("chunks");if(b)for(var c=0;c<b.length;c++)for(var d=b[c],e=0;e<d.attributeBuffers.length;e++){var f=d.attributeBuffers[e];a.deleteBuffer(f.buffer)}this._cache.deleteContext(a.__GLID__)}});return i}),e("qtek/geometry/Plane",["require","../DynamicGeometry","../math/BoundingBox"],function(a){var b=a("../DynamicGeometry"),c=a("../math/BoundingBox"),d=b.derive({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){var a=this.heightSegments,b=this.widthSegments,d=this.attributes.position.value,e=this.attributes.texcoord0.value,f=this.attributes.normal.value,g=this.faces;d.length=0,e.length=0,f.length=0,g.length=0;for(var h=0;a>=h;h++)for(var i=h/a,j=0;b>=j;j++){var k=j/b;if(d.push([2*k-1,2*i-1,0]),e&&e.push([k,i]),f&&f.push([0,0,1]),b>j&&a>h){var l=j+h*(b+1);g.push([l,l+1,l+b+1]),g.push([l+b+1,l+1,l+b+2])}}this.boundingBox=new c,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});return d}),e("qtek/compositor/Pass",["require","../core/Base","../Scene","../camera/Orthographic","../geometry/Plane","../Shader","../Material","../Mesh","../Scene","../Texture","../core/glinfo","../core/glenum"],function(a){var b=a("../core/Base"),c=(a("../Scene"),a("../camera/Orthographic")),d=a("../geometry/Plane"),e=a("../Shader"),f=a("../Material"),g=a("../Mesh"),h=(a("../Scene"),a("../Texture"),a("../core/glinfo")),i=a("../core/glenum"),j=new d,k=new g({geometry:j}),l=new c,m=b.derive(function(){return{fragment:"",outputs:null,material:null}},function(){var a=new e({vertex:e.source("buildin.compositor.vertex"),fragment:this.fragment}),b=new f({shader:a});a.enableTexturesAll(),this.material=b},{setUniform:function(a,b){var c=this.material.uniforms[a];c&&(c.value=b)},getUniform:function(a){var b=this.material.uniforms[a];return b?b.value:void 0},attachOutput:function(a,b){this.outputs||(this.outputs={}),b=b||i.COLOR_ATTACHMENT0,this.outputs[b]=a},detachOutput:function(a){for(var b in this.outputs)this.outputs[b]===a&&(this.outputs[b]=null)},bind:function(a,b){if(this.outputs){for(var c in this.outputs){var d=this.outputs[c];d&&b.attach(a.gl,d,c)}b.bind(a)}},unbind:function(a,b){b.unbind(a)},render:function(a,b){var c=a.gl;if(k.material=this.material,b){this.bind(a,b);var d=h.getExtension(c,"EXT_draw_buffers");if(d){var e=[];for(var f in this.outputs)f=+f,f>=c.COLOR_ATTACHMENT0&&f<=c.COLOR_ATTACHMENT0+8&&e.push(f);d.drawBuffersEXT(e)}}this.trigger("beforerender",this,a),c.disable(c.BLEND),c.clear(c.DEPTH_BUFFER_BIT),a.renderQueue([k],l),this.trigger("afterrender",this,a),b&&this.unbind(a,b)}});return m}),e("qtek/FrameBuffer",["require","./core/Base","./texture/Texture2D","./texture/TextureCube","./core/glinfo","./core/glenum","./core/Cache"],function(a){var b=a("./core/Base"),c=(a("./texture/Texture2D"),a("./texture/TextureCube")),d=a("./core/glinfo"),e=a("./core/glenum"),f=a("./core/Cache"),g=b.derive({depthBuffer:!0,_attachedTextures:null,_width:0,_height:0,_depthTextureAttached:!1,_renderBufferWidth:0,_renderBufferHeight:0,_binded:!1},function(){this._cache=new f,this._attachedTextures={}},{resize:function(a,b){this._width=a,this._height=b},bind:function(a){var b=a.gl;if(this._binded||(b.bindFramebuffer(b.FRAMEBUFFER,this.getFrameBuffer(b)),this._binded=!0),this._cache.put("viewport",a.viewport),a.setViewport(0,0,this._width,this._height),this._cache.miss("renderbuffer")&&this.depthBuffer&&!this._depthTextureAttached&&this._cache.put("renderbuffer",b.createRenderbuffer()),!this._depthTextureAttached&&this.depthBuffer){var c=this._width,d=this._height,e=this._cache.get("renderbuffer");(c!==this._renderBufferWidth||d!==this._renderBufferHeight)&&(b.bindRenderbuffer(b.RENDERBUFFER,e),b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,c,d),this._renderBufferWidth=c,this._renderBufferHeight=d,b.bindRenderbuffer(b.RENDERBUFFER,null)),this._cache.get("renderbuffer_attached")||(b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,e),this._cache.put("renderbuffer_attached",!0))}},unbind:function(a){var b=a.gl;b.bindFramebuffer(b.FRAMEBUFFER,null),this._binded=!1,this._cache.use(b.__GLID__);var d=this._cache.get("viewport");d&&a.setViewport(d.x,d.y,d.width,d.height);for(var e in this._attachedTextures){var f=this._attachedTextures[e];if(!f.NPOT&&f.useMipmap){var g=f instanceof c?b.TEXTURE_CUBE_MAP:b.TEXTURE_2D;b.bindTexture(g,f.getWebGLTexture(b)),b.generateMipmap(g),b.bindTexture(g,null)}}},getFrameBuffer:function(a){return this._cache.use(a.__GLID__),this._cache.miss("framebuffer")&&this._cache.put("framebuffer",a.createFramebuffer()),this._cache.get("framebuffer")},attach:function(a,b,c,f,g){if(!b.width)throw new Error("The texture attached to color buffer is not a valid.");if(this._binded||(a.bindFramebuffer(a.FRAMEBUFFER,this.getFrameBuffer(a)),this._binded=!0),this._width=b.width,this._height=b.height,c=c||a.COLOR_ATTACHMENT0,f=f||a.TEXTURE_2D,g=g||0,c===a.DEPTH_ATTACHMENT){var h=d.getExtension(a,"WEBGL_depth_texture");if(!h)return void console.error(" Depth texture is not supported by the browser ");if(b.format!==e.DEPTH_COMPONENT)return void console.error("The texture attached to depth buffer is not a valid.");this._cache.put("renderbuffer_attached",!1),this._depthTextureAttached=!0}this._attachedTextures[c]=b,a.framebufferTexture2D(a.FRAMEBUFFER,c,f,b.getWebGLTexture(a),g)},detach:function(){},dispose:function(a){this._cache.use(a.__GLID__),this._cache.get("renderbuffer")&&a.deleteRenderbuffer(this._cache.get("renderbuffer")),this._cache.get("framebuffer")&&a.deleteFramebuffer(this._cache.get("framebuffer")),this._cache.deleteContext(a.__GLID__)}});return g.COLOR_ATTACHMENT0=e.COLOR_ATTACHMENT0,g.DEPTH_ATTACHMENT=e.DEPTH_ATTACHMENT,g.STENCIL_ATTACHMENT=e.STENCIL_ATTACHMENT,g.DEPTH_STENCIL_ATTACHMENT=e.DEPTH_STENCIL_ATTACHMENT,g}),e("qtek-2d/context/shader/deferred/blend.essl",[],function(){return"@export buildin.2d.deferred.blend\n\nuniform sampler2D color1;\nuniform sampler2D depth1;\n\nuniform sampler2D color2;\nuniform sampler2D depth2;\n\nvarying vec2 v_Texcoord;\n\nfloat decodeFloat(const in vec4 colour)\n{\n    const vec4 bitShifts = vec4(1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0);\n    return dot(colour, bitShifts);\n}\n\nvoid main()\n{\n\n    vec4 c1 = texture2D(color1, v_Texcoord);\n    vec4 c2 = texture2D(color2, v_Texcoord);\n\n    #ifdef DEPTH_DECODE\n        float d1 = decodeFloat(texture2D(depth1, v_Texcoord));\n        float d2 = decodeFloat(texture2D(depth2, v_Texcoord));\n    #else\n        float d1 = texture2D(depth1, v_Texcoord).r;\n        float d2 = texture2D(depth2, v_Texcoord).r;\n    #endif\n\n    if (d1 > d2) {\n        gl_FragColor.rgb = c1.rgb * (1.0 - c2.a) + c2.rgb;\n    } else {\n        gl_FragColor.rgb = c2.rgb * (1.0 - c1.a) + c1.rgb;\n    }\n    gl_FragColor.a = c1.a + c2.a - c1.a *c2.a;\n\n    // TODO premultiplied alpha in renderer?\n    gl_FragColor.rgb /= gl_FragColor.a;\n}\n\n@end"}),e("qtek-2d/context/shader/deferred/depth.essl",[],function(){return"@export buildin.2d.deferred.depth.vertex\n\nattribute vec3 position;\nattribute vec3 t0;\nattribute vec3 t1;\n\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\n\nvoid main()\n{\n    mat3 localTransform = mat3(\n        t0.x, t1.x, 0.0,\n        t0.y, t1.y, 0.0,\n        t0.z, t1.z, 1.0\n    );\n    vec3 pos2d = vec3(position.xy, 1.0);\n    pos2d = localTransform * pos2d;\n    vec4 pos3d = vec4(pos2d.xy, position.z, 1.0);\n\n    gl_Position = worldViewProjection * pos3d;\n}\n\n@end\n\n@export buildin.2d.deferred.depth.fragment\n\nvec4 encodeFloat(const in float depth)\n{\n    const vec4 bitShifts = vec4(256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0);\n\n    const vec4 bit_mask  = vec4(0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\n    vec4 res = fract( depth * bitShifts );\n    res -= res.xxyz * bit_mask;\n\n    return res;\n}\n\nvoid main()\n{\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n\n    gl_FragColor = encodeFloat(depth);\n}\n\n@end\n\n"}),e("qtek-2d/context/DeferredPainter",["require","qtek/core/Base","qtek/Shader","qtek/Material","qtek/compositor/Pass","qtek/FrameBuffer","qtek/core/glinfo","qtek/texture/Texture2D","qtek/math/Matrix2d","qtek/math/Matrix4","./tool/CachedList","./CanvasElement","./PathPrimitive","./ImagePrimitive","./CanvasPath","./CanvasImage","./tool/ImageAtlas","./shader/deferred/blend.essl","./shader/deferred/depth.essl"],function(a){var b=a("qtek/core/Base"),c=a("qtek/Shader"),d=a("qtek/Material"),e=a("qtek/compositor/Pass"),f=a("qtek/FrameBuffer"),g=a("qtek/core/glinfo"),h=a("qtek/texture/Texture2D"),i=a("qtek/math/Matrix2d"),j=a("qtek/math/Matrix4"),k=a("./tool/CachedList"),l=(a("./CanvasElement"),a("./PathPrimitive")),m=a("./ImagePrimitive"),n=a("./CanvasPath"),o=a("./CanvasImage"),p=a("./tool/ImageAtlas");c.import(a("./shader/deferred/blend.essl")),c.import(a("./shader/deferred/depth.essl"));var q=new c({vertex:c.source("buildin.2d.deferred.depth.vertex"),fragment:c.source("buildin.2d.deferred.depth.fragment")}),r=new d({shader:q}),s=new e({fragment:c.source("buildin.2d.deferred.blend")}),t=b.derive(function(){return{transform:new i,ctx:null,_elements:[],_pathPrimitives:[],_imagePrimitives:[],_textAtlas:new k(p,2),_imagePrimitiveList:new k(m),_pathPrimitiveList:new k(l,2),_pathColorTexture:null,_pathDepthTexture:null,_imageColorTexture:null,_imageDepthTexture:null,frameBuffer:new f,_blendFunc:null}},{addElement:function(a){a.depth=this.ctx.requestDepthChannel(),this._elements.push(a)},getElements:function(){return this._elements},draw:function(){var a=this.ctx,b=a.renderer.gl;b.depthMask(!0),b.enable(b.BLEND);for(var c=0;c<this._pathPrimitives.length;c++)j.fromMat2d(this._pathPrimitives[c].worldTransform,this.transform),this._pathPrimitives[c].material.blend=this._blendFunc;for(var c=0;c<this._imagePrimitives.length;c++)j.fromMat2d(this._imagePrimitives[c].worldTransform,this.transform),this._imagePrimitives[c].material.blend=this._blendFunc;if(0==this._pathPrimitives.length||0==this._imagePrimitives.length)this._pathPrimitives.length>0&&a.renderer.renderQueue(this._pathPrimitives,a.camera),this._imagePrimitives.length>0&&a.renderer.renderQueue(this._imagePrimitives,a.camera);else{var d=g.getExtension(b,"WEBGL_depth_texture");this._pathColorTexture=this._checkTexture(this._pathColorTexture,a),this._pathDepthTexture=this._checkTexture(this._pathDepthTexture,a),this._imageColorTexture=this._checkTexture(this._imageColorTexture,a),this._imageDepthTexture=this._checkTexture(this._imageDepthTexture,a),d&&(this._pathDepthTexture.format=b.DEPTH_COMPONENT,this._pathDepthTexture.type=b.UNSIGNED_SHORT,this._imageDepthTexture.format=b.DEPTH_COMPONENT,this._imageDepthTexture.type=b.UNSIGNED_SHORT),this.frameBuffer.attach(b,this._pathColorTexture),d&&this.frameBuffer.attach(b,this._pathDepthTexture,b.DEPTH_ATTACHMENT),this.frameBuffer.bind(a.renderer),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),a.renderer.renderQueue(this._pathPrimitives,a.camera),d||(this.frameBuffer.attach(b,this._pathDepthTexture),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),a.renderer.renderQueue(this._pathPrimitives,a.camera,r)),this.frameBuffer.attach(b,this._imageColorTexture),d&&this.frameBuffer.attach(b,this._imageDepthTexture,b.DEPTH_ATTACHMENT),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),a.renderer.renderQueue(this._imagePrimitives,a.camera),d||(this.frameBuffer.attach(b,this._imageDepthTexture),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),a.renderer.renderQueue(this._imagePrimitives,a.camera,r)),this.frameBuffer.unbind(a.renderer),b.depthMask(!1),b.disable(b.DEPTH_TEST),s.setUniform("color1",this._pathColorTexture),s.setUniform("depth1",this._pathDepthTexture),s.setUniform("color2",this._imageColorTexture),s.setUniform("depth2",this._imageDepthTexture),s.material.depthTest=!1,s.material.depthMask=!1,s.material.transparent=!0,d?s.material.shader.unDefine("fragment","DEPTH_DECODE"):s.material.shader.define("fragment","DEPTH_DECODE"),a.renderer.clear=0,s.render(a.renderer),a.renderer.clear=b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT}for(var c=0;c<this._elements.length;c++)this._elements[c].afterDraw()},_checkTexture:function(a,b){return a&&a.width===b.renderer.width&&a.height===b.renderer.height||(a&&a.dispose(b.renderer.gl),a=new h({width:b.renderer.width,height:b.renderer.height,minFilter:b.renderer.gl.NEAREST,magFilter:b.renderer.gl.NEAREST})),a},repaint:function(){for(var a=0;a<this._pathPrimitives.length;a++)this._pathPrimitives[a].updateElements();for(var a=0;a<this._imagePrimitives.length;a++)this._imagePrimitives[a].updateElements();this.draw()},setBlendFunc:function(a){this._blendFunc=a},begin:function(){this.beginTextAtlas();for(var a=0;a<this._pathPrimitives.length;a++)this._pathPrimitives[a].clearElements();for(var a=0;a<this._imagePrimitives.length;a++)this._imagePrimitives[a].clearElements();this._pathPrimitives.length=0,this._elements.length=0,this._imagePrimitiveList.clear(this._disposePrimitive),this._pathPrimitiveList.clear(this._disposePrimitive)},end:function(){for(var a,b,c=null,d=0;d<this._elements.length;d++){var e=this._elements[d];switch(e.eType){case o.eType:var f=e.getHashKey();c!==f&&(c=f,b=this._imagePrimitiveList.increase(),this._imagePrimitives.push(b)),b.addElement(e);break;case n.eType:a||(a=this._pathPrimitiveList.increase(),this._pathPrimitives.push(a)),a.addElement(e);break;default:console.warn("Deferred painter only support CanvasImage and CanvasPath")}}for(var d=0;d<this._pathPrimitives.length;d++)this._pathPrimitives[d].updateElements();for(var d=0;d<this._imagePrimitives.length;d++)this._imagePrimitives[d].updateElements()},beginTextAtlas:function(){this._textAtlas.clear(this._disposeImageAtlas)},getNewTextAtlas:function(){var a=this._textAtlas.increase();return a.clear(),a},dispose:function(){this.begin()},_disposePrimitive:function(a){a.geometry.dispose(this.ctx.renderer.gl)},_disposeImageAtlas:function(a){a.dispose(this.ctx.renderer.gl)},_eleDepthSortFunc:function(a,b){return a.depth-b.depth}});return t}),e("qtek-2d/context/States",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.mat2d,d=function(){this._matrix=c.create()};return d.prototype={constructor:d,load:function(a){a.strokeStyle=this.strokeStyle,a.fillStyle=this.fillStyle,a.globalAlpha=this.globalAlpha,a.lineWidth=this.lineWidth,a.font=this.font,a.textBaseline=this.textBaseline,a.textAlign=this.textAlign,c.copy(a.currentTransform._array,this._matrix)},save:function(a){this.strokeStyle=a.strokeStyle,this.fillStyle=a.fillStyle,this.globalAlpha=a.globalAlpha,this.lineWidth=a.lineWidth,this.font=a.font,this.textBaseline=a.textBaseline,this.textAlign=a.textAlign,c.copy(this._matrix,a.currentTransform._array)}},d}),e("qtek-2d/context/Context2D",["require","qtek/math/Matrix2d","glmatrix","qtek/core/Base","qtek/Renderer","qtek/camera/Orthographic","./Painter","./DeferredPainter","./CanvasPath","./CanvasImage","./States"],function(a){"use strict";var b=a("qtek/math/Matrix2d"),c=a("glmatrix"),d=c.vec2,e=c.mat2d,f=a("qtek/core/Base"),g=a("qtek/Renderer"),h=a("qtek/camera/Orthographic"),i=a("./Painter"),j=a("./DeferredPainter"),k=a("./CanvasPath"),l=a("./CanvasImage"),m=a("./States"),n=d.create(),o=f.derive({canvas:null,renderer:null,camera:null,depthChannelGap:.01,_path:null,_polygon:null,_painter:null,_textAtlas:null,_depth:1},function(){var a=this.canvas.width,c=this.canvas.height;this.canvas&&!this.renderer&&(this.renderer=new g({canvas:this.canvas})),this.camera||(this.camera=new h({left:-a/2,right:a/2,top:c/2,bottom:-c/2,far:50,near:0}),this.camera.scale.y=-1,this.camera.position.x=a/2,this.camera.position.y=c/2,this.camera.position.z=this.camera.far,this.camera.update(!0)),this.currentTransform=new b,this._statesStack=[]},{strokeStyle:"#000000",fillStyle:"#000000",globalAlpha:1,shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:0,font:"10px sans-serif",textAlign:"start",textBaseline:"alphabetic",lineWidth:1,lineCap:"",lineJoin:"",save:function(){var a=new m;a.save(this),this._statesStack.push(a)},restore:function(){if(this._statesStack.length>0){var a=this._statesStack.pop();a.load(this)}},scale:function(a,b){n[0]=a,n[1]=b;var c=this.currentTransform._array;e.scale(c,c,n)},rotate:function(a){var b=this.currentTransform._array;e.rotate(b,b,a)},translate:function(a,b){n[0]=a,n[1]=b;var c=this.currentTransform._array;e.translate(c,c,n)},transform:function(a,b,c,d,e,f){var g=this.currentTransform._array,h=g[0],i=g[1],j=g[2],k=g[3],l=g[4],m=g[5];g[0]=a*h+b*j,g[1]=a*i+b*k,g[2]=c*h+d*j,g[3]=c*i+d*k,g[4]=h*e+j*f+l,g[5]=i*e+k*f+m},setTransform:function(a,b,c,d,e,f){var g=this.currentTransform._array;g[0]=a,g[1]=b,g[2]=c,g[3]=d,g[4]=e,g[5]=f},drawImage:function(a,b,c,d,e,f,g,h,i){if(this._painter){this._path&&this.endPath(),3==arguments.length?(f=b,g=c,b=0,c=0,h=d=a.width,i=e=a.height):5==arguments.length&&(f=b,g=c,h=d,i=e,b=0,c=0,d=a.height,e=a.height);var j=new l(a,b,c,d,e,f,g,h,i);return j.end(this),this._painter.addElement(j),j}},createLinearGradient:function(){},createRadialGradient:function(){},createPattern:function(){},strokeText:function(a,b,c,d){return this._drawText(a,"stroke",b,c,d)},fillText:function(a,b,c,d){return this._drawText(a,"fill",b,c,d)},_drawText:function(a,b,c,d,e){if(this._painter){this._path&&this.endPath(),this._textAtlas||(this._textAtlas=this._painter.getNewTextAtlas());var f=this._textAtlas.addText(a,b,c,d,e,this);return f||(this._textAtlas=this._painter.getNewTextAtlas(),f=this._textAtlas.addText(a,b,c,d,e,this)),f.end(this),this._painter.addElement(f),f}},measureText:function(a){return this._textAtlas||(this._textAtlas=this._painter.getNewTextAtlas()),this._textAtlas.measureText(a)},clearRect:function(){},fillRect:function(){},strokeRect:function(){},beginPath:function(a){return this._path&&this.endPath(),a||(a=new k),a.begin(this),this._path=a,a},closePath:function(){this._path&&this._path.close(this.lineWidth)},fill:function(){this._path&&this._path.fill(this)},stroke:function(){this._path&&this._path.stroke(this)},clip:function(){console.warn("TODO")},moveTo:function(a,b){this._path&&this._path.moveTo(a,b)},lineTo:function(a,b){this._path&&this._path.lineTo(a,b,this.lineWidth)},quadraticCurveTo:function(a,b,c,d){this._path&&this._path.quadraticCurveTo(a,b,c,d,this.lineWidth)},bezierCurveTo:function(a,b,c,d,e,f){this._path&&this._path.bezierCurveTo(a,b,c,d,e,f,this.lineWidth)},arc:function(a,b,c,d,e,f){this._path&&this._path.arc(a,b,c,d,e,f,this.lineWidth)},arcTo:function(){},rect:function(a,b,c,d){this._path&&this._path.rect(a,b,c,d,this.lineWidth)},isPointInPath:function(){},createImageData:function(){},getImageData:function(){},putImageData:function(){},beginDraw:function(a,b){return a||(a="deferred"==b?new j:new i),this.setPainter(a),a},setPainter:function(a){this._painter!==a&&(this._painter&&this._painter.end(),a.ctx=this,this._textAtlas=null,this._painter=a,a.begin())},addPath:function(a){this._painter&&this._painter.addElement(a)},addImage:function(a){this._painter&&this._painter.addElement(a)},clearColor:function(a){var b=this.renderer.gl;a&&b.clearColor(a[0],a[1],a[2],a[3]),b.clear(b.COLOR_BUFFER_BIT)},clearDepth:function(){var a=this.renderer.gl;a.clear(a.DEPTH_BUFFER_BIT),this._depth=1},clear:function(a){var b=this.renderer.gl;a&&b.clearColor(a[0],a[1],a[2],a[3]),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),this._depth=1},endDraw:function(){this._painter&&(this._path&&this.endPath(),this._painter.end(),this._painter.draw(),this._painter=null)},repaint:function(a){var b=a.getElements(),c=b[b.length-1];c&&this.setDepthChannel(c.depth),a.repaint()},draw:function(a){var b=a.getElements(),c=b[b.length-1];c&&this.setDepthChannel(c.depth),a.draw()},endPath:function(){this._path&&(this._path.end(this),this._painter&&this._painter.addElement(this._path),this._path=null)},requestDepthChannel:function(){return this.setDepthChannel(this._depth+this.depthChannelGap),this._depth},setDepthChannel:function(a){this._depth=a,this._depth>this.camera.far&&(this.camera.far*=2,this.camera.position.z=this.camera.far,this.camera.update(!0))},identity:function(){e.identity(this.currentTransform._array)},resize:function(a,b){this.renderer.resize(a,b),a=this.renderer.width,b=this.renderer.height,this.camera.left=-a/2,this.camera.right=a/2,this.camera.top=b/2,this.camera.bottom=-b/2,this.camera.position.x=a/2,this.camera.position.y=b/2,this.camera.update(!0)}});return o}),e("qtek-2d/context/PointCloudPrimitive",function(){}),e("qtek-2d/context/tool/SplayTree",["require"],function(){function a(){}return a.Node=function(a,b){this.key=a,this.value=b,this.left=null,this.right=null},a.Node.prototype.traverse=function(a,b){for(var c=this;c;){var d=c.left;d&&d.traverse(a,b),a(c,b),c=c.right}},a.prototype.root_=null,a.prototype.isEmpty=function(){return!this.root_},a.prototype.insert=function(b,c){if(this.isEmpty())return this.root_=new a.Node(b,c),this.root_;if(this.splay_(b),this.root_.key!=b){var d=new a.Node(b,c);return b>this.root_.key?(d.left=this.root_,d.right=this.root_.right,this.root_.right=null):(d.right=this.root_,d.left=this.root_.left,this.root_.left=null),this.root_=d,d}},a.prototype.remove=function(a){if(this.isEmpty())throw Error("Key not found: "+a);if(this.splay_(a),this.root_.key!=a)throw Error("Key not found: "+a);var b=this.root_;if(this.root_.left){var c=this.root_.right;this.root_=this.root_.left,this.splay_(a),this.root_.right=c}else this.root_=this.root_.right;return b},a.prototype.find=function(a){return this.isEmpty()?null:(this.splay_(a),this.root_.key==a?this.root_:null)},a.prototype.findMax=function(a){if(this.isEmpty())return null;for(var b=a||this.root_;b.right;)b=b.right;return b},a.prototype.findGreatestLessThan=function(a){return this.isEmpty()?null:(this.splay_(a),this.root_.key<a?this.root_:this.root_.left?this.findMax(this.root_.left):null)},a.prototype.exportKeys=function(){var a=[];return this.isEmpty()||this.root_.traverse(function(b){a.push(b.key)}),a},a.prototype.splay_=function(b){if(!this.isEmpty()){var c,d,e;c=d=e=new a.Node(null,null);for(var f=this.root_;;)if(b<f.key){if(!f.left)break;if(b<f.left.key){var g=f.left;if(f.left=g.right,g.right=f,f=g,!f.left)break}e.left=f,e=f,f=f.left}else{if(!(b>f.key))break;if(!f.right)break;if(b>f.right.key){var g=f.right;if(f.right=g.left,g.left=f,f=g,!f.right)break}d.right=f,d=f,f=f.right}d.right=f.left,e.left=f.right,f.left=c.right,f.right=c.left,this.root_=f}},a.prototype.traverse=function(a,b){this.root_&&this.root_.traverse(a,b)},a.prototype.traverseBreadthFirst=function(a){if(!a(this.root_.value))for(var b=[this.root_],c=1;c>0;){for(var d=new Array(2*b.length),e=0,f=0;c>f;f++){var g=b[f],h=g.left,i=g.right;if(h){if(a(h.value))return;d[e++]=h}if(i){if(a(i.value))return;d[e++]=i}}b=d,c=e}},a.prototype.clear=function(){this.root_=null},a}),e("qtek/core/request",["require"],function(){function a(a){var b=new XMLHttpRequest;b.open("get",a.url),b.responseType=a.responseType||"text",a.onprogress&&(b.onprogress=function(b){if(b.lengthComputable){var c=b.loaded/b.total;a.onprogress(c,b.loaded,b.total)}else a.onprogress(null)}),b.onload=function(){a.onload&&a.onload(b.response)},a.onerror&&(b.onerror=a.onerror),b.send(null)}return{get:a}}),e("qtek-2d/shape/Circle",["require","../Node","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("qtek/math/Vector2"),d=b.derive(function(){return{center:new c,radius:0}},{computeBoundingBox:function(){this.boundingBox={min:new c(this.center.x-this.radius,this.center.y-this.radius),max:new c(this.center.x+this.radius,this.center.y+this.radius)}},draw:function(a){a.beginPath(),a.arc(this.center.x,this.center.y,this.radius,0,2*Math.PI,!1),this.stroke&&a.stroke(),this.fill&&a.fill()},intersect:function(){return vec2.len([this.center[0]-x,this.center[1]-y])<this.radius}});return d}),e("qtek-2d/util",["require","qtek/math/Vector2","glmatrix"],function(a){var b=a("qtek/math/Vector2"),c=a("glmatrix"),d=(c.vec2,new b,{fixPos:function(a){return a.x+=.5,a.y+=.5,a},fixPosArray:function(a){for(var b=a.length,c=0;b>c;c++)this.fixPos(a[c]);return a},computeBoundingBox:function(a,b,c){for(var d=a[0].x,e=a[0].x,f=a[0].y,g=a[0].y,h=1;h<a.length;h++){var i=a[h];i.x<d&&(d=i.x),i.x>e&&(e=i.x),i.y<f&&(f=i.y),i.y>g&&(g=i.y)}b.set(d,f),c.set(e,g)},computeCubeBezierBoundingBox:function(a,b,c,e,f,g){var h=d._computeCubeBezierExtremitiesDim(a.x,b.x,c.x,e.x),i=d._computeCubeBezierExtremitiesDim(a.y,b.y,c.y,e.y);h.push(a.x,e.x),i.push(a.y,e.y);var j=Math.min.apply(null,h),k=Math.max.apply(null,h),l=Math.min.apply(null,i),m=Math.max.apply(null,i);f.set(j,l),g.set(k,m)},_computeCubeBezierExtremitiesDim:function(a,b,c,d){var e=[],f=6*c-12*b+6*a,g=9*b+3*d-3*a-9*c,h=3*b-3*a,i=f*f-4*g*h;
if(i>0){var j=Math.sqrt(i),k=(-f+j)/(2*g),l=(-f-j)/(2*g);e.push(k,l)}else 0==i&&e.push(-f/(2*g));for(var m=[],n=0;n<e.length;n++){var o=e[n];if(Math.abs(2*g*o+f)>1e-4&&1>o&&o>0){var p=1-o,q=p*p*p*a+3*p*p*o*b+3*p*o*o*c+o*o*o*d;m.push(q)}}return m},computeQuadraticBezierBoundingBox:function(a,c,e,f,g){var h=a.x+e.x-2*c.x;if(0===h)var i=.5;else var i=(a.x-c.x)/h;if(h=a.y+e.y-2*c.y,0===h)var j=.5;else var j=(a.y-c.y)/h;i=Math.max(Math.min(i,1),0),j=Math.max(Math.min(j,1),0);var k=1-i,l=1-j,m=k*k*a.x+2*k*i*c.x+i*i*e.x,n=k*k*a.y+2*k*i*c.y+i*i*e.y,o=l*l*a.x+2*l*j*c.x+j*j*e.x,p=l*l*a.y+2*l*j*c.y+j*j*e.y;return d.computeBoundingBox([a.clone(),e.clone(),new b(m,n),new b(o,p)],f,g)},computeArcBoundingBox:function(){var a=new b,c=new b,e=[new b,new b,new b,new b];return function(b,f,g,h,i,j,k){i=i?1:-1,a.set(Math.cos(g),Math.sin(g)*i).scale(f).add(b),c.set(Math.cos(h),Math.sin(h)*i).scale(f).add(b),g%=2*Math.PI,0>g&&(g+=2*Math.PI),h%=2*Math.PI,0>h&&(h+=2*Math.PI),g>h&&(h+=2*Math.PI);for(var l=0,m=0;h>m;m+=Math.PI/2)m>g&&e[l++].set(Math.cos(m),Math.sin(m)*i).scale(f).add(b);var n=e.slice(0,l);n.push(a,c),d.computeBoundingBox(n,j,k)}}()});return d}),e("qtek-2d/shape/Rectangle",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=(a("../util"),a("qtek/math/Vector2")),d=b.derive(function(){return{start:new c(0,0),size:new c(0,0)}},{computeBoundingBox:function(){return{min:this.start.clone(),max:this.size.clone().add(this.start)}},draw:function(a){var b=this.start;a.beginPath(),a.rect(b.x,b.y,this.size.x,this.size.y),this.stroke&&a.stroke(),this.fill&&a.fill()},intersect:function(a,b){return this.intersectBoundingBox(a,b)}});return d}),e("qtek-2d/shape/Ellipse",["require","../Node","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("qtek/math/Vector2"),d=b.derive(function(){return{center:new c,radius:new c}},{computeBoundingBox:function(){this.boundingBox={min:this.center.clone().sub(this.radius),max:this.center.clone().add(this.radius)}},draw:function(a){a.save(),a.translate(this.center.x,this.center.y),a.scale(1,this.radius.y/this.radius.x),a.beginPath(),a.arc(0,0,this.radius.x,0,2*Math.PI,!1),this.stroke&&a.stroke(),this.fill&&a.fill(),a.restore()},intersect:function(){return vec2.len([this.center[0]-x,this.center[1]-y])<this.radius}});return d}),e("qtek-2d/shape/Line",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("../util"),d=a("qtek/math/Vector2"),e=b.derive(function(){return{start:new d,end:new d,width:0}},{computeBoundingBox:function(){this.boundingBox=c.computeBoundingBox([this.start,this.end],this.boundingBox.min,this.boundingBox.max),this.boundingBox.min.x==this.boundingBox.max.x&&(this.boundingBox.min.x-=this.width/2,this.boundingBox.max.x+=this.width/2),this.boundingBox.min.y==this.boundingBox.max.y&&(this.boundingBox.min.y-=this.width/2,this.boundingBox.max.y+=this.width/2)},draw:function(a){var b=this.start,c=this.end;a.beginPath(),a.moveTo(b.x,b.y),a.lineTo(c.x,c.y),a.stroke()},intersect:function(){var a=new d,b=new d,c=new d;return function(d,e){if(!this.intersectBoundingBox(d,e))return!1;var f=this.start,g=this.end;a.set(d,e),b.copy(a).sub(f),c.copy(g).sub(f);var h=b.length(),i=c.length(),j=h*b.scale(1/h).dot(i.scale(1/i)),k=h*h-j*j;return k<this.width*this.width*.25}}});return e}),e("qtek-2d/shape/Path",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("../util"),d=a("qtek/math/Vector2"),e=new d,f=new d,g=b.derive(function(){return{segments:[],closePath:!1}},{computeBoundingBox:function(){var a=this.segments.length,b=this.segments,d=this.boundingBox.min,g=this.boundingBox.max;d.set(999999,999999),g.set(-999999,-999999);for(var h=1;a>h;h++)if(b[h-1].handleOut||b[h].handleIn){{c.computeCubeBezierBoundingBox(b[h-1].point,b[h-1].handleOut||b[h-1].point,b[h].handleIn||b[h].point,b[h].point,e,f)}d.min(e),g.max(f)}else d.min(b[h-1].point),d.min(b[h].point),g.max(b[h-1].point),g.max(b[h].point)},draw:function(a){var b=this.segments.length,c=this.segments;a.beginPath(),a.moveTo(c[0].point.x,c[0].point.y);for(var d=1;b>d;d++)if(c[d-1].handleOut||c[d].handleIn){var e=c[d-1].handleOut||c[d-1].point,f=c[d].handleIn||c[d].point;a.bezierCurveTo(e.x,e.y,f.x,f.y,c[d].point.x,c[d].point.y)}else a.lineTo(c[d].point.x,c[d].point.y);if(this.closePath)if(c[b-1].handleOut||c[0].handleIn){var e=c[b-1].handleOut||c[b-1].point,f=c[0].handleIn||c[0].point;a.bezierCurveTo(e.x,e.y,f.x,f.y,c[0].point.x,c[0].point.y)}else a.lineTo(c[0].point.x,c[0].point.y);this.fill&&a.fill(),this.stroke&&a.stroke()},smooth:function(a){for(var b=this.segments.length,c=this.segments,e=new d,f=0;b>f;f++){var g=c[f].point,h=0==f?c[b-1].point:c[f-1].point,i=f==b-1?c[0].point:c[f+1].point,a=c[f].smoothLevel||a||1;e.copy(i).sub(h).scale(.25),e.scale(a),c[f].handleIn?c[f].handleIn.copy(g).sub(e):c[f].handleIn=g.clone().sub(e),c[f].handleOut?c[f].handleOut.copy(g).add(e):c[f].handleOut=g.clone().add(e)}},pushPoints:function(a){for(var b=0;b<a.length;b++)this.segments.push({point:a[b],handleIn:null,handleOut:null})}});return g}),e("qtek-2d/shape/Polygon",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("../util"),d=a("qtek/math/Vector2"),e=b.derive(function(){return{points:[]}},{computeBoundingBox:function(){this.boundingBox=c.computeBoundingBox(this.points,this.boundingBox.min,this.boundingBox.max)},draw:function(a){var b=this.points;a.beginPath(),a.moveTo(b[0].x,b[0].y);for(var c=1;c<b.length;c++)a.lineTo(b[c].x,b[c].y);a.closePath(),this.stroke&&a.stroke(),this.fill&&a.fill()},intersect:function(a,b){if(!this.intersectBoundingBox(a,b))return!1;for(var c=this.points.length,e=0,f=this.points,g=new d,h=new d,i=0;c>i;i++){g.set(a,b).sub(f[i]).normalize().negate();var j=(i+1)%c;h.set(a,b).sub(f[j]).normalize().negate();var k=Math.acos(g.dot(h));e+=k}return Math.length(e-2*Math.PI)<.001}});return e}),e("qtek-2d/shape/Text",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=(a("../util"),a("qtek/math/Vector2")),d=b.derive(function(){return{text:"",start:new c,size:new c}},{computeBoundingBox:function(){this.boundingBox={min:this.start.clone(),max:this.start.clone().add(this.size)}},draw:function(a){var b=this.start;this.fill&&(this.size.length&&this.size.x?a.fillText(this.text,b.x,b.y,this.size.x):a.fillText(this.text,b.x,b.y)),this.stroke&&(this.size.length&&this.size.x?a.strokeText(this.text,b.x,b.y,this.size.x):a.strokeText(this.text,b.x,b.y))},resize:function(a){(!this.size.x||this.needResize)&&(this.size.x=a.measureText(this.text).width,this.size.y=a.measureText("m").width)},intersect:function(a,b){return this.intersectBoundingBox(a,b)}});return d}),e("qtek-2d/shape/TextBox",["require","../Node","qtek/math/Vector2","./Text","qtek/core/util"],function(a){var b=a("../Node"),c=a("qtek/math/Vector2"),d=a("./Text"),e=a("qtek/core/util"),f=b.derive(function(){return{start:new c,width:0,wordWrap:!1,wordBreak:!1,lineHeight:0,stroke:!1,_texts:[]}},function(){this._oldText=""},{computeBoundingBox:function(){},draw:function(a){if(this.text!=this._oldText)if(this._oldText=this.text,this.font&&(a.font=this.font),this.wordBreak)this._texts=this.computeWordBreak(a);else if(this.wordWrap)this._texts=this.computeWordWrap(a);else{var b=new d({text:this.text});this.extendCommonProperties(b),this._texts=[b]}a.save(),a.textBaseline="top";for(var c=0;c<this._texts.length;c++){var e=this._texts[c];e.draw(a)}a.restore()},computeWordWrap:function(a){if(this.text){for(var b,e,f,g=this.text.split(" "),h=g.length,i=0,j=[],k=a.measureText("m").width,l=0;h>l;l++)e=l==h-1?g[l]:g[l]+" ",b=a.measureText(e).width,i+b>this.width||!f?(f=new d({text:e,start:this.start.clone().add(new c(0,this.lineHeight*(j.length+1)-k))}),this.extendCommonProperties(f),j.push(f),i=b):(i+=b,f.text+=e);return j}},computeWordBreak:function(a){if(this.text){for(var b,e,f,g=this.text.length,h=a.measureText(this.text[0]).width,i=[],j=a.measureText("m").width,k=0;g>k;k++)if(e=this.text[k],b=a.measureText(e).width,h+b>this.width||!f){var f=new d({text:e,start:this.start.clone().add(new c(0,this.lineHeight*(i.length+1)-j))});this.extendCommonProperties(f),i.push(f),h=b}else h+=b,f.text+=e;return i}},extendCommonProperties:function(a){e.extend(a,{fill:this.fill,stroke:this.stroke})},intersect:function(){}});return f}),e("qtek-2d/shape/SVGPath",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("../util"),d=a("qtek/math/Vector2"),e={m:1,M:1,z:1,Z:1,l:1,L:1,h:1,H:1,v:1,V:1,c:1,C:1,s:1,S:1,q:1,Q:1,t:1,T:1,a:1,A:1},f=b.derive(function(){return{description:"",_ops:[]}},{draw:function(a){this._ops.length||this.parse(),a.beginPath();for(var b=0;b<this._ops.length;b++){var c=this._ops[b];switch(c[0]){case"m":a.moveTo(c[1]||0,c[2]||0);break;case"l":a.lineTo(c[1]||0,c[2]||0);break;case"c":a.bezierCurveTo(c[1]||0,c[2]||0,c[3]||0,c[4]||0,c[5]||0,c[6]||0);break;case"q":a.quadraticCurveTo(c[1]||0,c[2]||0,c[3]||0,c[4]||0);break;case"z":a.closePath()}}this.fill&&a.fill(),this.stroke&&a.stroke()},computeBoundingBox:function(){var a=new d,b=new d,e=new d,f=new d,g=new d,h=new d;return function(){this._ops.length||this.parse();for(var i=new d(999999,999999),j=new d(-999999,-999999),k=0;k<this._ops.length;k++){var l=this._ops[k];switch(l[0]){case"m":a.set(l[1],l[2]);break;case"l":b.set(l[1],l[2]),a.copy(b),i.min(a).min(b),j.max(a).max(b);break;case"c":b.set(l[1],l[2]),e.set(l[3],l[4]),f.set(l[5],l[6]),c.computeCubeBezierBoundingBox(a,b,e,f,g,h),a.copy(f),i.min(g),j.max(h);break;case"q":b.set(l[1],l[2]),e.set(l[3],l[4]);{c.computeQuadraticBezierBoundingBox(a,b,e,g,h)}a.copy(e),i.min(g),i.max(h);break;case"z":}}this.boundingBox={min:i,max:j}}}(),parse:function(a){function b(){return p=k[n+1],k[n++]}function c(){return p=k[n+1],q=k[n++],parseFloat(q)}var d=0,f=0,g=0,h=0,i=0,j=0;a=a||this.description;var k=a.replace(/\s*,\s*/g," ");k=k.replace(/(-)/g," $1"),k=k.replace(/([mMzZlLhHvVcCsSqQtTaA])/g," $1 "),k=k.split(/\s+/);for(var l="",m="",n=0,o=k.length,p=k[0];o>=n;)if(p)switch(e[p]&&(m=l,l=p,n++),l){case"m":d=c()+d,f=c()+f,this._ops.push(["m",d,f]);break;case"M":d=c(),f=c(),this._ops.push(["m",d,f]);break;case"z":case"Z":p=k[n],this._ops.push(["z"]);break;case"l":d=c()+d,f=c()+f,this._ops.push(["l",d,f]);break;case"L":d=c(),f=c(),this._ops.push(["l",d,f]);break;case"h":d=c()+d,this._ops.push(["l",d,f]);break;case"H":d=c(),this._ops.push(["l",d,f]);break;case"v":f=c()+f,this._ops.push(["l",d,f]);break;case"V":f=c(),this._ops.push(["l",d,f]);break;case"c":g=c()+d,h=c()+f,i=c()+d,j=c()+f,d=c()+d,f=c()+f,this._ops.push(["c",g,h,i,j,d,f]);break;case"C":g=c(),h=c(),i=c(),j=c(),d=c(),f=c(),this._ops.push(["c",g,h,i,j,d,f]);break;case"s":"c"===m||"C"===m||"s"===m||"S"===m?(g=2*d-i,h=2*f-j):(g=d,h=f),i=c()+d,j=c()+f,d=c()+d,f=c()+f,this._ops.push(["c",g,h,i,j,d,f]);break;case"S":"c"===m||"C"===m||"s"===m||"S"===m?(g=2*d-i,h=2*f-j):(g=d,h=f),i=c(),j=c(),d=c(),f=c(),this._ops.push(["c",g,h,i,j,d,f]);break;case"q":g=c()+d,h=c()+f,d=c()+d,f=c()+f,this._ops.push(["q",g,h,d,f]);break;case"Q":g=c(),h=c(),d=c(),f=c(),this._ops.push(["q",g,h,d,f]);break;case"t":"q"===m||"Q"===m||"t"===m||"T"===m?(g=2*d-g,h=2*f-h):(g=d,h=f),d=c()+d,f=c()+f,this._ops.push(["q",g,h,d,f]);break;case"T":"q"===m||"Q"===m||"t"===m||"T"===m?(g=2*d-g,h=2*f-h):(g=d,h=f),d=c(),f=c(),this._ops.push(["q",g,h,d,f]);break;case"a":case"A":c(),c(),c(),c(),c(),c(),c(),console.warn("Elliptical arc is not supported yet");break;default:b();continue}else p=k[++n];var q}});return f}),e("qtek-2d/loader/SVG",["require","qtek/core/Base","qtek/core/request","../Node","../shape/Circle","../shape/Rectangle","../shape/Ellipse","../shape/Line","../shape/Path","../shape/Polygon","../shape/TextBox","../shape/SVGPath","../LinearGradient","../RadialGradient","../Pattern","../Style","qtek/math/Vector2","qtek/core/util"],function(a){function b(a,b){for(var c=a.firstChild;c;){if(1===c.nodeType){var d=c.getAttribute("offset");d=d.indexOf("%")>0?parseInt(d)/100:d?parseFloat(d):0;var e=c.getAttribute("stop-color")||"#000000";b.addColorStop(d,e)}c=c.nextSibling}}function c(a,b){b.stroke=a.stroke,b.fill=a.fill}function d(a){for(var b=a.trim().replace(/,/g," ").split(/\s+/),c=[],d=0;d<b.length;d+=2){var e=parseFloat(b[d]),f=parseFloat(b[d+1]);c.push(new u(e,f))}return c}function e(a,b,c){g(a,b);var d={fill:a.getAttribute("fill"),stroke:a.getAttribute("stroke"),lineWidth:a.getAttribute("stroke-width"),opacity:a.getAttribute("opacity"),lineDash:a.getAttribute("stroke-dasharray"),lineDashOffset:a.getAttribute("stroke-dashoffset"),lineCap:a.getAttribute("stroke-linecap"),lineJoin:a.getAttribute("stroke-linjoin"),miterLimit:a.getAttribute("stroke-miterlimit")};v.extend(d,h(a)),b.style=new t({fill:f(d.fill,c),stroke:f(d.stroke,c),lineWidth:parseFloat(d.lineWidth)||1,opacity:parseFloat(d.opacity)||1,lineDashOffset:d.lineDashOffset,lineCap:d.lineCap,lineJoin:d.lineJoin,miterLimit:parseFloat(d.miterLimit)}),d.lineDash&&(b.style.lineDash=d.lineDash.trim().split(/\s*,\s*/)),d.stroke&&"none"!==d.stroke&&(b.stroke=!0)}function f(a,b){var c=z.exec(a);if(c){var d=c[1].trim(),e=b[d];return e}return a}function g(a,b){var c=a.getAttribute("transform");if(c){var d=b.transform;d.identity();var e=[];c.replace(A,function(a,b,c){e.push(b,c)});for(var f=e.length-1;f>0;f-=2){var g=e[f],h=e[f-1];switch(h){case"translate":g=g.trim().split(/\s+/),d.translate(new u(parseFloat(g[0]),parseFloat(g[1]||0)));break;case"scale":g=g.trim().split(/\s+/),d.scale(new u(parseFloat(g[0]),parseFloat(g[1]||g[0])));break;case"rotate":g=g.trim().split(/\s*/),d.rotate(parseFloat(g[0]));break;case"skew":g=g.trim().split(/\s*/),console.warn("Skew transform is not supported yet");break;case"matrix":var g=g.trim().split(/\s*,\s*/),i=d._array;i[0]=parseFloat(g[0]),i[1]=parseFloat(g[1]),i[2]=parseFloat(g[2]),i[3]=parseFloat(g[3]),i[4]=parseFloat(g[4]),i[5]=parseFloat(g[5])}}}b.autoUpdate=!1}function h(a){var b=a.getAttribute("style");if(b){var c={};return b=b.replace(/\s*([;:])\s*/g,"$1"),b.replace(B,function(a,b,d){c[b]=d}),{fill:c.fill,stroke:c.stroke,lineWidth:c["stroke-width"],opacity:c.opacity,lineDash:c["stroke-dasharray"],lineDashOffset:c["stroke-dashoffset"],lineCap:c["stroke-linecap"],lineJoin:c["stroke-linjoin"],miterLimit:c["stroke-miterlimit"]}}return{}}var i=a("qtek/core/Base"),j=a("qtek/core/request"),k=a("../Node"),l=a("../shape/Circle"),m=a("../shape/Rectangle"),n=a("../shape/Ellipse"),o=a("../shape/Line"),p=a("../shape/Path"),q=a("../shape/Polygon"),r=(a("../shape/TextBox"),a("../shape/SVGPath")),s=a("../LinearGradient"),t=(a("../RadialGradient"),a("../Pattern"),a("../Style")),u=a("qtek/math/Vector2"),v=a("qtek/core/util"),w=i.derive(function(){return{defs:{},root:null}},{load:function(a){var b=this;this.defs={},j.get({url:a,onprogress:function(a,c,d){b.trigger("progress",a,c,d)},onerror:function(a){b.trigger("error",a)},responseType:"text",onload:function(a){b.parse(a)}})},parse:function(a){if("string"==typeof a)for(var b=new DOMParser,c=b.parseFromString(a,"text/xml"),d=c.firstChild;"svg"!=d.nodeName.toLowerCase()||1!=d.nodeType;)d=d.nextSibling;else var d=a;var e=new k;this.root=e;{var f=d.getAttribute("viewBox")||"",g=f.split(/\s+/),h=(parseFloat(d.getAttribute("width")||0),parseFloat(d.getAttribute("height")||0),parseFloat(g[0]||0)),i=parseFloat(g[1]||0);parseFloat(g[2]),parseFloat(g[3])}e.position.set(h,i);for(var j=d.firstChild;j;)this._parseNode(j,e),j=j.nextSibling;return this.trigger("success",e),e},_parseNode:function(a,b){var c=a.nodeName.toLowerCase();if("defs"===c&&(this._isDefine=!0),this._isDefine){var d=y[c];if(d){var e=d.call(this,a),f=a.getAttribute("id");f&&(this.defs[f]=e)}}else{var d=x[c];if(d){var g=d.call(this,a,b);b.add(g)}}for(var h=a.firstChild;h;)1===h.nodeType&&this._parseNode(h,g),h=h.nextSibling;"defs"===c&&(this._isDefine=!1)}}),x={g:function(a,b){var d=new k;return b&&c(b,d),e(a,d,this.defs),d},rect:function(a,b){var d=new m;b&&c(b,d),e(a,d,this.defs);{var f=parseFloat(a.getAttribute("x")||0),g=parseFloat(a.getAttribute("y")||0);parseFloat(a.getAttribute("width")||0),parseFloat(a.getAttribute("height")||0)}return d.start.set(f,g),d.size.set(f,g),d},circle:function(a,b){var d=new l;b&&c(b,d),e(a,d,this.defs);var f=parseFloat(a.getAttribute("cx")||0),g=parseFloat(a.getAttribute("cy")||0),h=parseFloat(a.getAttribute("r")||0);return d.center.set(f,g),d.radius=h,d},line:function(a,b){var d=new o;b&&c(b,d),e(a,d,this.defs);var f=parseFloat(a.getAttribute("x1")||0),g=parseFloat(a.getAttribute("y1")||0),h=parseFloat(a.getAttribute("x2")||0),i=parseFloat(a.getAttribute("y2")||0);return d.start.set(f,g),d.end.set(h,i),d},ellipse:function(a,b){var d=new n;b&&c(b,d),e(a,d,this.defs);var f=parseFloat(a.getAttribute("cx")||0),g=parseFloat(a.getAttribute("cy")||0),h=parseFloat(a.getAttribute("rx")||0),i=parseFloat(a.getAttribute("ry")||0);return d.center.set(f,g),d.radius.set(h,i),d},polygon:function(a,b){var f=a.getAttribute("points");f&&(f=d(f));var g=new q({points:f});return b&&c(b,g),e(a,g,this.defs),g},polyline:function(a,b){var f=new p;b&&c(b,f),e(a,f,this.defs);var g=a.getAttribute("points");return g&&(g=d(g),f.pushPoints(g)),f},image:function(){},text:function(){},path:function(a,b){var d=new r;b&&c(b,d),e(a,d,this.defs);var f=a.getAttribute("d")||"";return d.description=f,d}},y={lineargradient:function(a){var c=parseInt(a.getAttribute("x1")||0),d=parseInt(a.getAttribute("y1")||0),e=parseInt(a.getAttribute("x2")||10),f=parseInt(a.getAttribute("y2")||0),g=new s;return g.start.set(c,d),g.end.set(e,f),b(a,g),g},radialgradient:function(){}},z=/url\(\s*#(.*?)\)/,A=/(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.,]*)\)/g,B=/(\S*?):(.*?);/g;return w}),e("qtek-2d/picking/Box",function(){}),e("qtek-2d/picking/Pixel",["require","qtek/core/Base"],function(a){function b(a){var b=a>>16,c=a-(b<<8)>>8,d=a-(b<<16)-(c<<8);return[b,c,d]}function c(a,b,c){return(a<<16)+(b<<8)+c}var d=a("qtek/core/Base"),e=d.derive(function(){return{downSampleRatio:1,width:100,height:100,lookupOffset:1,_canvas:null,_context:null,_imageData:null,_lookupTable:[]}},function(){this.init()},{init:function(){var a=document.createElement("canvas");this._canvas=a,this._context=a.getContext("2d"),this.resize(this.width,this.height)},setPrecision:function(a){this._canvas.width=this.width*a,this._canvas.height=this.height*a,this.downSampleRatio=a},resize:function(a,b){this._canvas.width=a*this.downSampleRatio,this._canvas.height=b*this.downSampleRatio,this.width=a,this.height=b},update:function(a,b){var c=this._context;if(c.clearRect(0,0,this._canvas.width,this._canvas.height),c.save(),c.scale(this.downSampleRatio,this.downSampleRatio),this._lookupTable.length=0,b){var d=b.getViewMatrix()._array;c.transform(d[0],d[1],d[2],d[3],d[4],d[5])}this._renderNode(a,c),c.restore();var e=c.getImageData(0,0,this._canvas.width,this._canvas.height);this._imageData=e.data},_renderNode:function(a,c){c.save(),a.updateTransform();var d=a.transform._array;if(c.transform(d[0],d[1],d[2],d[3],d[4],d[5]),a.clip&&c.clip(),a.draw&&a.enablePicking===!0){var e=this._lookupTable,f=b(e.length+this.lookupOffset),g="rgb("+f.join(",")+")";this._lookupTable.push(a),c.fillStyle=g,c.strokeStyle=g,a.draw(c,!0)}for(var h=a.getSortedRenderQueue(),i=0;i<h.length;i++){var j=h[i];this._renderNode(j,c)}c.restore()},pick:function(a,b){{var c=this.downSampleRatio;this._canvas.width,this._canvas.height}a=Math.ceil(c*a),b=Math.ceil(c*b);for(var d,e=[this._sample(a,b),this._sample(a-1,b),this._sample(a+1,b),this._sample(a,b-1),this._sample(a,b+1)],f={},g=0,h=0;h<e.length;h++){var i=e[h];f[i]?f[i]++:f[i]=1,f[i]>g&&(g=f[i],d=i)}var i=d-this.lookupOffset;if(i&&g>=2){var j=this._lookupTable[i];return j}},_sample:function(a,b){a=Math.max(Math.min(a,this._canvas.width),1),b=Math.max(Math.min(b,this._canvas.height),1);var d=4*((b-1)*this._canvas.width+(a-1)),e=this._imageData,f=e[d],g=e[d+1],h=e[d+2];return c(f,g,h)}});return e}),e("qtek-2d/shape/Image",["require","../Node","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("qtek/math/Vector2"),d={},e=b.derive(function(){return{image:null,start:new c,size:null}},{computeBoundingBox:function(){this.size&&(this.boundingBox={min:this.start.clone(),max:this.start.clone().add(this.size)})},draw:function(a,b){this.image&&!b&&(this.size?a.drawImage(this.image,this.start.x,this.start.y,this.size.x,this.size.y):a.drawImage(this.image,this.start.x,this.start.y))},intersect:function(a,b){return this.intersectBoundingBox(a,b)}});return e.load=function(a,b){if(d[a]){var c=d[a];c.constructor==Array?c.push(b):b(c)}else{d[a]=[b];var c=new Image;c.onload=function(){d[a].forEach(function(a){a(c)}),d[a]=c,c.onload=null},c.src=a}},e}),e("qtek-2d/shape/RoundedRectangle",["require","../Node","../util","qtek/math/Vector2"],function(a){var b=a("../Node"),c=a("../util"),d=a("qtek/math/Vector2"),e=b.derive(function(){return{start:new d,size:new d,radius:0}},{computeBoundingBox:function(){this.boundingBox={min:this.start.clone(),max:this.size.clone().add(this.start)}},draw:function(a){if(this.radius.constructor==Number)var b=[this.radius,this.radius,this.radius,this.radius];else if(2==this.radius.length)var b=[this.radius[0],this.radius[1],this.radius[0],this.radius[1]];else var b=this.radius;var e=this.fixAA?c.fixPos(this.start.clone()):this.start,f=this.size,g=(new d).copy(e).add(new d(b[0],0)),h=(new d).copy(e).add(new d(f.x,0)),i=(new d).copy(e).add(f),j=(new d).copy(e).add(new d(0,f.y));a.beginPath(),a.moveTo(g.x,g.y),b[1]?a.arcTo(h.x,h.y,i.x,i.y,b[1]):a.lineTo(h.x,h.y),b[2]?a.arcTo(i.x,i.y,j.x,j.y,b[2]):a.lineTo(i.x,i.y),b[3]?a.arcTo(j.x,j.y,e.x,e.y,b[3]):a.lineTo(j.x,j.y),b[0]?a.arcTo(e.x,e.y,h.x,h.y,b[0]):a.lineTo(e.x,e.y),this.stroke&&a.stroke(),this.fill&&a.fill()},intersect:function(){return!1}});return e}),e("qtek-2d/qtek-2d",["require","qtek-2d/CanvasRenderer","qtek-2d/Gradient","qtek-2d/LinearGradient","qtek-2d/Node","qtek-2d/Pattern","qtek-2d/RadialGradient","qtek-2d/Style","qtek-2d/context/BezierCurveSegment","qtek-2d/context/CanvasElement","qtek-2d/context/CanvasImage","qtek-2d/context/CanvasPath","qtek-2d/context/CanvasPointCloud","qtek-2d/context/CanvasSubpath","qtek-2d/context/Context2D","qtek-2d/context/DeferredPainter","qtek-2d/context/DrawingStyle","qtek-2d/context/Geometry2D","qtek-2d/context/ImagePrimitive","qtek-2d/context/LineSegment","qtek-2d/context/Painter","qtek-2d/context/PathPrimitive","qtek-2d/context/PointCloudPrimitive","qtek-2d/context/Polygon","qtek-2d/context/Primitive","qtek-2d/context/States","qtek-2d/context/tool/CachedList","qtek-2d/context/tool/GJK","qtek-2d/context/tool/ImageAtlas","qtek-2d/context/tool/SplayTree","qtek-2d/context/tool/Triangulation2","qtek-2d/context/tool/color","qtek-2d/context/tool/math","qtek-2d/loader/SVG","qtek-2d/picking/Box","qtek-2d/picking/Pixel","qtek-2d/shape/Circle","qtek-2d/shape/Ellipse","qtek-2d/shape/Image","qtek-2d/shape/Line","qtek-2d/shape/Path","qtek-2d/shape/Polygon","qtek-2d/shape/Rectangle","qtek-2d/shape/RoundedRectangle","qtek-2d/shape/SVGPath","qtek-2d/shape/Text","qtek-2d/shape/TextBox","qtek-2d/util"],function(a){var b={CanvasRenderer:a("qtek-2d/CanvasRenderer"),Gradient:a("qtek-2d/Gradient"),LinearGradient:a("qtek-2d/LinearGradient"),Node:a("qtek-2d/Node"),Pattern:a("qtek-2d/Pattern"),RadialGradient:a("qtek-2d/RadialGradient"),Style:a("qtek-2d/Style"),context:{BezierCurveSegment:a("qtek-2d/context/BezierCurveSegment"),CanvasElement:a("qtek-2d/context/CanvasElement"),CanvasImage:a("qtek-2d/context/CanvasImage"),CanvasPath:a("qtek-2d/context/CanvasPath"),CanvasPointCloud:a("qtek-2d/context/CanvasPointCloud"),CanvasSubpath:a("qtek-2d/context/CanvasSubpath"),Context2D:a("qtek-2d/context/Context2D"),DeferredPainter:a("qtek-2d/context/DeferredPainter"),DrawingStyle:a("qtek-2d/context/DrawingStyle"),Geometry2D:a("qtek-2d/context/Geometry2D"),ImagePrimitive:a("qtek-2d/context/ImagePrimitive"),LineSegment:a("qtek-2d/context/LineSegment"),Painter:a("qtek-2d/context/Painter"),PathPrimitive:a("qtek-2d/context/PathPrimitive"),PointCloudPrimitive:a("qtek-2d/context/PointCloudPrimitive"),Polygon:a("qtek-2d/context/Polygon"),Primitive:a("qtek-2d/context/Primitive"),States:a("qtek-2d/context/States"),tool:{CachedList:a("qtek-2d/context/tool/CachedList"),GJK:a("qtek-2d/context/tool/GJK"),ImageAtlas:a("qtek-2d/context/tool/ImageAtlas"),SplayTree:a("qtek-2d/context/tool/SplayTree"),Triangulation2:a("qtek-2d/context/tool/Triangulation2"),color:a("qtek-2d/context/tool/color"),math:a("qtek-2d/context/tool/math")}},loader:{SVG:a("qtek-2d/loader/SVG")},picking:{Box:a("qtek-2d/picking/Box"),Pixel:a("qtek-2d/picking/Pixel")},shape:{Circle:a("qtek-2d/shape/Circle"),Ellipse:a("qtek-2d/shape/Ellipse"),Image:a("qtek-2d/shape/Image"),Line:a("qtek-2d/shape/Line"),Path:a("qtek-2d/shape/Path"),Polygon:a("qtek-2d/shape/Polygon"),Rectangle:a("qtek-2d/shape/Rectangle"),RoundedRectangle:a("qtek-2d/shape/RoundedRectangle"),SVGPath:a("qtek-2d/shape/SVGPath"),Text:a("qtek-2d/shape/Text"),TextBox:a("qtek-2d/shape/TextBox")},util:a("qtek-2d/util")};return b}),e("qtek-2d",["qtek-2d/qtek-2d"],function(a){return a}),qtek2d=d("qtek/2d/qtek-2d");for(var f in qtek2d)a[f]=qtek2d[f]});